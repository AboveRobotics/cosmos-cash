// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: regulator/query.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("regulator/query.proto", fileDescriptor_7f5e3f6ff24c9c16) }

var fileDescriptor_7f5e3f6ff24c9c16 = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0xcf, 0x41, 0x4a, 0xc6, 0x30,
	0x10, 0x05, 0xe0, 0x76, 0xa1, 0x42, 0x97, 0x82, 0x9b, 0x22, 0x39, 0x80, 0x60, 0x86, 0x5a, 0xbc,
	0x80, 0x17, 0x10, 0xb7, 0xee, 0x26, 0x25, 0xa4, 0x81, 0x34, 0x13, 0x93, 0x69, 0xb1, 0xb7, 0xf0,
	0x58, 0x2e, 0xbb, 0x74, 0x29, 0xed, 0x45, 0x7e, 0xda, 0x40, 0xff, 0xfd, 0xf7, 0xe6, 0xbd, 0xa9,
	0x1e, 0xa2, 0x36, 0xa3, 0x43, 0xa6, 0x08, 0x5f, 0xa3, 0x8e, 0xb3, 0x0c, 0x91, 0x98, 0xee, 0x05,
	0x3a, 0x67, 0xbd, 0xb2, 0x9c, 0x64, 0x47, 0x69, 0xa0, 0xd4, 0x61, 0xea, 0xe5, 0x69, 0xeb, 0x47,
	0x43, 0x64, 0x9c, 0x06, 0x0c, 0x16, 0xd0, 0x7b, 0x62, 0x64, 0x4b, 0x3e, 0xe5, 0x74, 0xfd, 0x94,
	0x33, 0xa0, 0x30, 0xe9, 0x7c, 0x16, 0xa6, 0x46, 0x69, 0xc6, 0x06, 0x02, 0x1a, 0xeb, 0x0f, 0x9c,
	0xed, 0xcb, 0x5d, 0x75, 0xf3, 0xb1, 0x8b, 0xb7, 0xf7, 0xdf, 0x55, 0x94, 0xcb, 0x2a, 0xca, 0xff,
	0x55, 0x94, 0x3f, 0x9b, 0x28, 0x96, 0x4d, 0x14, 0x7f, 0x9b, 0x28, 0x3e, 0x5f, 0x8d, 0xe5, 0x7e,
	0x54, 0xb2, 0xa3, 0x01, 0xce, 0x5d, 0x90, 0x3b, 0x9e, 0xf7, 0x61, 0x30, 0xb5, 0xf0, 0x0d, 0xd7,
	0x4f, 0x78, 0x0e, 0x3a, 0xa9, 0xdb, 0xa3, 0xa0, 0xbd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x81, 0x67,
	0x3a, 0x16, 0xe3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

// QueryServer is the server API for Query service.
type QueryServer interface {
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "allinbits.cosmoscash.regulator.Query",
	HandlerType: (*QueryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "regulator/query.proto",
}
