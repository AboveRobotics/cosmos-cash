{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cosmos Cash Summary Cosmos Cash is a protocol designed to be regulatory compliant that offers the same guarantees as traditional banking systems. Features that enable these guarantees are Know Your Customer (KYC), anti-money laundering (AML) tracking, Financial Action Task Force (FATF) travel rule, and identity management. Cosmos Cash uses a novel approach to identity management by leveraging W3C specifications for decentralized identifiers and verifiable credentials. Research paper For more information on the research behind the Cosmos Cash protocol, see the Cosmos Cash research paper: Cosmos Cash: Investigation into EU regulations affecting E-Money tokens Architecture The Cosmos Cash approach leverages open standards to reach its goals and to offer an open model that is compatible with third-party projects that use the open standards. In particular, the Cosmos Cash project uses: Self-sovereign identity ( SSI ) Decentralized identifier ( DID ) Verifiable credentials ( VC ) Zero-knowledge proofs ( ZKP ) For a detailed architecture description and design choices, visit the ADR section. Do you have questions or want to get in touch? Send us an email at cosmos-cash@tendermint.com .","title":"Cosmos Cash"},{"location":"#cosmos-cash","text":"","title":"Cosmos Cash"},{"location":"#summary","text":"Cosmos Cash is a protocol designed to be regulatory compliant that offers the same guarantees as traditional banking systems. Features that enable these guarantees are Know Your Customer (KYC), anti-money laundering (AML) tracking, Financial Action Task Force (FATF) travel rule, and identity management. Cosmos Cash uses a novel approach to identity management by leveraging W3C specifications for decentralized identifiers and verifiable credentials.","title":"Summary"},{"location":"#research-paper","text":"For more information on the research behind the Cosmos Cash protocol, see the Cosmos Cash research paper: Cosmos Cash: Investigation into EU regulations affecting E-Money tokens","title":"Research paper"},{"location":"#architecture","text":"The Cosmos Cash approach leverages open standards to reach its goals and to offer an open model that is compatible with third-party projects that use the open standards. In particular, the Cosmos Cash project uses: Self-sovereign identity ( SSI ) Decentralized identifier ( DID ) Verifiable credentials ( VC ) Zero-knowledge proofs ( ZKP ) For a detailed architecture description and design choices, visit the ADR section. Do you have questions or want to get in touch? Send us an email at cosmos-cash@tendermint.com .","title":"Architecture"},{"location":"ABOUT/","text":"Documentation How to use the Cosmos Cash Documentation. Documentation Overview Contributing Reference Overview In Cosmos Cash we use the Grand Unified Theory of Documentation (David Laing) as described by Divio as a basis for our documentation strategy. This approach outlines four specific use cases for documentation: Tutorials How-Tos Explanation Reference For further background please see the ADR relating to the documentation structure . Contributing Write all documentation following Google Documentation Best Practice Generate as much documentation as possible from the code. Raise a PR for all documentation changes Follow our Code of Conduct Reference Google Style Guide for Markdown Write the Docs global community Write the Docs Code of Conduct The good docs project Readme editor","title":"About Documentation"},{"location":"ABOUT/#documentation","text":"How to use the Cosmos Cash Documentation. Documentation Overview Contributing Reference","title":"Documentation"},{"location":"ABOUT/#overview","text":"In Cosmos Cash we use the Grand Unified Theory of Documentation (David Laing) as described by Divio as a basis for our documentation strategy. This approach outlines four specific use cases for documentation: Tutorials How-Tos Explanation Reference For further background please see the ADR relating to the documentation structure .","title":"Overview"},{"location":"ABOUT/#contributing","text":"Write all documentation following Google Documentation Best Practice Generate as much documentation as possible from the code. Raise a PR for all documentation changes Follow our Code of Conduct","title":"Contributing"},{"location":"ABOUT/#reference","text":"Google Style Guide for Markdown Write the Docs global community Write the Docs Code of Conduct The good docs project Readme editor","title":"Reference"},{"location":"Explanation/","text":"Explanation Documentation How to use the Cosmos Cash Explanation Documentation. Explanation Documentation Introduction Layout Topics Presentations Architecture Decisions Records (ADRs) Articles Discussions Contributing Reference Introduction This section contains Explanation documentation for Cosmos Cash. This content is intended to help readers with their understanding of Cosmos Cash and related topics . It is intended to be discursive, thoughtful, interesting, and occasionally educational. The content includes analysis and review of alternative approaches. For further background information please see the ADR relating to the documentation structure . Layout The scope and structure of the Explanation documentation follows this layout. Topics Topics are discursive documents that explore some particular feature or theme. For example, an article might investigate Decentralised Identity Documents or Self-Sovereign Identity. To contribute, create a folder in topics with a self-descriptive name. Add your content as needed. Presentations The Presentations file describes and links to presentations about Cosmos Cash at various events. Presentations also include YouTube videos, podcasts, interviews, and so on. Architecture Decisions Records (ADRs) ADRs are the mechanism for contributors to raise design proposals. In turn, the ADRs explain for subsequent contributors the rationale behind Cosmos Cash design and implementation. For example, ADR 002: Documentation Structure explains why the Cosmos Cash documentation structure was chosen. See the Architecture Decision Records (ADR) README file for more details about how to raise and propose an ADR. Articles This folder contains all articles relating to Cosmos Cash, includes papers, blog posts, and so on. For details, see Articles README . Discussions The explanation content includes articles, topics, and so on, and also includes discussion on relevant channels, including Pull Requests and Issues . Important Pull Requests are listed in this document. Future: Cosmos Cash currently doesn't have a Discord or Telegram Channel. When we do, the links will be added here as well Contributing The Explanation content should be dry, clear, and terse in style. All documentation is written following Google Documentation Best Practice Autogenerate documentation from the code whenever possible. Raise a PR for all documentation changes Follow our Code of Conduct Reference Google Style Guide for Markdown Write the Docs global community Write the Docs Code of Conduct","title":"About Explanation Documentation"},{"location":"Explanation/#explanation-documentation","text":"How to use the Cosmos Cash Explanation Documentation. Explanation Documentation Introduction Layout Topics Presentations Architecture Decisions Records (ADRs) Articles Discussions Contributing Reference","title":"Explanation Documentation"},{"location":"Explanation/#introduction","text":"This section contains Explanation documentation for Cosmos Cash. This content is intended to help readers with their understanding of Cosmos Cash and related topics . It is intended to be discursive, thoughtful, interesting, and occasionally educational. The content includes analysis and review of alternative approaches. For further background information please see the ADR relating to the documentation structure .","title":"Introduction"},{"location":"Explanation/#layout","text":"The scope and structure of the Explanation documentation follows this layout.","title":"Layout"},{"location":"Explanation/#topics","text":"Topics are discursive documents that explore some particular feature or theme. For example, an article might investigate Decentralised Identity Documents or Self-Sovereign Identity. To contribute, create a folder in topics with a self-descriptive name. Add your content as needed.","title":"Topics"},{"location":"Explanation/#presentations","text":"The Presentations file describes and links to presentations about Cosmos Cash at various events. Presentations also include YouTube videos, podcasts, interviews, and so on.","title":"Presentations"},{"location":"Explanation/#architecture-decisions-records-adrs","text":"ADRs are the mechanism for contributors to raise design proposals. In turn, the ADRs explain for subsequent contributors the rationale behind Cosmos Cash design and implementation. For example, ADR 002: Documentation Structure explains why the Cosmos Cash documentation structure was chosen. See the Architecture Decision Records (ADR) README file for more details about how to raise and propose an ADR.","title":"Architecture Decisions Records (ADRs)"},{"location":"Explanation/#articles","text":"This folder contains all articles relating to Cosmos Cash, includes papers, blog posts, and so on. For details, see Articles README .","title":"Articles"},{"location":"Explanation/#discussions","text":"The explanation content includes articles, topics, and so on, and also includes discussion on relevant channels, including Pull Requests and Issues . Important Pull Requests are listed in this document. Future: Cosmos Cash currently doesn't have a Discord or Telegram Channel. When we do, the links will be added here as well","title":"Discussions"},{"location":"Explanation/#contributing","text":"The Explanation content should be dry, clear, and terse in style. All documentation is written following Google Documentation Best Practice Autogenerate documentation from the code whenever possible. Raise a PR for all documentation changes Follow our Code of Conduct","title":"Contributing"},{"location":"Explanation/#reference","text":"Google Style Guide for Markdown Write the Docs global community Write the Docs Code of Conduct","title":"Reference"},{"location":"Explanation/presentations/","text":"Presentations Links to Cosmos Cash related slides, interviews, presentations. Slides Tendermint <> ECB - May 2021 Interviews Paddy Mchale interview with Jack Zampolin - July 2021 34 minutes Alessio interview Cryptocito on CBDCs 55 minutes Demos","title":"Presentations"},{"location":"Explanation/presentations/#presentations","text":"Links to Cosmos Cash related slides, interviews, presentations.","title":"Presentations"},{"location":"Explanation/presentations/#slides","text":"Tendermint <> ECB - May 2021","title":"Slides"},{"location":"Explanation/presentations/#interviews","text":"Paddy Mchale interview with Jack Zampolin - July 2021 34 minutes Alessio interview Cryptocito on CBDCs 55 minutes","title":"Interviews"},{"location":"Explanation/presentations/#demos","text":"","title":"Demos"},{"location":"Explanation/ADR/","text":"Architecture Decision Records (ADR) Use this location to record all high-level architecture decisions in the Cosmos Cash. Definitions Within the context of an ADR we define the following: An Architectural Decision ( AD ) is a software design choice that addresses a functional or non-functional requirement that is architecturally significant. An Architecturally Significant Requirement ( ASR ) is a requirement that has a measurable effect on a software system\u2019s architecture and quality. An Architectural Decision Record ( ADR ) captures a single AD, and is as often done when writing personal notes or meeting minutes. The collection of ADRs created and maintained in a project constitute its decision log. All these records are within the topic of Architectural Knowledge Management (AKM). You can read more about the ADR concept in the Documenting architecture decisions, the Reverb way blog post. Rationale ADRs are intended to be the primary mechanism for proposing new feature designs and new processes, for collecting community input on an issue, and for documenting the design decisions. An ADR should provide: Context on the relevant goals and the current state Proposed changes to achieve the goals Summary of pros and cons References Changelog Note the distinction between an ADR and a specification. The ADR provides the context, intuition, reasoning, and justification for a change in architecture, or for the architecture of something new. The specification is a summary of everything as it stands today. If recorded decisions turned out to be lacking the required substance, the process is to convene a discussion, record the new decisions here, and then modify the code to match. Creating new ADR Read about the PROCESS . Use RFC 2119 Keywords When writing ADRs, follow the same best practices for writing RFCs. When writing RFCs, key words are used to signify the requirements in the specification. These words are often capitalized: \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL. They are to be interpreted as described in RFC 2119 . ADR Table of Contents ADR XXX: Self Sovereign Identity","title":"About Architecture Decision Records (ADR)"},{"location":"Explanation/ADR/#architecture-decision-records-adr","text":"Use this location to record all high-level architecture decisions in the Cosmos Cash.","title":"Architecture Decision Records (ADR)"},{"location":"Explanation/ADR/#definitions","text":"Within the context of an ADR we define the following: An Architectural Decision ( AD ) is a software design choice that addresses a functional or non-functional requirement that is architecturally significant. An Architecturally Significant Requirement ( ASR ) is a requirement that has a measurable effect on a software system\u2019s architecture and quality. An Architectural Decision Record ( ADR ) captures a single AD, and is as often done when writing personal notes or meeting minutes. The collection of ADRs created and maintained in a project constitute its decision log. All these records are within the topic of Architectural Knowledge Management (AKM). You can read more about the ADR concept in the Documenting architecture decisions, the Reverb way blog post.","title":"Definitions"},{"location":"Explanation/ADR/#rationale","text":"ADRs are intended to be the primary mechanism for proposing new feature designs and new processes, for collecting community input on an issue, and for documenting the design decisions. An ADR should provide: Context on the relevant goals and the current state Proposed changes to achieve the goals Summary of pros and cons References Changelog Note the distinction between an ADR and a specification. The ADR provides the context, intuition, reasoning, and justification for a change in architecture, or for the architecture of something new. The specification is a summary of everything as it stands today. If recorded decisions turned out to be lacking the required substance, the process is to convene a discussion, record the new decisions here, and then modify the code to match.","title":"Rationale"},{"location":"Explanation/ADR/#creating-new-adr","text":"Read about the PROCESS .","title":"Creating new ADR"},{"location":"Explanation/ADR/#use-rfc-2119-keywords","text":"When writing ADRs, follow the same best practices for writing RFCs. When writing RFCs, key words are used to signify the requirements in the specification. These words are often capitalized: \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL. They are to be interpreted as described in RFC 2119 .","title":"Use RFC 2119 Keywords"},{"location":"Explanation/ADR/#adr-table-of-contents","text":"ADR XXX: Self Sovereign Identity","title":"ADR Table of Contents"},{"location":"Explanation/ADR/PROCESS/","text":"ADR Creation Process Copy the adr-template.md file. Use the following filename pattern: adr-next_number-title.md Create a draft Pull Request if you want to get an early feedback. Make sure the context and a solution is clear and well documented. Add an entry to a list in the README file. Create a Pull Request to propose a new ADR. ADR life cycle ADR creation is an iterative process. Instead of trying to solve all decisions in a single ADR pull request, we MUST initially understand the problem and collect feedback by having conversations in a GitHub Issue. Every ADR proposal SHOULD start with a new GitHub issue or be a result of existing Issues. The Issue must contain a brief proposal summary. After the motivation is validated, create a new document that is on the adr-template.md . An ADR solution doesn't have to arrive to the master branch with an accepted status in a single PR. If the motivation is clear and the solution is sound, we SHOULD be able to merge PRs iteratively and keep a proposed status. It's preferable to have an iterative approach rather than long, not merged Pull Requests. If a proposed ADR is merged, then the outstanding changes must be clearly documented in outstanding issues in ADR document notes or in a GitHub Issue. The PR SHOULD always be merged. In the case of a faulty ADR, we still prefer to merge it with a rejected status. The only time the ADR SHOULD NOT be merged is if the author abandons it. Merged ADRs SHOULD NOT be pruned. ADR status Status has two components: {CONSENSUS STATUS} {IMPLEMENTATION STATUS} IMPLEMENTATION STATUS is either Implemented or Not Implemented . Consensus Status DRAFT -> PROPOSED -> LAST CALL yyyy-mm-dd -> ACCEPTED | REJECTED -> SUPERSEEDED by ADR-xxx \\ | \\ | v v ABANDONED DRAFT : [optional] an ADR which is work in progress, not being ready for a general review. This is to present an early work and get an early feedback in a Draft Pull Request form. PROPOSED : an ADR covering a full solution architecture and still in the review - project stakeholders haven't reached an agreed yet. LAST CALL <date for the last call> : [optional] clear notify that we are close to accept updates. Changing a status to LAST CALL means that social consensus (of Cosmos Cash maintainers) has been reached and we still want to give it a time to let the community react or analyze. ACCEPTED : ADR which will represent a currently implemented or to be implemented architecture design. REJECTED : ADR can go from PROPOSED or ACCEPTED to rejected if the consensus among project stakeholders will decide so. SUPERSEEDED by ADR-xxx : ADR which has been superseded by a new ADR. ABANDONED : the ADR is no longer pursued by the original authors. Language used in ADR Write the context/background in the present tense. Avoid using a first, personal form.","title":"ADR Creation Process"},{"location":"Explanation/ADR/PROCESS/#adr-creation-process","text":"Copy the adr-template.md file. Use the following filename pattern: adr-next_number-title.md Create a draft Pull Request if you want to get an early feedback. Make sure the context and a solution is clear and well documented. Add an entry to a list in the README file. Create a Pull Request to propose a new ADR.","title":"ADR Creation Process"},{"location":"Explanation/ADR/PROCESS/#adr-life-cycle","text":"ADR creation is an iterative process. Instead of trying to solve all decisions in a single ADR pull request, we MUST initially understand the problem and collect feedback by having conversations in a GitHub Issue. Every ADR proposal SHOULD start with a new GitHub issue or be a result of existing Issues. The Issue must contain a brief proposal summary. After the motivation is validated, create a new document that is on the adr-template.md . An ADR solution doesn't have to arrive to the master branch with an accepted status in a single PR. If the motivation is clear and the solution is sound, we SHOULD be able to merge PRs iteratively and keep a proposed status. It's preferable to have an iterative approach rather than long, not merged Pull Requests. If a proposed ADR is merged, then the outstanding changes must be clearly documented in outstanding issues in ADR document notes or in a GitHub Issue. The PR SHOULD always be merged. In the case of a faulty ADR, we still prefer to merge it with a rejected status. The only time the ADR SHOULD NOT be merged is if the author abandons it. Merged ADRs SHOULD NOT be pruned.","title":"ADR life cycle"},{"location":"Explanation/ADR/PROCESS/#adr-status","text":"Status has two components: {CONSENSUS STATUS} {IMPLEMENTATION STATUS} IMPLEMENTATION STATUS is either Implemented or Not Implemented .","title":"ADR status"},{"location":"Explanation/ADR/PROCESS/#consensus-status","text":"DRAFT -> PROPOSED -> LAST CALL yyyy-mm-dd -> ACCEPTED | REJECTED -> SUPERSEEDED by ADR-xxx \\ | \\ | v v ABANDONED DRAFT : [optional] an ADR which is work in progress, not being ready for a general review. This is to present an early work and get an early feedback in a Draft Pull Request form. PROPOSED : an ADR covering a full solution architecture and still in the review - project stakeholders haven't reached an agreed yet. LAST CALL <date for the last call> : [optional] clear notify that we are close to accept updates. Changing a status to LAST CALL means that social consensus (of Cosmos Cash maintainers) has been reached and we still want to give it a time to let the community react or analyze. ACCEPTED : ADR which will represent a currently implemented or to be implemented architecture design. REJECTED : ADR can go from PROPOSED or ACCEPTED to rejected if the consensus among project stakeholders will decide so. SUPERSEEDED by ADR-xxx : ADR which has been superseded by a new ADR. ABANDONED : the ADR is no longer pursued by the original authors.","title":"Consensus Status"},{"location":"Explanation/ADR/PROCESS/#language-used-in-adr","text":"Write the context/background in the present tense. Avoid using a first, personal form.","title":"Language used in ADR"},{"location":"Explanation/ADR/adr-002-docs-structure/","text":"ADR 002: Documentation Structure Status ACCEPTED Abstract This ADR proposes a documentation strategy based on the Grand Unified Theory of Documentation (David Laing) as described by Divio . The documentation strategy outlines four specific use cases for documentation. Based on these use cases and other non-functional requirements, a structure is proposed that will address these concerns using GitHub as the Content Management System. The documentation strategy also proposes: The use and re-use of document and format templates Specific code owners for documentation Comment and commit templates combined with githook checks The outcome shall be focused, consistent, high quality documentation. Context Good documentation is important to the success of software projects. Writing excellent code doesn't end when your code compiles or even if your test coverage reaches 100%. It's easy to write something a computer understands, it's much harder to write something both a human and a computer understand. Your mission as a Code Health-conscious engineer is to write for humans first, computers second. Documentation is an important part of this skill. Google Documentation Best Practice The documentation use cases, as outlined by Divio are: Allow a new user to get started Show a user how to solve a specific problem Describe the machinery, for example, classes, functions, interfaces, parameters, and so on Explanation and context for design, scope, and so on The goals of well-structured and well-written documentation include: Findability: depending on the use case, the technical content can be discovered and accessed Style: The documentation is written in an appropriate style for the use case Consistency: Each type of documentation is written in a consistent style Scoped: Documentation is scoped to a specific use case; for example, a tutorial can provide links but does not include technical content that describes why the software works, a tutorial just teaches how to use it Additional Documentation non-functional use cases include: Technical content SHOULD BE as close to the code as reasonably practicable and strive to use the docs as code workflow Technical content SHOULD BE generated from code as much as possible Technical content SHOULD USE a consistent format Technical content SHOULD BE useable from within the repository Technical content COULD HAVE an automatic process that converts the content to a website based on Read The Docs , Gitbook , or other suitable hosting systems Decision To address the use cases outlined in the context, this ADR proposes the following decisions: Use GitHub as primary content management https://github.com/allinbits/cosmos-cash Use Markdown and LaTeX to deliver research publications Given GitHub will form the content management system, we propose the following structure: Structure The documentation structure shall use as much as possible a content structure similar to the Divio user cases . Tutorials How-to guides Reference Explanation Oriented to Learning A goal Information Understanding Must Allow a newcomer to get started Show how to solve a specific problem Describe the machinery Explain Takes the form of A lesson A series of steps A dry description A discursive explanation Analogy Teaching a child to cook Recipe in a cookery book An encyclopedia article A paper on culinary social history The specific implementation for Cosmos Cash SHOULD BE as per the following tree structure. / \u251c\u2500\u2500 README \u251c\u2500\u2500 CONTRIBUTING \u251c\u2500\u2500 TECHNICAL-SETUP \u251c\u2500\u2500 CODEOWNERS \u251c\u2500\u2500 x/ | \u251c\u2500\u2500 module_a/ | \u251c\u2500\u2500 README | \u251c\u2500\u2500 docs/ | \u251c\u2500\u2500 state | \u251c\u2500\u2500 state_transitions | \u251c\u2500\u2500 messages \u251c\u2500\u2500 docs/ \u251c\u2500\u2500 README \u251c\u2500\u2500 CODEOWNERS \u251c\u2500\u2500 Explanation/ | \u251c\u2500\u2500 README | \u251c\u2500\u2500 ADR/ | | \u251c\u2500\u2500 README | | \u251c\u2500\u2500 PROCESS | | \u251c\u2500\u2500 adr-template | | \u251c\u2500\u2500 adr-{number}-{desc} | \u251c\u2500\u2500 articles/ | | \u251c\u2500\u2500 regulation-litepaper/ | | \u251c\u2500\u2500 ARTICLE | \u251c\u2500\u2500 research/ | \u251c\u2500\u2500 README | \u251c\u2500\u2500 research_topic/ \u251c\u2500\u2500 How-To/ | \u251c\u2500\u2500 HowToDoSomething/ | \u251c\u2500\u2500 HowToDoSomethingElse/ \u251c\u2500\u2500 Reference/ | \u251c\u2500\u2500 README | \u251c\u2500\u2500 GLOSSARY | \u251c\u2500\u2500 MODULES | \u251c\u2500\u2500 use-cases/ | | \u251c\u2500\u2500 use-case-A | | \u251c\u2500\u2500 use-case-B | \u251c\u2500\u2500 architecture/ \u251c\u2500\u2500 Tutorials/ \u251c\u2500\u2500 Tutorial_1/ \u251c\u2500\u2500 Tutorial_2/ Root level documents The following files are required at the repo root level: README.md - General repo overview to introduce the product and orientate the user. All README files must follow the best practices as outlined in the GitHub README guidelines. TECHNICAL-SETUP.md - Specific steps on getting started with the repo, can be a link to a tutorial or include the specific action-oriented steps Links to specific tooling setup requirements for development tools, linters, and so on Dependencies such as pre-commit package manager Building the code Running tests CONTRIBUTING.md - Details on how new users can contribute to the project. In specific: Committing changes Commit message formats (see Commit Comments Raising PRs Code of Conduct CODEOWNERS - Although not part of the documentation itself, a CODEOWNERS file defines the code maintainers who are responsible for code in a repository and perform quality assurance on comments, PRs, and issues. Modules In line with Cosmos SDK convention (TODO: needs reference) each module contains its own relevant documentation: Module specifications - A document that outlines state transitions x/module-name/docs/ Module-level README.md e.g. x/module-name/README.md README files are classed as reference documentation. Content in module-level README files is descriptive, but explanatory. Explanations should be part of issues, Pull Requests, and docs/explanation/architecture. docs/ The docs folder shall include the following files and folders: README.md - SHALL USE this for introduction and orientating the user, based on the content of this ADR and other materials. CODEOWNERS - This CODEOWNERS file details the reviewers for documentation folder. The listed code owners SHALL INCLUDE the code maintainers in the root CODEOWNERS file plus a member of the Tendermint Technical Writing Team. docs/Reference Reference documentation includes a number of different forms: README.md - This document outlines the purpose of the reference documentation as per the use-case documentation strategy and methodology. In addition, the README also links to documentation that is created from the code itself, specifically: Code Documentation in form of Go Docs Swagger API documentation GLOSSARY.md - Review and maintenance must be regularly and consistently applied. These form the terms of reference for users and ensure that discussion and design are based on consistent terms of reference. This file will be similar to Cosmos Network Glossary and can reference this. MODULES.md - A markdown document that has references to module-relevant documentation docs/Reference/use-cases The use-cases folder describes Cosmos Cash use cases. Ideally, use cases are written in behavior-driven development (BDD) format. Use case content should be dry in nature and avoid explanations that should be covered in the explanation documentation. docs/Reference/architecture The architecture folder contains architecture diagrams such as component, activity, and sequence diagrams as relevant. Specifically, these assets should be in a format suitable for version management and easy to update. Therefore, these diagrams should be in SVG or DOT format and not image formats (JPEG, PNG, and so on). docs/Explanation The Explanation folder contains content that provides context for readers and is discursive in nature. See the Divio Explanation page for more detail. docs/explanation/README.md - This file orients the reader and explains the content. docs/Explanation/ADR The ADR folder tracks decisions regarding design and architecture (such as this documentation strategy). ADR content includes the following: docs/explanation/adr/README - introduction to ADR docs/explanation/adr/PROCESS.md - describes how to raise ADRs docs/explanation/adr/adr-template.md - template for raising ADR docs/explanation/adr/adr-{number}-{desc}.md - an ADR document docs/Explanation/articles The articles folder contains a sub-folder for each published article. Published articles this COULD REFER to blog posts. The folder should be named such that it describes the article's purpose. Each sub-folder SHALL CONTAIN all the content relevant to the article (for example, images, bibliographies, and so on). These articles can be converted into PDF format using Pandoc. To convert articles to PDF using Pandoc: There SHOULD BE a makefile with targets for calling Pandoc. Note: the process for building PDF files is not part of the commit or release processes, but ad-hoc There SHOULD BE a LaTeX template file that can create PDF files that have a consistent look and feel. This COULD BE the Eisvogel template with suitable modifications. The makefile and template should be independent of the article There SHOULD BE a README.md that describes how to use the makefile and template and build articles Note: Explanations can come in other forms, particularly issue discussion and Pull Requests. docs/Tutorials As indicated in the overview, tutorials SHALL BE documents that target beginners and guide a user step-by-step through a process with the aim of achieving some goal. Please see the Divio tutorial page for details. There SHALL BE a folder for each tutorial. See the Cosmos SDK tutorials as an example. The folder SHALL CONTAIN all of the content that is relevant for that tutorial. The content SHOULD BE consistent in format with Cosmos SDK tutorials . docs/How-To In contrast to tutorials, how-to guides are a series of actionable steps to help an experienced reader solve a specific problem. These how-to guides SHALL USE templates similar to the tutorials - see above. Templates The documentation SHOULD USE Markdown templates to develop structured technical content, like module messages follow templates in the Cosmos SDK. The good docs project Readme editor Code Comments PR review comments also form part of the documentation. Comments SHALL FOLLOW recommendation as per Conventional Comments <label> [decoration]: <subject> [discussion] where label = (praise|nitpick|suggestion|issue|question|thought|chore) Commit Comments Commits comments will also follow a similar format as laid out following the standard defined by Conventional Commits . This commit convention SHOULD BE enforced as part of pre-commit checks. Consequences This section describes the resulting context, after applying the decision. Backwards Compatibility After this ADR is implemented, existing documentation will be migrated from existing sources that include: Notion Other Git repos Published papers Blog posts Positive As a result of this documentation strategy: Content development and maintenance will follow best practices that ensure content is easy to navigate and read Content will be in a consistent format Commits, Issues, and Pull Requests in the repo will follow best practices CHANGELOG and release documentation will benefit from better commit messages, reducing developer effort Negative There may be more effort required Moving modules into new repos may cause inconsistenties in the repo Further Discussions While an ADR is in the DRAFT or PROPOSED stage, this section should contain a summary of issues to be solved in future iterations (usually referencing comments from a pull-request discussion). Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR. References Google Style Guide for Markdown Write the Docs global community Write the Docs Code of Conduct","title":"ADR 002: Documentation Structure"},{"location":"Explanation/ADR/adr-002-docs-structure/#adr-002-documentation-structure","text":"","title":"ADR 002: Documentation Structure"},{"location":"Explanation/ADR/adr-002-docs-structure/#status","text":"ACCEPTED","title":"Status"},{"location":"Explanation/ADR/adr-002-docs-structure/#abstract","text":"This ADR proposes a documentation strategy based on the Grand Unified Theory of Documentation (David Laing) as described by Divio . The documentation strategy outlines four specific use cases for documentation. Based on these use cases and other non-functional requirements, a structure is proposed that will address these concerns using GitHub as the Content Management System. The documentation strategy also proposes: The use and re-use of document and format templates Specific code owners for documentation Comment and commit templates combined with githook checks The outcome shall be focused, consistent, high quality documentation.","title":"Abstract"},{"location":"Explanation/ADR/adr-002-docs-structure/#context","text":"Good documentation is important to the success of software projects. Writing excellent code doesn't end when your code compiles or even if your test coverage reaches 100%. It's easy to write something a computer understands, it's much harder to write something both a human and a computer understand. Your mission as a Code Health-conscious engineer is to write for humans first, computers second. Documentation is an important part of this skill. Google Documentation Best Practice The documentation use cases, as outlined by Divio are: Allow a new user to get started Show a user how to solve a specific problem Describe the machinery, for example, classes, functions, interfaces, parameters, and so on Explanation and context for design, scope, and so on The goals of well-structured and well-written documentation include: Findability: depending on the use case, the technical content can be discovered and accessed Style: The documentation is written in an appropriate style for the use case Consistency: Each type of documentation is written in a consistent style Scoped: Documentation is scoped to a specific use case; for example, a tutorial can provide links but does not include technical content that describes why the software works, a tutorial just teaches how to use it Additional Documentation non-functional use cases include: Technical content SHOULD BE as close to the code as reasonably practicable and strive to use the docs as code workflow Technical content SHOULD BE generated from code as much as possible Technical content SHOULD USE a consistent format Technical content SHOULD BE useable from within the repository Technical content COULD HAVE an automatic process that converts the content to a website based on Read The Docs , Gitbook , or other suitable hosting systems","title":"Context"},{"location":"Explanation/ADR/adr-002-docs-structure/#decision","text":"To address the use cases outlined in the context, this ADR proposes the following decisions: Use GitHub as primary content management https://github.com/allinbits/cosmos-cash Use Markdown and LaTeX to deliver research publications Given GitHub will form the content management system, we propose the following structure:","title":"Decision"},{"location":"Explanation/ADR/adr-002-docs-structure/#structure","text":"The documentation structure shall use as much as possible a content structure similar to the Divio user cases . Tutorials How-to guides Reference Explanation Oriented to Learning A goal Information Understanding Must Allow a newcomer to get started Show how to solve a specific problem Describe the machinery Explain Takes the form of A lesson A series of steps A dry description A discursive explanation Analogy Teaching a child to cook Recipe in a cookery book An encyclopedia article A paper on culinary social history The specific implementation for Cosmos Cash SHOULD BE as per the following tree structure. / \u251c\u2500\u2500 README \u251c\u2500\u2500 CONTRIBUTING \u251c\u2500\u2500 TECHNICAL-SETUP \u251c\u2500\u2500 CODEOWNERS \u251c\u2500\u2500 x/ | \u251c\u2500\u2500 module_a/ | \u251c\u2500\u2500 README | \u251c\u2500\u2500 docs/ | \u251c\u2500\u2500 state | \u251c\u2500\u2500 state_transitions | \u251c\u2500\u2500 messages \u251c\u2500\u2500 docs/ \u251c\u2500\u2500 README \u251c\u2500\u2500 CODEOWNERS \u251c\u2500\u2500 Explanation/ | \u251c\u2500\u2500 README | \u251c\u2500\u2500 ADR/ | | \u251c\u2500\u2500 README | | \u251c\u2500\u2500 PROCESS | | \u251c\u2500\u2500 adr-template | | \u251c\u2500\u2500 adr-{number}-{desc} | \u251c\u2500\u2500 articles/ | | \u251c\u2500\u2500 regulation-litepaper/ | | \u251c\u2500\u2500 ARTICLE | \u251c\u2500\u2500 research/ | \u251c\u2500\u2500 README | \u251c\u2500\u2500 research_topic/ \u251c\u2500\u2500 How-To/ | \u251c\u2500\u2500 HowToDoSomething/ | \u251c\u2500\u2500 HowToDoSomethingElse/ \u251c\u2500\u2500 Reference/ | \u251c\u2500\u2500 README | \u251c\u2500\u2500 GLOSSARY | \u251c\u2500\u2500 MODULES | \u251c\u2500\u2500 use-cases/ | | \u251c\u2500\u2500 use-case-A | | \u251c\u2500\u2500 use-case-B | \u251c\u2500\u2500 architecture/ \u251c\u2500\u2500 Tutorials/ \u251c\u2500\u2500 Tutorial_1/ \u251c\u2500\u2500 Tutorial_2/","title":"Structure"},{"location":"Explanation/ADR/adr-002-docs-structure/#root-level-documents","text":"The following files are required at the repo root level: README.md - General repo overview to introduce the product and orientate the user. All README files must follow the best practices as outlined in the GitHub README guidelines. TECHNICAL-SETUP.md - Specific steps on getting started with the repo, can be a link to a tutorial or include the specific action-oriented steps Links to specific tooling setup requirements for development tools, linters, and so on Dependencies such as pre-commit package manager Building the code Running tests CONTRIBUTING.md - Details on how new users can contribute to the project. In specific: Committing changes Commit message formats (see Commit Comments Raising PRs Code of Conduct CODEOWNERS - Although not part of the documentation itself, a CODEOWNERS file defines the code maintainers who are responsible for code in a repository and perform quality assurance on comments, PRs, and issues.","title":"Root level documents"},{"location":"Explanation/ADR/adr-002-docs-structure/#modules","text":"In line with Cosmos SDK convention (TODO: needs reference) each module contains its own relevant documentation: Module specifications - A document that outlines state transitions x/module-name/docs/ Module-level README.md e.g. x/module-name/README.md README files are classed as reference documentation. Content in module-level README files is descriptive, but explanatory. Explanations should be part of issues, Pull Requests, and docs/explanation/architecture.","title":"Modules"},{"location":"Explanation/ADR/adr-002-docs-structure/#docs","text":"The docs folder shall include the following files and folders: README.md - SHALL USE this for introduction and orientating the user, based on the content of this ADR and other materials. CODEOWNERS - This CODEOWNERS file details the reviewers for documentation folder. The listed code owners SHALL INCLUDE the code maintainers in the root CODEOWNERS file plus a member of the Tendermint Technical Writing Team.","title":"docs/"},{"location":"Explanation/ADR/adr-002-docs-structure/#docsreference","text":"Reference documentation includes a number of different forms: README.md - This document outlines the purpose of the reference documentation as per the use-case documentation strategy and methodology. In addition, the README also links to documentation that is created from the code itself, specifically: Code Documentation in form of Go Docs Swagger API documentation GLOSSARY.md - Review and maintenance must be regularly and consistently applied. These form the terms of reference for users and ensure that discussion and design are based on consistent terms of reference. This file will be similar to Cosmos Network Glossary and can reference this. MODULES.md - A markdown document that has references to module-relevant documentation","title":"docs/Reference"},{"location":"Explanation/ADR/adr-002-docs-structure/#docsreferenceuse-cases","text":"The use-cases folder describes Cosmos Cash use cases. Ideally, use cases are written in behavior-driven development (BDD) format. Use case content should be dry in nature and avoid explanations that should be covered in the explanation documentation.","title":"docs/Reference/use-cases"},{"location":"Explanation/ADR/adr-002-docs-structure/#docsreferencearchitecture","text":"The architecture folder contains architecture diagrams such as component, activity, and sequence diagrams as relevant. Specifically, these assets should be in a format suitable for version management and easy to update. Therefore, these diagrams should be in SVG or DOT format and not image formats (JPEG, PNG, and so on).","title":"docs/Reference/architecture"},{"location":"Explanation/ADR/adr-002-docs-structure/#docsexplanation","text":"The Explanation folder contains content that provides context for readers and is discursive in nature. See the Divio Explanation page for more detail. docs/explanation/README.md - This file orients the reader and explains the content.","title":"docs/Explanation"},{"location":"Explanation/ADR/adr-002-docs-structure/#docsexplanationadr","text":"The ADR folder tracks decisions regarding design and architecture (such as this documentation strategy). ADR content includes the following: docs/explanation/adr/README - introduction to ADR docs/explanation/adr/PROCESS.md - describes how to raise ADRs docs/explanation/adr/adr-template.md - template for raising ADR docs/explanation/adr/adr-{number}-{desc}.md - an ADR document","title":"docs/Explanation/ADR"},{"location":"Explanation/ADR/adr-002-docs-structure/#docsexplanationarticles","text":"The articles folder contains a sub-folder for each published article. Published articles this COULD REFER to blog posts. The folder should be named such that it describes the article's purpose. Each sub-folder SHALL CONTAIN all the content relevant to the article (for example, images, bibliographies, and so on). These articles can be converted into PDF format using Pandoc. To convert articles to PDF using Pandoc: There SHOULD BE a makefile with targets for calling Pandoc. Note: the process for building PDF files is not part of the commit or release processes, but ad-hoc There SHOULD BE a LaTeX template file that can create PDF files that have a consistent look and feel. This COULD BE the Eisvogel template with suitable modifications. The makefile and template should be independent of the article There SHOULD BE a README.md that describes how to use the makefile and template and build articles Note: Explanations can come in other forms, particularly issue discussion and Pull Requests.","title":"docs/Explanation/articles"},{"location":"Explanation/ADR/adr-002-docs-structure/#docstutorials","text":"As indicated in the overview, tutorials SHALL BE documents that target beginners and guide a user step-by-step through a process with the aim of achieving some goal. Please see the Divio tutorial page for details. There SHALL BE a folder for each tutorial. See the Cosmos SDK tutorials as an example. The folder SHALL CONTAIN all of the content that is relevant for that tutorial. The content SHOULD BE consistent in format with Cosmos SDK tutorials .","title":"docs/Tutorials"},{"location":"Explanation/ADR/adr-002-docs-structure/#docshow-to","text":"In contrast to tutorials, how-to guides are a series of actionable steps to help an experienced reader solve a specific problem. These how-to guides SHALL USE templates similar to the tutorials - see above.","title":"docs/How-To"},{"location":"Explanation/ADR/adr-002-docs-structure/#templates","text":"The documentation SHOULD USE Markdown templates to develop structured technical content, like module messages follow templates in the Cosmos SDK. The good docs project Readme editor","title":"Templates"},{"location":"Explanation/ADR/adr-002-docs-structure/#code-comments","text":"PR review comments also form part of the documentation. Comments SHALL FOLLOW recommendation as per Conventional Comments <label> [decoration]: <subject> [discussion] where label = (praise|nitpick|suggestion|issue|question|thought|chore)","title":"Code Comments"},{"location":"Explanation/ADR/adr-002-docs-structure/#commit-comments","text":"Commits comments will also follow a similar format as laid out following the standard defined by Conventional Commits . This commit convention SHOULD BE enforced as part of pre-commit checks.","title":"Commit Comments"},{"location":"Explanation/ADR/adr-002-docs-structure/#consequences","text":"This section describes the resulting context, after applying the decision.","title":"Consequences"},{"location":"Explanation/ADR/adr-002-docs-structure/#backwards-compatibility","text":"After this ADR is implemented, existing documentation will be migrated from existing sources that include: Notion Other Git repos Published papers Blog posts","title":"Backwards Compatibility"},{"location":"Explanation/ADR/adr-002-docs-structure/#positive","text":"As a result of this documentation strategy: Content development and maintenance will follow best practices that ensure content is easy to navigate and read Content will be in a consistent format Commits, Issues, and Pull Requests in the repo will follow best practices CHANGELOG and release documentation will benefit from better commit messages, reducing developer effort","title":"Positive"},{"location":"Explanation/ADR/adr-002-docs-structure/#negative","text":"There may be more effort required Moving modules into new repos may cause inconsistenties in the repo","title":"Negative"},{"location":"Explanation/ADR/adr-002-docs-structure/#further-discussions","text":"While an ADR is in the DRAFT or PROPOSED stage, this section should contain a summary of issues to be solved in future iterations (usually referencing comments from a pull-request discussion). Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR.","title":"Further Discussions"},{"location":"Explanation/ADR/adr-002-docs-structure/#references","text":"Google Style Guide for Markdown Write the Docs global community Write the Docs Code of Conduct","title":"References"},{"location":"Explanation/ADR/adr-003-issuer/","text":"ADR 003: Cosmos Cash Issuance model Table of Contents ADR 003: Cosmos Cash Issuance model Table of Contents Changelog Status Abstract Context Ethereum based Stablecoin issuers Licenses Decision Actors DID Verifiable Credentials Setting up an Issuer Revocation Lists Out-of-Scope Consequences Backward Compatibility Positive Negative Further Discussions References Changelog 29-Jul-2021: Initial Draft Status DRAFT - Not Implemented Abstract In order to issue a payment token a regulatory compliant issuer module is required. This must be able to Initialize an issuer and a payment token Mint/Burn tokens Freeze/Unfreeze accounts Rescue funds from frozen accounts Pause/Unpause token circulation This functionality will use Role Based Access based on Verifiable Credentials with blocklists maintained through the use of revocation lists. Context Ethereum based Stablecoin issuers All major stablecoins, USDT and USDC are based on Ethereum and are composed from a number smart contract standards with Role Based Access Control . Both tokens are deemed to be regulatory compliant in terms of functionality. Cosmos Cash Proof of Concept issuer has some similar functionality: createIssuer(token, fee, owner) mintToken(amount, owner) burnToken(amount, owner) Licenses Regulators and issuers are issued licenses through a regulator or other government body. The licenses then permit the holder to perform certain activities such as holding client money, and so on. In the UK, the FCA register acts as the public record of licensed entities and the services the entities can provide. For example, the record for UBS AG on FCA is UBS AG Reference number: 186958 . Decision WE SHALL implement an issuer module with functionality that is similar to Tether and USDC. This module will have the following functionality: Create an issuer and a payment token Mint and burn tokens Pause and unpause token circulation Set an upper bound on token circulation Set a fee rate Rescue funds from frozen accounts Actors There SHALL BE the following actors with permissions actions: Regulator - this actor SHALL HAVE role-based permissions to: Create and revoke an issuer. Set and update an upper bound on the total amount of tokens in circulation. Issuer - this actor SHALL HAVE role-based permissions to: Mint and burn tokens Pause and unpause tokens in circulation Redeem tokens from block-listed address DID The Regulator and the Issuer Decentralized Identifier Document (DID) SHALL HAVE multiple DID controllers. For an Issuer, these controllers represent the different functions within a financial institution - Operations, Compliance, and so on. This DID SHALL support multiple signing such that Pause and unpause requires two parties to make the change. This requirement would mimic a case where Operations would request the pause and Compliance or a Senior Manager would approve the action. Likewise, the Regulator DID will also have multiple controllers with multi-signatories that are required for creating and removing an issuer and setting circulation bounds. Verifiable Credentials The functionality SHALL USE Verifiable Credentials to establish role-based access to functions. See ADR-OO6 License Credential for details regarding issuance, revocation, and so on. Setting up an Issuer A Regulator actor WILL BE defined. This Regulator WILL ISSUE signed license verifiable credentials to an Issuer. The Regulator address and DID document SHALL BE defined in Genesis. Does the Regulator also do this from Verifiable Credential? Revocation Lists Given that role-based access uses Verifiable Credentials then the address must be added to a revocation list to override the credential to revoke and unrevoke access. Revocation lists will be maintained as accumulators on the identity chain. There WILL BE revocation lists for issuers and users. A Regulator actor cannot be revoked. Out-of-Scope The issuer module for USDT and USDC both handle blocklisting with a defined Blacklister role. As proposed by this ADR, the Issuer module WILL NOT have the functionality to maintain access. These permissions will be handled through Verifiable Credentials which will be off-chain. Revocation will be handled as described in the Revocation Lists section. User transaction limits will also be handled in Verifiable Credentials . A user will present a credential each time they perform a transaction. The credential will prove if the transaction is within the limit for that user. Consequences Backward Compatibility This is a new module so backward compatibility is not a concern. Positive Allows Cosmos Cash to support multiple issuers and multiple payment tokens on the same network The issuer module will be regulatory compliant because it offers: Restrictions to Issuer creation so that Issuer creation is possible only with correct regulatory sign-off Functionality to pause and unpause tokens Controls to manage token circulation The issuer module will use Decentralized Identity and Verifiable Credentials authentication and authorization of actions. Negative This module is not compatible with USDC or USDT issuers module because it separates the permission model from the actual functionality. Further Discussions While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR. References OpenVASP Core Data types OpenVASP Credential","title":"ADR 003: Cosmos Cash Issuance model"},{"location":"Explanation/ADR/adr-003-issuer/#adr-003-cosmos-cash-issuance-model","text":"","title":"ADR 003: Cosmos Cash Issuance model"},{"location":"Explanation/ADR/adr-003-issuer/#table-of-contents","text":"ADR 003: Cosmos Cash Issuance model Table of Contents Changelog Status Abstract Context Ethereum based Stablecoin issuers Licenses Decision Actors DID Verifiable Credentials Setting up an Issuer Revocation Lists Out-of-Scope Consequences Backward Compatibility Positive Negative Further Discussions References","title":"Table of Contents"},{"location":"Explanation/ADR/adr-003-issuer/#changelog","text":"29-Jul-2021: Initial Draft","title":"Changelog"},{"location":"Explanation/ADR/adr-003-issuer/#status","text":"DRAFT - Not Implemented","title":"Status"},{"location":"Explanation/ADR/adr-003-issuer/#abstract","text":"In order to issue a payment token a regulatory compliant issuer module is required. This must be able to Initialize an issuer and a payment token Mint/Burn tokens Freeze/Unfreeze accounts Rescue funds from frozen accounts Pause/Unpause token circulation This functionality will use Role Based Access based on Verifiable Credentials with blocklists maintained through the use of revocation lists.","title":"Abstract"},{"location":"Explanation/ADR/adr-003-issuer/#context","text":"","title":"Context"},{"location":"Explanation/ADR/adr-003-issuer/#ethereum-based-stablecoin-issuers","text":"All major stablecoins, USDT and USDC are based on Ethereum and are composed from a number smart contract standards with Role Based Access Control . Both tokens are deemed to be regulatory compliant in terms of functionality. Cosmos Cash Proof of Concept issuer has some similar functionality: createIssuer(token, fee, owner) mintToken(amount, owner) burnToken(amount, owner)","title":"Ethereum based Stablecoin issuers"},{"location":"Explanation/ADR/adr-003-issuer/#licenses","text":"Regulators and issuers are issued licenses through a regulator or other government body. The licenses then permit the holder to perform certain activities such as holding client money, and so on. In the UK, the FCA register acts as the public record of licensed entities and the services the entities can provide. For example, the record for UBS AG on FCA is UBS AG Reference number: 186958 .","title":"Licenses"},{"location":"Explanation/ADR/adr-003-issuer/#decision","text":"WE SHALL implement an issuer module with functionality that is similar to Tether and USDC. This module will have the following functionality: Create an issuer and a payment token Mint and burn tokens Pause and unpause token circulation Set an upper bound on token circulation Set a fee rate Rescue funds from frozen accounts","title":"Decision"},{"location":"Explanation/ADR/adr-003-issuer/#actors","text":"There SHALL BE the following actors with permissions actions: Regulator - this actor SHALL HAVE role-based permissions to: Create and revoke an issuer. Set and update an upper bound on the total amount of tokens in circulation. Issuer - this actor SHALL HAVE role-based permissions to: Mint and burn tokens Pause and unpause tokens in circulation Redeem tokens from block-listed address","title":"Actors"},{"location":"Explanation/ADR/adr-003-issuer/#did","text":"The Regulator and the Issuer Decentralized Identifier Document (DID) SHALL HAVE multiple DID controllers. For an Issuer, these controllers represent the different functions within a financial institution - Operations, Compliance, and so on. This DID SHALL support multiple signing such that Pause and unpause requires two parties to make the change. This requirement would mimic a case where Operations would request the pause and Compliance or a Senior Manager would approve the action. Likewise, the Regulator DID will also have multiple controllers with multi-signatories that are required for creating and removing an issuer and setting circulation bounds.","title":"DID"},{"location":"Explanation/ADR/adr-003-issuer/#verifiable-credentials","text":"The functionality SHALL USE Verifiable Credentials to establish role-based access to functions. See ADR-OO6 License Credential for details regarding issuance, revocation, and so on.","title":"Verifiable Credentials"},{"location":"Explanation/ADR/adr-003-issuer/#setting-up-an-issuer","text":"A Regulator actor WILL BE defined. This Regulator WILL ISSUE signed license verifiable credentials to an Issuer. The Regulator address and DID document SHALL BE defined in Genesis. Does the Regulator also do this from Verifiable Credential?","title":"Setting up an Issuer"},{"location":"Explanation/ADR/adr-003-issuer/#revocation-lists","text":"Given that role-based access uses Verifiable Credentials then the address must be added to a revocation list to override the credential to revoke and unrevoke access. Revocation lists will be maintained as accumulators on the identity chain. There WILL BE revocation lists for issuers and users. A Regulator actor cannot be revoked.","title":"Revocation Lists"},{"location":"Explanation/ADR/adr-003-issuer/#out-of-scope","text":"The issuer module for USDT and USDC both handle blocklisting with a defined Blacklister role. As proposed by this ADR, the Issuer module WILL NOT have the functionality to maintain access. These permissions will be handled through Verifiable Credentials which will be off-chain. Revocation will be handled as described in the Revocation Lists section. User transaction limits will also be handled in Verifiable Credentials . A user will present a credential each time they perform a transaction. The credential will prove if the transaction is within the limit for that user.","title":"Out-of-Scope"},{"location":"Explanation/ADR/adr-003-issuer/#consequences","text":"","title":"Consequences"},{"location":"Explanation/ADR/adr-003-issuer/#backward-compatibility","text":"This is a new module so backward compatibility is not a concern.","title":"Backward Compatibility"},{"location":"Explanation/ADR/adr-003-issuer/#positive","text":"Allows Cosmos Cash to support multiple issuers and multiple payment tokens on the same network The issuer module will be regulatory compliant because it offers: Restrictions to Issuer creation so that Issuer creation is possible only with correct regulatory sign-off Functionality to pause and unpause tokens Controls to manage token circulation The issuer module will use Decentralized Identity and Verifiable Credentials authentication and authorization of actions.","title":"Positive"},{"location":"Explanation/ADR/adr-003-issuer/#negative","text":"This module is not compatible with USDC or USDT issuers module because it separates the permission model from the actual functionality.","title":"Negative"},{"location":"Explanation/ADR/adr-003-issuer/#further-discussions","text":"While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR.","title":"Further Discussions"},{"location":"Explanation/ADR/adr-003-issuer/#references","text":"OpenVASP Core Data types OpenVASP Credential","title":"References"},{"location":"Explanation/ADR/adr-004-did/","text":"ADR 004: DID Changelog 2021-09-23: Added security and privacy considerations 2021-08-02: Initial draft Status PROPOSED Abstract Decentralized identifiers (DIDs) are a type of identifier that enables verifiable, decentralized digital identity. A DID refers to any subject (for example, a person, organization, thing, data model, abstract entity, and so on) as determined by the controller of the DID. This document specifies the DID method for a Cosmos SDK-based implementation of the W3C recommendation, its properties, operations, and an explanation of the process to resolve DIDs to the resources that they represent. Context The aim of the Cosmos Cash project is to provide a state-of-the-art platform for the hosting of collateralized stable coins that is compliant with: EU regulations such as General Data Protection Regulation (GDPR) and Markets in Crypto-Assets (MiCA) International recommendations such as the Financial Action Task Force (FATF) \"Travel Rule\" Local anti-money laundering (AML) regulations The Cosmos Cash platform is based on the following principles: Open financial infrastructure is a public good Money laundering prevention also benefits society Users benefit from a strict privacy-respecting approach (GDPR) The self-sovereign identity (SSI) approach to tackling the identity and privacy challenge has been gaining momentum in recent years. Coupled with distributed ledger technology (DLT) technology, the SSI approach has been capturing the attention of both the private and public sectors. The SSI approach relies on two building blocks: decentralized identifiers (DID) and verifiable credentials (VC). This architecture decision record (ADR) describes the DID implementation in a Cosmos SDK-based blockchain. The goal of this ADR is to define a foundation for the necessary components to realize the Cosmos Cash objectives while ensuring the implementation of the DID is fully compliant with the W3C specifications. Successive iterations will address API ergonomics and standard compatibility issues. Decision The Cosmos Cash implementation for DIDs will follow the DID W3C core recommendations with the goal of maximizing compatibility with 3rd party tools and projects. DID Method Name The namestring that shall identify the Cosmos Cash DID method is: cosmos . A DID that uses the Cosmos Cash method MUST begin with the following prefix: did:cosmos . Per the W3C DID specification , this prefix string MUST be in lowercase. The remainder of the DID, after the prefix, is as follows: Method Specific Identifier The namespace specific identifier is defined by the following ABNF: cosmos-did = \"did:cosmos:\" identifier-type identifier-type = cosmos-key / cosmos-network cosmos-key = \"key:\" 1*255id-char \"1\" 20*255HEXDIG cosmos-network = \"net:\" 1*255id-char \":\" unique-identifier unique-identifier = 38*255id-char id-char = ALPHA / DIGIT / (ALPHA \"-\") / (DIGIT \"-\") For the unique-identifier it is RECOMMENDED to use a UUID. The identifier-type distinguishes between two DID types: The key type, inspired from the did:key method The net type that identifies the DID and the originating network of the DID DIDs of key type are ephemeral and immutable. DIDs of key type are always generated from the Cosmos blockchain address they refer to. For example, see these DIDs of key type: did:cosmos:key:cash1ts9ejqg7k4ht2sm53hycty875362yqxqmt9grj did:cosmos:key:cosmos1lvl2s8x4pta5f96appxrwn3mypsvumukvk7ck2 DIDs of net type are persistent and mutable. DIDs of net type are stored in the node database and can be created and updated according to rules described in the DID Operations section. For example, see these DIDs of net type: did:cosmos:net:cash:806e557e-ecdb-4e80-ab0d-a82ad35c9ceb did:cosmos:net:cosmoshub:1cc7813c-bb31-4999-a768-19424e6c10fa DID Operations DID and associated DID documents are managed by a Cosmos SDK module that uses the gRPC communication protocol. See Method operations for details on how the create, read, update and delete (CRUD) operations are handed in a Cosmos DID. Create To create and publish a DID document use the message MsgCreateDidDocument(id string, signerPubKey string) The message parameters are the DID to be created and the signerPubKey . The signerPubKey MUST be the public key of the account that signs the transaction. The public key MUST be used to attach a verification method of type EcdsaSecp256k1VerificationKey2019 with the value of publicKeyMultibase that contains the public key encoded according to the Multibase Data Format Hexadecimal upper-case encoding . The verification method controller MUST be one of the following: The DID of the document The DID of key type of the address that signs the transaction The verification method id SHOULD be generated as: {verificationMethodController}#{CosmosAddressFromPubKey} The verification method id MUST be listed in the authentication relationships. If the input DID is not a valid DID for the Cosmos method, or if the DID already exists on-chain, the message returns an error. Contextually with the creation of a DID document, a DID document metadata MUST be created with the following values: The hash of the transaction as versionId The block time for the created and updated fields The deactivated field is false To address privacy concerns: Use an id that is different from the blockchain account address Isolate the verification methods to the DID subject (for example, during key rotation) Note: A more fine-grained DID creation method can be implemented with the goal of saving in gas by executing a single transaction in a complex DID scenario. Resolve and Verify The integrity of the DID documents stored on the ledger is guaranteed by the underlying blockchain protocol. A DID can be resolved using the gRPC message: QueryDidDocumentRequest(did string) This example shows a DID document that was resolved using the gRPC interface: { \"didDocument\": { \"context\": [ \"https://www.w3.org/ns/did/v1\" ], \"id\": \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\", \"controller\": [ \"did:cosmos:key:cosmos1sl48sj2jjed7enrv3lzzplr9wc2f5js5tzjph8\" ], \"verificationMethod\": [ { \"controller\": \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\", \"id\": \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e#cosmos1x5hrv0hngmg8gls5cft7nphqs83njj25pwxpt0\", \"publicKeyMultibase\": \"0248a5178d7a90ec187b3c3d533a4385db905f6fcdaac5026859ca5ef7b0b1c3b5\", \"type\": \"EcdsaSecp256k1VerificationKey2019\" } ], \"authentication\": [ \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e#cosmos1x5hrv0hngmg8gls5cft7nphqs83njj25pwxpt0\" ] }, \"didMetadata\": { \"versionId\": \"9f7c547dc852af60c9da1fd514e1497d407b6a3d8ae3e52b626d536519dc8f4c\", \"created\": \"2021-08-23T08:24:26.972761898Z\", \"updated\": \"2021-08-24T15:54:40.902858856Z\", \"deactivated\": false } } The DID can also be resolved by a REST endpoint. The REST endpoint MUST be compatible with the W3C DID core recommendations and pass the DID Core Specification Test Suite : {NODE_URL}:{NODE_REST_PORT}/identifier/{did} This example shows a DID document that was resolved using a REST endpoint: { \"didDocument\":{ \"@context\":[ \"https://www.w3.org/ns/did/v1\" ], \"id\":\"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\", \"controller\":[ \"did:cosmos:key:cosmos1sl48sj2jjed7enrv3lzzplr9wc2f5js5tzjph8\" ], \"verificationMethod\":[ { \"controller\":\"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\", \"id\":\"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e#cosmos1x5hrv0hngmg8gls5cft7nphqs83njj25pwxpt0\", \"publicKeyMultibase\":\"0248a5178d7a90ec187b3c3d533a4385db905f6fcdaac5026859ca5ef7b0b1c3b5\", \"type\":\"EcdsaSecp256k1VerificationKey2019\" } ], \"authentication\":[ \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e#cosmos1x5hrv0hngmg8gls5cft7nphqs83njj25pwxpt0\" ] }, \"didDocumentMetadata\":{ \"versionId\":\"4f0f8857ab36bdeee0ddb541ea7e7b9cb509d29e1103cc7def44d3d1e8220c22\", \"created\":\"2021-08-23T08:24:26.972761898Z\", \"updated\":\"2021-08-24T15:54:40.902858856Z\" }, \"didResolutionMetadata\":{ \"contentType\":\"application/ld+json\", \"did\":{ \"method\":\"cosmos\", \"methodSpecificId\":\"net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\" } } } Update There are two ways of updating a DID document: Manage DID controllers Manipulate verification methods and relationships In both cases, the target DID must exist on-chain and the signerAccount must exist as a verification method in a verification relationship of type authentication or it's key DID be listed as a DID controller. Additionally the DID document MUST NOT be in a deactivated status. Each update operation MUST update the versionId and the updated field of the associated DID document metadata with the transaction hash and the block time respectively. Manage DID Controllers Set the DID controllers using the gRPC message: MsgUpdateDidDocument(did string, controllers []string, signerAccount string) The parameters are as follows: did identifies the DID document controllers are a list of Cosmos addresses that will replace the DID document controllers list signerAccount is the account address that signs the transaction Controllers will be added using the did:cosmos:key: method type. A controller of a DID document MUST be a DID of type key . Manipulate Verification Methods and Relationships Add a new verification method using the gRPC message: MsgAddVerification(did string, accountId string, relationships []string, signerAccount string) The parameters are as follows: did identifies the did document accountId is the account to be added to the verification method relationships is the list of relationships that the accountId will be registered into signerAccount is the account address that is signing the transaction The list of relationships must contain only valid verification relationships names as defined in the DID document and MUST be non-empty: Set the relationships of a verification method using the gRPC message: MsgSetVerificationRelationships(did string, accountId string, relationships []string, signerAccount string) Services A service MUST be an entity with the following properties: id : a valid RFC3986 URI string. type : a non empty string. serviceEndpoint : a valid RFC3986 URI string. A service can be added using the gRPC method: MsgAddService(did string, service_data Service, signerAccount string) The id of a service MUST be unique within the DID document. A service can be deleted using the gRPC message: MsgDeleteService(did string, service_id string, signerAccount string) Deactivate A DID can be deactivated using the gRPC message: MsgDeactivateDid(did string, signerAccount string) The operation MUST update the DID document metadata and set the deactivated value to true. The operation is not reversible. Method-Specific Properties DID Core Verification Material The Verification Material type MUST support: Type EcdsaSecp256k1VerificationKey2019 with pubKeyMultibase to encode a Cosmos account public key in hexadecimal format Type CosmosAccountAddress with blockchainAccountID to represent a Cosmos account Support for other verification materials can be added. Verification Relationships The DID document MUST support the following verification relationships : authentication - authorizes amends to the DID document assertionMethod keyAgreement capabilityInvocation capabilityDelegation DID Document Metadata The implementation for DID document metadata MUST report the following properties for a DID document: created : a datetime string of the creation date that is the UTC date associated with the block height when the DID document was submitted the first time updated : a datetime string of the last update date that is the UTC date associated with the block height when the DID document was submitted the last time deactivated : a boolean field that indicates if the DID document is deactivated versionId : a hex-encoded BLAKE2b hash of the transaction that created or updated the DID DID Resolution Metadata The DID Resolution Metadata is outside the scope of the gRPC interface and is not covered in this ADR. DID URL Syntax The DID URL Syntax is outside the scope of the gRPC interface and is not covered in this ADR. DID Query Parameters The DID Query parameters URL is outside the scope of the gRPC interface and is not covered in this ADR. Privacy Considerations When any data (for example, W3C Verifiable Credentials) is associated with Cosmos DIDs, sharing that data would also impose sharing the on-chain data graph (for example, transaction history) of the blockchain account that controls the DID. Using personally identifiable information as DID Method-specific identifiers (for example, account name alice) discloses personal information every time the DID is shared with a counterparty. This specification DOES NOT endorse the use of identifiers that correlates to human beings or other sensible subjects. Security Considerations Ephemeral DIDs ( did:cosmos:key type) are generated based on a blockchain address. If access to the authoritative keys for an account are lost, the control of the DID and verifiable data issued by the DID is lost as well. Consequences The Cosmos ecosystem WILL HAVE a DID module that is compatible with the W3C standard and offers a high chance of compatibility with third-party components such as cloud and edge agents, resolvers, and so on. Backwards Compatibility This is a new module so backward compatibility is not a concern. Positive The implementation of the ADR provides the foundation for interoperability with the DID standard and the SSI identity approach. Closely following the W3C standard gives the best chances of successful interoperability with third-party components. Negative The implementation rigidly follows the W3C specification which leaves little room for extensibility. This approach might become an issue for wider adoption. Neutral N/A Further Discussions While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR. The did:key method specifies a key format that is different from the one used in this ADR. This ADR needs to be amended or follow a different approach. The approach proposed is somewhat locked into the current implementation and will have to be revised in successive iterations. Test Cases [optional] N/A References DID Core DID Specification Registries","title":"ADR 004: DID"},{"location":"Explanation/ADR/adr-004-did/#adr-004-did","text":"","title":"ADR 004: DID"},{"location":"Explanation/ADR/adr-004-did/#changelog","text":"2021-09-23: Added security and privacy considerations 2021-08-02: Initial draft","title":"Changelog"},{"location":"Explanation/ADR/adr-004-did/#status","text":"PROPOSED","title":"Status"},{"location":"Explanation/ADR/adr-004-did/#abstract","text":"Decentralized identifiers (DIDs) are a type of identifier that enables verifiable, decentralized digital identity. A DID refers to any subject (for example, a person, organization, thing, data model, abstract entity, and so on) as determined by the controller of the DID. This document specifies the DID method for a Cosmos SDK-based implementation of the W3C recommendation, its properties, operations, and an explanation of the process to resolve DIDs to the resources that they represent.","title":"Abstract"},{"location":"Explanation/ADR/adr-004-did/#context","text":"The aim of the Cosmos Cash project is to provide a state-of-the-art platform for the hosting of collateralized stable coins that is compliant with: EU regulations such as General Data Protection Regulation (GDPR) and Markets in Crypto-Assets (MiCA) International recommendations such as the Financial Action Task Force (FATF) \"Travel Rule\" Local anti-money laundering (AML) regulations The Cosmos Cash platform is based on the following principles: Open financial infrastructure is a public good Money laundering prevention also benefits society Users benefit from a strict privacy-respecting approach (GDPR) The self-sovereign identity (SSI) approach to tackling the identity and privacy challenge has been gaining momentum in recent years. Coupled with distributed ledger technology (DLT) technology, the SSI approach has been capturing the attention of both the private and public sectors. The SSI approach relies on two building blocks: decentralized identifiers (DID) and verifiable credentials (VC). This architecture decision record (ADR) describes the DID implementation in a Cosmos SDK-based blockchain. The goal of this ADR is to define a foundation for the necessary components to realize the Cosmos Cash objectives while ensuring the implementation of the DID is fully compliant with the W3C specifications. Successive iterations will address API ergonomics and standard compatibility issues.","title":"Context"},{"location":"Explanation/ADR/adr-004-did/#decision","text":"The Cosmos Cash implementation for DIDs will follow the DID W3C core recommendations with the goal of maximizing compatibility with 3rd party tools and projects.","title":"Decision"},{"location":"Explanation/ADR/adr-004-did/#did-method-name","text":"The namestring that shall identify the Cosmos Cash DID method is: cosmos . A DID that uses the Cosmos Cash method MUST begin with the following prefix: did:cosmos . Per the W3C DID specification , this prefix string MUST be in lowercase. The remainder of the DID, after the prefix, is as follows:","title":"DID Method Name"},{"location":"Explanation/ADR/adr-004-did/#method-specific-identifier","text":"The namespace specific identifier is defined by the following ABNF: cosmos-did = \"did:cosmos:\" identifier-type identifier-type = cosmos-key / cosmos-network cosmos-key = \"key:\" 1*255id-char \"1\" 20*255HEXDIG cosmos-network = \"net:\" 1*255id-char \":\" unique-identifier unique-identifier = 38*255id-char id-char = ALPHA / DIGIT / (ALPHA \"-\") / (DIGIT \"-\") For the unique-identifier it is RECOMMENDED to use a UUID. The identifier-type distinguishes between two DID types: The key type, inspired from the did:key method The net type that identifies the DID and the originating network of the DID DIDs of key type are ephemeral and immutable. DIDs of key type are always generated from the Cosmos blockchain address they refer to. For example, see these DIDs of key type: did:cosmos:key:cash1ts9ejqg7k4ht2sm53hycty875362yqxqmt9grj did:cosmos:key:cosmos1lvl2s8x4pta5f96appxrwn3mypsvumukvk7ck2 DIDs of net type are persistent and mutable. DIDs of net type are stored in the node database and can be created and updated according to rules described in the DID Operations section. For example, see these DIDs of net type: did:cosmos:net:cash:806e557e-ecdb-4e80-ab0d-a82ad35c9ceb did:cosmos:net:cosmoshub:1cc7813c-bb31-4999-a768-19424e6c10fa","title":"Method Specific Identifier"},{"location":"Explanation/ADR/adr-004-did/#did-operations","text":"DID and associated DID documents are managed by a Cosmos SDK module that uses the gRPC communication protocol. See Method operations for details on how the create, read, update and delete (CRUD) operations are handed in a Cosmos DID.","title":"DID Operations"},{"location":"Explanation/ADR/adr-004-did/#create","text":"To create and publish a DID document use the message MsgCreateDidDocument(id string, signerPubKey string) The message parameters are the DID to be created and the signerPubKey . The signerPubKey MUST be the public key of the account that signs the transaction. The public key MUST be used to attach a verification method of type EcdsaSecp256k1VerificationKey2019 with the value of publicKeyMultibase that contains the public key encoded according to the Multibase Data Format Hexadecimal upper-case encoding . The verification method controller MUST be one of the following: The DID of the document The DID of key type of the address that signs the transaction The verification method id SHOULD be generated as: {verificationMethodController}#{CosmosAddressFromPubKey} The verification method id MUST be listed in the authentication relationships. If the input DID is not a valid DID for the Cosmos method, or if the DID already exists on-chain, the message returns an error. Contextually with the creation of a DID document, a DID document metadata MUST be created with the following values: The hash of the transaction as versionId The block time for the created and updated fields The deactivated field is false To address privacy concerns: Use an id that is different from the blockchain account address Isolate the verification methods to the DID subject (for example, during key rotation) Note: A more fine-grained DID creation method can be implemented with the goal of saving in gas by executing a single transaction in a complex DID scenario.","title":"Create"},{"location":"Explanation/ADR/adr-004-did/#resolve-and-verify","text":"The integrity of the DID documents stored on the ledger is guaranteed by the underlying blockchain protocol. A DID can be resolved using the gRPC message: QueryDidDocumentRequest(did string) This example shows a DID document that was resolved using the gRPC interface: { \"didDocument\": { \"context\": [ \"https://www.w3.org/ns/did/v1\" ], \"id\": \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\", \"controller\": [ \"did:cosmos:key:cosmos1sl48sj2jjed7enrv3lzzplr9wc2f5js5tzjph8\" ], \"verificationMethod\": [ { \"controller\": \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\", \"id\": \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e#cosmos1x5hrv0hngmg8gls5cft7nphqs83njj25pwxpt0\", \"publicKeyMultibase\": \"0248a5178d7a90ec187b3c3d533a4385db905f6fcdaac5026859ca5ef7b0b1c3b5\", \"type\": \"EcdsaSecp256k1VerificationKey2019\" } ], \"authentication\": [ \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e#cosmos1x5hrv0hngmg8gls5cft7nphqs83njj25pwxpt0\" ] }, \"didMetadata\": { \"versionId\": \"9f7c547dc852af60c9da1fd514e1497d407b6a3d8ae3e52b626d536519dc8f4c\", \"created\": \"2021-08-23T08:24:26.972761898Z\", \"updated\": \"2021-08-24T15:54:40.902858856Z\", \"deactivated\": false } } The DID can also be resolved by a REST endpoint. The REST endpoint MUST be compatible with the W3C DID core recommendations and pass the DID Core Specification Test Suite : {NODE_URL}:{NODE_REST_PORT}/identifier/{did} This example shows a DID document that was resolved using a REST endpoint: { \"didDocument\":{ \"@context\":[ \"https://www.w3.org/ns/did/v1\" ], \"id\":\"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\", \"controller\":[ \"did:cosmos:key:cosmos1sl48sj2jjed7enrv3lzzplr9wc2f5js5tzjph8\" ], \"verificationMethod\":[ { \"controller\":\"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\", \"id\":\"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e#cosmos1x5hrv0hngmg8gls5cft7nphqs83njj25pwxpt0\", \"publicKeyMultibase\":\"0248a5178d7a90ec187b3c3d533a4385db905f6fcdaac5026859ca5ef7b0b1c3b5\", \"type\":\"EcdsaSecp256k1VerificationKey2019\" } ], \"authentication\":[ \"did:cosmos:net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e#cosmos1x5hrv0hngmg8gls5cft7nphqs83njj25pwxpt0\" ] }, \"didDocumentMetadata\":{ \"versionId\":\"4f0f8857ab36bdeee0ddb541ea7e7b9cb509d29e1103cc7def44d3d1e8220c22\", \"created\":\"2021-08-23T08:24:26.972761898Z\", \"updated\":\"2021-08-24T15:54:40.902858856Z\" }, \"didResolutionMetadata\":{ \"contentType\":\"application/ld+json\", \"did\":{ \"method\":\"cosmos\", \"methodSpecificId\":\"net:cosmoscash-testnet:900d82bc-2bfe-45a7-ab22-a8d11773568e\" } } }","title":"Resolve and Verify"},{"location":"Explanation/ADR/adr-004-did/#update","text":"There are two ways of updating a DID document: Manage DID controllers Manipulate verification methods and relationships In both cases, the target DID must exist on-chain and the signerAccount must exist as a verification method in a verification relationship of type authentication or it's key DID be listed as a DID controller. Additionally the DID document MUST NOT be in a deactivated status. Each update operation MUST update the versionId and the updated field of the associated DID document metadata with the transaction hash and the block time respectively. Manage DID Controllers Set the DID controllers using the gRPC message: MsgUpdateDidDocument(did string, controllers []string, signerAccount string) The parameters are as follows: did identifies the DID document controllers are a list of Cosmos addresses that will replace the DID document controllers list signerAccount is the account address that signs the transaction Controllers will be added using the did:cosmos:key: method type. A controller of a DID document MUST be a DID of type key . Manipulate Verification Methods and Relationships Add a new verification method using the gRPC message: MsgAddVerification(did string, accountId string, relationships []string, signerAccount string) The parameters are as follows: did identifies the did document accountId is the account to be added to the verification method relationships is the list of relationships that the accountId will be registered into signerAccount is the account address that is signing the transaction The list of relationships must contain only valid verification relationships names as defined in the DID document and MUST be non-empty: Set the relationships of a verification method using the gRPC message: MsgSetVerificationRelationships(did string, accountId string, relationships []string, signerAccount string) Services A service MUST be an entity with the following properties: id : a valid RFC3986 URI string. type : a non empty string. serviceEndpoint : a valid RFC3986 URI string. A service can be added using the gRPC method: MsgAddService(did string, service_data Service, signerAccount string) The id of a service MUST be unique within the DID document. A service can be deleted using the gRPC message: MsgDeleteService(did string, service_id string, signerAccount string)","title":"Update"},{"location":"Explanation/ADR/adr-004-did/#deactivate","text":"A DID can be deactivated using the gRPC message: MsgDeactivateDid(did string, signerAccount string) The operation MUST update the DID document metadata and set the deactivated value to true. The operation is not reversible.","title":"Deactivate"},{"location":"Explanation/ADR/adr-004-did/#method-specific-properties","text":"","title":"Method-Specific Properties"},{"location":"Explanation/ADR/adr-004-did/#did-core-verification-material","text":"The Verification Material type MUST support: Type EcdsaSecp256k1VerificationKey2019 with pubKeyMultibase to encode a Cosmos account public key in hexadecimal format Type CosmosAccountAddress with blockchainAccountID to represent a Cosmos account Support for other verification materials can be added.","title":"DID Core Verification Material"},{"location":"Explanation/ADR/adr-004-did/#verification-relationships","text":"The DID document MUST support the following verification relationships : authentication - authorizes amends to the DID document assertionMethod keyAgreement capabilityInvocation capabilityDelegation","title":"Verification Relationships"},{"location":"Explanation/ADR/adr-004-did/#did-document-metadata","text":"The implementation for DID document metadata MUST report the following properties for a DID document: created : a datetime string of the creation date that is the UTC date associated with the block height when the DID document was submitted the first time updated : a datetime string of the last update date that is the UTC date associated with the block height when the DID document was submitted the last time deactivated : a boolean field that indicates if the DID document is deactivated versionId : a hex-encoded BLAKE2b hash of the transaction that created or updated the DID","title":"DID Document Metadata"},{"location":"Explanation/ADR/adr-004-did/#did-resolution-metadata","text":"The DID Resolution Metadata is outside the scope of the gRPC interface and is not covered in this ADR.","title":"DID Resolution Metadata"},{"location":"Explanation/ADR/adr-004-did/#did-url-syntax","text":"The DID URL Syntax is outside the scope of the gRPC interface and is not covered in this ADR.","title":"DID URL Syntax"},{"location":"Explanation/ADR/adr-004-did/#did-query-parameters","text":"The DID Query parameters URL is outside the scope of the gRPC interface and is not covered in this ADR.","title":"DID Query Parameters"},{"location":"Explanation/ADR/adr-004-did/#privacy-considerations","text":"When any data (for example, W3C Verifiable Credentials) is associated with Cosmos DIDs, sharing that data would also impose sharing the on-chain data graph (for example, transaction history) of the blockchain account that controls the DID. Using personally identifiable information as DID Method-specific identifiers (for example, account name alice) discloses personal information every time the DID is shared with a counterparty. This specification DOES NOT endorse the use of identifiers that correlates to human beings or other sensible subjects.","title":"Privacy Considerations"},{"location":"Explanation/ADR/adr-004-did/#security-considerations","text":"Ephemeral DIDs ( did:cosmos:key type) are generated based on a blockchain address. If access to the authoritative keys for an account are lost, the control of the DID and verifiable data issued by the DID is lost as well.","title":"Security Considerations"},{"location":"Explanation/ADR/adr-004-did/#consequences","text":"The Cosmos ecosystem WILL HAVE a DID module that is compatible with the W3C standard and offers a high chance of compatibility with third-party components such as cloud and edge agents, resolvers, and so on.","title":"Consequences"},{"location":"Explanation/ADR/adr-004-did/#backwards-compatibility","text":"This is a new module so backward compatibility is not a concern.","title":"Backwards Compatibility"},{"location":"Explanation/ADR/adr-004-did/#positive","text":"The implementation of the ADR provides the foundation for interoperability with the DID standard and the SSI identity approach. Closely following the W3C standard gives the best chances of successful interoperability with third-party components.","title":"Positive"},{"location":"Explanation/ADR/adr-004-did/#negative","text":"The implementation rigidly follows the W3C specification which leaves little room for extensibility. This approach might become an issue for wider adoption.","title":"Negative"},{"location":"Explanation/ADR/adr-004-did/#neutral","text":"N/A","title":"Neutral"},{"location":"Explanation/ADR/adr-004-did/#further-discussions","text":"While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR. The did:key method specifies a key format that is different from the one used in this ADR. This ADR needs to be amended or follow a different approach. The approach proposed is somewhat locked into the current implementation and will have to be revised in successive iterations.","title":"Further Discussions"},{"location":"Explanation/ADR/adr-004-did/#test-cases-optional","text":"N/A","title":"Test Cases [optional]"},{"location":"Explanation/ADR/adr-004-did/#references","text":"DID Core DID Specification Registries","title":"References"},{"location":"Explanation/ADR/adr-005-registration-credential/","text":"ADR 005: A VASP Registration Credential based on W3C Standards Table of Contents ADR 005: A VASP Registration Credential based on W3C Standards Table of Contents Changelog Status Abstract Context Terminology Decision Credential Structure Legal Person Name Name Type Identification Type Identifier Type Code Address Address Type Example Credential Consequences Backward Compatibility Positive Negative Neutral Further Discussions References Changelog 29-Jul-2021: Initial Draft 09-Aug-2021: Second Draft Status DRAFT - Not Implemented Abstract Financial services regulation is based on registrations issued by publicly appointed authorities for a given jurisdiction. Registrations together with licenses allow legal entities to perform activities such holding client money, offer financial advice etc. Typically a regulator will maintain a central public registry, for example the FCA register . This ADR describes the structure of a Financial Services registration based on the W3C specification for verifiable credential. This credential will be signed by the relevant authority and can be used as proof of identity such as when establishing relationships with new clients or counterparties. Context ADR-003 identified an issuer actor. This issuer holds a license that gives permissions to perform certain activities. The license is issued by an authority actor: the regulator. The use cases of Role-based permissions on-chain extends to other services or protocols. For example, exchange and custody services. A definition that can extend to these cases would be vital. Current regulation is typically based around a single jurisdiction. Each jurisdiction can have one or more authorities. Each authority manages one or more financial services and licenses legal persons for these services. In effect a single legal person can have one or more licenses to provide different services from different authorities. In the case of the EU, regulation can extend across multiple jurisdiction, specifically passporting means that licensed legal persons in one jurisdiction can offer the same financial services in another EU-based jurisdiction. OpenVASP defines a credential and ovip-0013 as part of their protocol. Terminology See Glossary for specific terms. NOTES: In this ADR we SHALL USE legal person rather than legal entity . The terms are interchangeable, but legal person has a legal meaning. Note that W3C documentation uses legal entity when it refers to legal person Decision Within Cosmos Cash, registrations will be based upon Verifiable Credentials, as per W3C Recommendation . These SHALL BE called a RegistrationCredential . Each credential SHALL BE issued by a single authority. The credential SHALL BE issued to a single legal person. The legal person will be denoted by their PUBLIC DID . DID SHALL BE the primary means for identification of VASPs and authorities. The credential Schema SHALL BE stored in a Verifiable Data Registry (VDR) The credential SHALL BE stored in the same VDR AND be viewed. Registrations CAN NOT expire, but CAN BE revoked under certain circumstances such as The holder no longer exists Some form of malpractice. Credential Structure Overall structure is based on standard verifiable credentials. Level 1 Level 2 Type Mult. Notes @context 1..1 See W3C Contexts Data Model id 1..1 See W3C Identifiers Data Model type List[String] 1..1 See W3C Types Data Model issuer DID 1..1 DID of credential issuer, for example \"did:sov:12345\" issuanceDate String 1..1 Date format SHALL BE RFC3339 standard credentialSubject 1..1 id DID 1..1 DID of credential subject, for example \"did:cosmos:cash:12345\" legalPerson Legal Person 0..1 address Address 1..1 ids Identification Type 1..* proof 1..* As per W3C Proofs Data Model Notes: Contexts CAN TAKE this value as an example: [ \"https://www.w3.org/2018/credentials/v1\", \"https://www.cosmos.cash/2021/credentials/registration/v1\" ] . Registration Credential SHALL BE versioned based on the context id SHALL BE the ID of credential, for example \"http://fca.gov.uk/credentials/1234\" Types SHALL TAKE this value [\"VerifiableCredential\", \"RegistrationCredential\"] Unlike the OpenVASP standard, the version is no longer part of the credentialSubject . The context SHALL BE USED to do this instead. The subject of the credential SHALL BE the registered legal person. They will have a DID, one or more names, a registered address and one or more identifiers for tax, license and operating purposes. OpenVASP vaspId is a string and must be a VASP Identifier as specified in ovip-0002 . This is a string that is very similar to IBANs . In our specification Decentralized Identifiers SHALL BE used. This SHALL BE a PUBLIC DID , for example \"did:git:df1245\" Legal Person A legal person CAN HAVE multiple names representing a legal name, trading and short name. A relevant example would be where All in Bits GmBH is a LEGAL name, but Tendermint is a TRADING name. Within this specification, a Legal Person MUST HAVE at least one name AND this must be a LEGAL name (see Name Type ) This defintion follows OpenVASP proposal of local and phonetic names. These SHALL BE optional. Level 2 Name Type Mult. Notes Name name List[ Name ] 1..* Local Name nameLocal List[ Name ] 0..* Phonetic Name namePhonetic List[ Name ] 0..* Registration Country regCtry String(2) 1..1 regCtry MUST BE formatted as per ISO 3166-1 Name Each Name SHALL HAVE two values: the name itself and a value denoting the type. Level 3 Name Type Mult. Notes Name name String 1..1 Name type type Name Type 1..1 Name Type A legal person can operate using a range of different names - see the example above. Name Type CAN TAKE the following values: Code Name Description LEGL Legal name Official name under which an organization is registered SHRT Short name Short name of the organization TRAD Trading name Name used by the organization for commercial purposes Identification Type Level 2 Name Type Mult. Notes Identifier id String 1..1 Identifier Type type Identifier Type Code 1..1 Country of issue idCtry String 0..1 Registration Authority idAuthority String 0..1 Notes: If value of type is in [ RAID , TXID , MISC ] then idAuthority MUST BE present. If the value of type is LEIX then idAuthority MUST NOT BE present. idCtry MUST BE formatted as per ISO 3166-1 . idAuthority MUST BE a valid GLEIF Registration Authority Code Identifier Type Code Identifies the national identification type. Code Name Description ARNU Alien registration number Number assigned by a government agency to identify foreign nationals CCPT Passport number Number assigned by a passport authority RAID Registration authority identifier Identifier of a legal entity as maintained by a registration entity DRLC Driver license number Number assigned to a driver's license FIIN Foreign investment identity number Number assigned to a foreign investor (other than the alien number) TXID Tax identification number Number assigned by a tax authority to an entity SOCS Social security number Number assigned by a social security agency IDCD Identity card number Number assigned by a national authority to an identity card LEIX Legal Entity Identifier Legal Entity Identifier (LEI) as per ISO 17442 MISC Unspecified A national identifier which is known but cannot be categorized by the sender Notes: This is more generic than required for a VASP, but this COULD BE reused for KYC credentials. Address Unlike OpenVASP, address SHALL USE collonly defined standards for address, that include: ctry SHALL FOLLOW ISO 3166-1 . adminArea SHALL FOLLOW ISO 3166-2 Address fields SHALL FOLLOW xNAL standards Address currently WILL NOT permit geographical coordinates. Level 2 Name Type Mult. Notes Address type adrType Address Type 1..1 Sub-Premise subPremise String 0..1 Equivalent of Floor, sub-unit etc. Premise premise String 0..1 Equivalent of , Box Number etc. thoroughfare thfare String 0..1 Equivalent Street Address or Road Post code postcode String 0..1 Equivalent of zip code Locality town String 1..1 Equivalent of Town or City Sub Administrative Area subAdminArea String 0..1 administrative_area adminArea String 0..1 Equivalent of State/Province/Region Country ctry String 1..1 Address Type Identifies the nature of the address Code Name Description Notes HOME Residential Home address BIZZ Business Business address GEOG Geographic Unspecified physical address Example Credential Example Registration Credential in json-ld format is as follows: { \"@context\": [ \"https://www.w3.org/2018/credentials/v1\", \"https://www.cosmos.cash/2021/credentials/registration/v1\" ], \"id\": \"http://fca.gov.uk/credentials/1234\", \"type\": [ \"VerifiableCredential\", \"RegistrationCredential\" ], \"issuer\": \"did:sov:12345\", \"issuanceDate\": \"2021-08-01T15:23:24Z\", \"credentialSubject\": { \"id\": \"did:cosmos:cash:1000bb528777\", \"legalPerson\": { \"names\": [{ \"name\": \"Example VASP AG\", \"type\": \"LEGL\" }, { \"name\": \"EgVASP\", \"type\": \"SHRT\" }], \"ctryReg\": \"CH\" }, \"address\": { \"addr_type\": \"BIZZ\", \"thfare\": \"Liverpool Street\", \"premise\": \"22\", \"postcode\": \"EC2R\", \"locality\": \"London\", \"country\": \"GB\" }, \"ids\": [{ \"id\": \"CH02035398520\", \"type\": \"RAID\" }, { \"id\": \"529900W6B9NEA233DS71\", \"type\": \"LEIX\" }] }, \"proof\": { \"type\": \"SIGNATURE-TYPE\", \"created\": \"2021-08-01T15:23:24Z\", \"proofPurpose\": \"assertionMethod\", \"verificationMethod\": \"https://example.edu/issuers/keys/1\", \"jws\": \"a_jws_...\" } } Consequences This section describes the resulting context after applying the decision. List all consequences here, taking care not to list only the \"positive\" consequences. A particular decision may have positive, negative, and neutral consequences, but all of the consesquences affect the team and project in the future. Backward Compatibility This is the first definition of the credential. Backwards compatibility is not a concern. Positive This ADR offers the following benefits A public VASP registry maintained by a regulator A verified registration credential issued by a regulator provides guarantees to new clients that the holder is a registered VASP. Combined with a license credential it offer guarantees to the The credential is compatible with W3C standards Negative {negative consequences} Neutral {neutral consequences} Further Discussions While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR. References {reference link}","title":"ADR 005: A VASP Registration Credential based on W3C Standards"},{"location":"Explanation/ADR/adr-005-registration-credential/#adr-005-a-vasp-registration-credential-based-on-w3c-standards","text":"","title":"ADR 005: A VASP Registration Credential based on W3C Standards"},{"location":"Explanation/ADR/adr-005-registration-credential/#table-of-contents","text":"ADR 005: A VASP Registration Credential based on W3C Standards Table of Contents Changelog Status Abstract Context Terminology Decision Credential Structure Legal Person Name Name Type Identification Type Identifier Type Code Address Address Type Example Credential Consequences Backward Compatibility Positive Negative Neutral Further Discussions References","title":"Table of Contents"},{"location":"Explanation/ADR/adr-005-registration-credential/#changelog","text":"29-Jul-2021: Initial Draft 09-Aug-2021: Second Draft","title":"Changelog"},{"location":"Explanation/ADR/adr-005-registration-credential/#status","text":"DRAFT - Not Implemented","title":"Status"},{"location":"Explanation/ADR/adr-005-registration-credential/#abstract","text":"Financial services regulation is based on registrations issued by publicly appointed authorities for a given jurisdiction. Registrations together with licenses allow legal entities to perform activities such holding client money, offer financial advice etc. Typically a regulator will maintain a central public registry, for example the FCA register . This ADR describes the structure of a Financial Services registration based on the W3C specification for verifiable credential. This credential will be signed by the relevant authority and can be used as proof of identity such as when establishing relationships with new clients or counterparties.","title":"Abstract"},{"location":"Explanation/ADR/adr-005-registration-credential/#context","text":"ADR-003 identified an issuer actor. This issuer holds a license that gives permissions to perform certain activities. The license is issued by an authority actor: the regulator. The use cases of Role-based permissions on-chain extends to other services or protocols. For example, exchange and custody services. A definition that can extend to these cases would be vital. Current regulation is typically based around a single jurisdiction. Each jurisdiction can have one or more authorities. Each authority manages one or more financial services and licenses legal persons for these services. In effect a single legal person can have one or more licenses to provide different services from different authorities. In the case of the EU, regulation can extend across multiple jurisdiction, specifically passporting means that licensed legal persons in one jurisdiction can offer the same financial services in another EU-based jurisdiction. OpenVASP defines a credential and ovip-0013 as part of their protocol.","title":"Context"},{"location":"Explanation/ADR/adr-005-registration-credential/#terminology","text":"See Glossary for specific terms. NOTES: In this ADR we SHALL USE legal person rather than legal entity . The terms are interchangeable, but legal person has a legal meaning. Note that W3C documentation uses legal entity when it refers to legal person","title":"Terminology"},{"location":"Explanation/ADR/adr-005-registration-credential/#decision","text":"Within Cosmos Cash, registrations will be based upon Verifiable Credentials, as per W3C Recommendation . These SHALL BE called a RegistrationCredential . Each credential SHALL BE issued by a single authority. The credential SHALL BE issued to a single legal person. The legal person will be denoted by their PUBLIC DID . DID SHALL BE the primary means for identification of VASPs and authorities. The credential Schema SHALL BE stored in a Verifiable Data Registry (VDR) The credential SHALL BE stored in the same VDR AND be viewed. Registrations CAN NOT expire, but CAN BE revoked under certain circumstances such as The holder no longer exists Some form of malpractice.","title":"Decision"},{"location":"Explanation/ADR/adr-005-registration-credential/#credential-structure","text":"Overall structure is based on standard verifiable credentials. Level 1 Level 2 Type Mult. Notes @context 1..1 See W3C Contexts Data Model id 1..1 See W3C Identifiers Data Model type List[String] 1..1 See W3C Types Data Model issuer DID 1..1 DID of credential issuer, for example \"did:sov:12345\" issuanceDate String 1..1 Date format SHALL BE RFC3339 standard credentialSubject 1..1 id DID 1..1 DID of credential subject, for example \"did:cosmos:cash:12345\" legalPerson Legal Person 0..1 address Address 1..1 ids Identification Type 1..* proof 1..* As per W3C Proofs Data Model Notes: Contexts CAN TAKE this value as an example: [ \"https://www.w3.org/2018/credentials/v1\", \"https://www.cosmos.cash/2021/credentials/registration/v1\" ] . Registration Credential SHALL BE versioned based on the context id SHALL BE the ID of credential, for example \"http://fca.gov.uk/credentials/1234\" Types SHALL TAKE this value [\"VerifiableCredential\", \"RegistrationCredential\"] Unlike the OpenVASP standard, the version is no longer part of the credentialSubject . The context SHALL BE USED to do this instead. The subject of the credential SHALL BE the registered legal person. They will have a DID, one or more names, a registered address and one or more identifiers for tax, license and operating purposes. OpenVASP vaspId is a string and must be a VASP Identifier as specified in ovip-0002 . This is a string that is very similar to IBANs . In our specification Decentralized Identifiers SHALL BE used. This SHALL BE a PUBLIC DID , for example \"did:git:df1245\"","title":"Credential Structure"},{"location":"Explanation/ADR/adr-005-registration-credential/#legal-person","text":"A legal person CAN HAVE multiple names representing a legal name, trading and short name. A relevant example would be where All in Bits GmBH is a LEGAL name, but Tendermint is a TRADING name. Within this specification, a Legal Person MUST HAVE at least one name AND this must be a LEGAL name (see Name Type ) This defintion follows OpenVASP proposal of local and phonetic names. These SHALL BE optional. Level 2 Name Type Mult. Notes Name name List[ Name ] 1..* Local Name nameLocal List[ Name ] 0..* Phonetic Name namePhonetic List[ Name ] 0..* Registration Country regCtry String(2) 1..1 regCtry MUST BE formatted as per ISO 3166-1","title":"Legal Person"},{"location":"Explanation/ADR/adr-005-registration-credential/#name","text":"Each Name SHALL HAVE two values: the name itself and a value denoting the type. Level 3 Name Type Mult. Notes Name name String 1..1 Name type type Name Type 1..1","title":"Name"},{"location":"Explanation/ADR/adr-005-registration-credential/#name-type","text":"A legal person can operate using a range of different names - see the example above. Name Type CAN TAKE the following values: Code Name Description LEGL Legal name Official name under which an organization is registered SHRT Short name Short name of the organization TRAD Trading name Name used by the organization for commercial purposes","title":"Name Type"},{"location":"Explanation/ADR/adr-005-registration-credential/#identification-type","text":"Level 2 Name Type Mult. Notes Identifier id String 1..1 Identifier Type type Identifier Type Code 1..1 Country of issue idCtry String 0..1 Registration Authority idAuthority String 0..1 Notes: If value of type is in [ RAID , TXID , MISC ] then idAuthority MUST BE present. If the value of type is LEIX then idAuthority MUST NOT BE present. idCtry MUST BE formatted as per ISO 3166-1 . idAuthority MUST BE a valid GLEIF Registration Authority Code","title":"Identification Type"},{"location":"Explanation/ADR/adr-005-registration-credential/#identifier-type-code","text":"Identifies the national identification type. Code Name Description ARNU Alien registration number Number assigned by a government agency to identify foreign nationals CCPT Passport number Number assigned by a passport authority RAID Registration authority identifier Identifier of a legal entity as maintained by a registration entity DRLC Driver license number Number assigned to a driver's license FIIN Foreign investment identity number Number assigned to a foreign investor (other than the alien number) TXID Tax identification number Number assigned by a tax authority to an entity SOCS Social security number Number assigned by a social security agency IDCD Identity card number Number assigned by a national authority to an identity card LEIX Legal Entity Identifier Legal Entity Identifier (LEI) as per ISO 17442 MISC Unspecified A national identifier which is known but cannot be categorized by the sender Notes: This is more generic than required for a VASP, but this COULD BE reused for KYC credentials.","title":"Identifier Type Code"},{"location":"Explanation/ADR/adr-005-registration-credential/#address","text":"Unlike OpenVASP, address SHALL USE collonly defined standards for address, that include: ctry SHALL FOLLOW ISO 3166-1 . adminArea SHALL FOLLOW ISO 3166-2 Address fields SHALL FOLLOW xNAL standards Address currently WILL NOT permit geographical coordinates. Level 2 Name Type Mult. Notes Address type adrType Address Type 1..1 Sub-Premise subPremise String 0..1 Equivalent of Floor, sub-unit etc. Premise premise String 0..1 Equivalent of , Box Number etc. thoroughfare thfare String 0..1 Equivalent Street Address or Road Post code postcode String 0..1 Equivalent of zip code Locality town String 1..1 Equivalent of Town or City Sub Administrative Area subAdminArea String 0..1 administrative_area adminArea String 0..1 Equivalent of State/Province/Region Country ctry String 1..1","title":"Address"},{"location":"Explanation/ADR/adr-005-registration-credential/#address-type","text":"Identifies the nature of the address Code Name Description Notes HOME Residential Home address BIZZ Business Business address GEOG Geographic Unspecified physical address","title":"Address Type"},{"location":"Explanation/ADR/adr-005-registration-credential/#example-credential","text":"Example Registration Credential in json-ld format is as follows: { \"@context\": [ \"https://www.w3.org/2018/credentials/v1\", \"https://www.cosmos.cash/2021/credentials/registration/v1\" ], \"id\": \"http://fca.gov.uk/credentials/1234\", \"type\": [ \"VerifiableCredential\", \"RegistrationCredential\" ], \"issuer\": \"did:sov:12345\", \"issuanceDate\": \"2021-08-01T15:23:24Z\", \"credentialSubject\": { \"id\": \"did:cosmos:cash:1000bb528777\", \"legalPerson\": { \"names\": [{ \"name\": \"Example VASP AG\", \"type\": \"LEGL\" }, { \"name\": \"EgVASP\", \"type\": \"SHRT\" }], \"ctryReg\": \"CH\" }, \"address\": { \"addr_type\": \"BIZZ\", \"thfare\": \"Liverpool Street\", \"premise\": \"22\", \"postcode\": \"EC2R\", \"locality\": \"London\", \"country\": \"GB\" }, \"ids\": [{ \"id\": \"CH02035398520\", \"type\": \"RAID\" }, { \"id\": \"529900W6B9NEA233DS71\", \"type\": \"LEIX\" }] }, \"proof\": { \"type\": \"SIGNATURE-TYPE\", \"created\": \"2021-08-01T15:23:24Z\", \"proofPurpose\": \"assertionMethod\", \"verificationMethod\": \"https://example.edu/issuers/keys/1\", \"jws\": \"a_jws_...\" } }","title":"Example Credential"},{"location":"Explanation/ADR/adr-005-registration-credential/#consequences","text":"This section describes the resulting context after applying the decision. List all consequences here, taking care not to list only the \"positive\" consequences. A particular decision may have positive, negative, and neutral consequences, but all of the consesquences affect the team and project in the future.","title":"Consequences"},{"location":"Explanation/ADR/adr-005-registration-credential/#backward-compatibility","text":"This is the first definition of the credential. Backwards compatibility is not a concern.","title":"Backward Compatibility"},{"location":"Explanation/ADR/adr-005-registration-credential/#positive","text":"This ADR offers the following benefits A public VASP registry maintained by a regulator A verified registration credential issued by a regulator provides guarantees to new clients that the holder is a registered VASP. Combined with a license credential it offer guarantees to the The credential is compatible with W3C standards","title":"Positive"},{"location":"Explanation/ADR/adr-005-registration-credential/#negative","text":"{negative consequences}","title":"Negative"},{"location":"Explanation/ADR/adr-005-registration-credential/#neutral","text":"{neutral consequences}","title":"Neutral"},{"location":"Explanation/ADR/adr-005-registration-credential/#further-discussions","text":"While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR.","title":"Further Discussions"},{"location":"Explanation/ADR/adr-005-registration-credential/#references","text":"{reference link}","title":"References"},{"location":"Explanation/ADR/adr-006-license-credential/","text":"ADR 006: An Issuer License based on W3C Verifiable Credential Standards Table of Contents ADR 005: An Issuer License based on W3C Verifiable Credential Standards Table of Contents Changelog Status Abstract Context Terminology Decision Credential Structure License License Type Example Credential Consequences Backward Compatibility Positive Negative Neutral Further Discussions References Changelog 18-Aug-2021: Initial Draft Status DRAFT - Not Implemented Abstract Financial services regulation is based on registrations that are issued by a publicly appointed authority for a given jurisdiction. Registrations, together with licenses, allow legal entities to perform activities such as holding client money, offering financial advice, and so on. Typically a regulator maintains a central public registry like the FCA register . This ADR describes the structure of an issuer license based on the W3C Verifiable Credentials Data Model 1.0 specification. This license makes reference to the classes of crypto assets described in MiCA, but the license could easily be adopted as proof of authority to issue various types of crypto or virtual assets. In all cases, this credential will be signed by an authority and acts as proof that the holder can offer the financial services defined in the License Credential. Context Current regulation is typically based around a single jurisdiction. Each jurisdiction can have one or more authorities who regulate one or more types of financial service. These authorities typically issue license or permits to qualified legal persons. Licenses permit the holder to offer services subject to defined constraints. A legal person can have one or more licenses to provide different services from different authorities. In the case of the EU, regulation can extend across multiple jurisdictions through a passporting mechanism. This mechanism allows licensed legal persons in one jurisdiction to offer the same financial services in another EU-based jurisdiction. OpenVASP defines the ovip-15 and ovip-0013 credentials as part of their protocol. These credential are an equivalent of the registration credential , but this ADR 005 license credential does not define the services that a VASP can perform. Terminology See Glossary for specific terms. DISCUSSION NOTES: - Need to decide between 'legal person' and legal entity . legal person has a legal meaning, but legal entity is closer to W3C documentation where it refers to \"entities\" Decision Within Cosmos Cash, licenses will be based upon Verifiable Credentials, as per W3C Verifiable Credentials Data Model 1.0 specification. The Cosmos Cash license credential SHALL BE called an IssuerLicense . Each credential SHALL BE issued by a single authority. The credential SHALL BE issued to a single legal person. The license entitles the holder to mint one or more tokens up to a defined limit. The legal person will be denoted by their PUBLIC DID . DID SHALL BE the primary means for identification of VASPs and authorities. The credential schema SHALL BE stored in a Verifiable Data Registry (VDR). The credential SHALL BE stored in the holder's private wallet Licenses CANNOT expire, but CAN BE revoked under certain circumstances such as: The holder no longer exists. Some form of malpractice on the part of the issuer. Licenses can be updated, for example in the case of an update of a change issuance limit. Credential Structure Overall structure is based on standard verifiable credentials. Level 1 Level 2 Type Mult. Notes @context 1..1 See W3C Contexts Data Model id DID 1..1 See W3C Identifiers Data Model type List[String] 1..1 See W3C Types Data Model issuer DID 1..1 issuanceDate String 1..1 Format SHALL BE RFC3339 standard credentialSubject 1..1 id DID 1..1 DID of the license holder license License 1..1 proof 1..* See W3C Proofs Data Model Notes: Contexts CAN TAKE this value as an example: [ \"https://www.w3.org/2018/credentials/v1\", \"https://www.cosmos.cash/2021/credentials/issuerlicense/v1\" ] . Issuer License Credential SHALL BE versioned based on the context header id SHALL BE the ID of credential, for example \"http://fca.gov.uk/credentials/4567\" Types SHALL TAKE this value [\"VerifiableCredential\", \"IssuerLicense\"] issuer SHALL BE the DID of credential issuer, for example \"did:sov:12345\" id SHALL BE the DID of credential subject, for example \"did:git:67890\" Unlike OpenVASP's definition, this credential will not have an agreement structure License Level 2 Name Type Mult. Notes License Type licenseType License Type 1..1 Name of recognized license or registration Country country String(2) 1..1 Uses ISO 3166-1 Authority authority String 1..1 Licensing authority Denomination denom String 1..1 Token identifier or denomination Circulation Limit circulationLimit Integer 1..1 Amount of tokens that can be issued Notes: The license type is defined by the MICA regulation and will be used to identify different types of token assets. This will be used to identify different asset classes of tokens being issued by Issuers. A later version of this credential COULD BE extended to include explicitly a list of all permissions that a holder can perform upon presentation of this credential. In this case this would include mint, burn, freeze, unfreeze and rescue. License Type licenseType CAN TAKE multiple values based on the regulation. The examples here are based on MiCA regulation: Code Name Description MICAEMI E-Money Token E-Money Token as defined under MiCA MICAART Asset Referenced Token Asset Referenced Token as defined under MiCA Example Credential Example credential in json-ld format is as follows: { \"@context\": [ \"https://www.w3.org/2018/credentials/v1\", \"https://www.cosmos.cash/2021/credentials/license/v1\" ], \"id\": \"http://fca.gov.uk/credentials/1234\", \"type\": [ \"VerifiableCredential\", \"LicenseCredential\" ], \"issuer\": \"did:sov:12345\", \"issuanceDate\": \"2021-08-01T15:23:24Z\", \"credentialSubject\": { \"id\": \"did:cosmos:cash:1000bb528777\", \"license\": { \"licenseType\": \"MICAEMI\", // MiCA issuer license - can fine tune this to asset backed tokens, E-Money tokens etc \"country\": \"CH\", \"authority\": \"Another Financial Services Body (AFSB)\", \"denom\": \"sEUR\", \"circulationLimit\": 100 } }, \"proof\": { \"type\": \"SIGNATURE_TYPE\", \"created\": \"2021-08-01T15:23:24Z\", \"proofPurpose\": \"assertionMethod\", \"verificationMethod\": \"https://example.edu/issuers/keys/1\", \"jws\": \"jws123..\" // truncated for readability } } Consequences Backward Compatibility This is the first definition of the credential. Backward compatibility is not a concern. Positive This ADR offers the following benefits: Regulatory compliance through open standards Implements a Role Based Access to services on Cosmos Cash. Uses Self-Sovereign Identity (SSI) standards so this means: Interoperability - for example, the credential can be stored in a variety of different identity wallets Flexibility - for example, this credential can be re-used in other scenarios where token issuance is required Adoption of SSI for provision of financial services offers benefits in terms of licensing and management on public platforms. Negative No negative consequences Neutral There are a number of macro-level concerns, but these do not affect the adoption of this model for role-based access control (RBAC). These macro concerns include: Self-Sovereign Identity technologies are still relatively new. eiDAS legislation is still in development. Further Discussions While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR. References {reference link}","title":"ADR 006: An Issuer License based on W3C Verifiable Credential Standards"},{"location":"Explanation/ADR/adr-006-license-credential/#adr-006-an-issuer-license-based-on-w3c-verifiable-credential-standards","text":"","title":"ADR 006: An Issuer License based on W3C Verifiable Credential Standards"},{"location":"Explanation/ADR/adr-006-license-credential/#table-of-contents","text":"ADR 005: An Issuer License based on W3C Verifiable Credential Standards Table of Contents Changelog Status Abstract Context Terminology Decision Credential Structure License License Type Example Credential Consequences Backward Compatibility Positive Negative Neutral Further Discussions References","title":"Table of Contents"},{"location":"Explanation/ADR/adr-006-license-credential/#changelog","text":"18-Aug-2021: Initial Draft","title":"Changelog"},{"location":"Explanation/ADR/adr-006-license-credential/#status","text":"DRAFT - Not Implemented","title":"Status"},{"location":"Explanation/ADR/adr-006-license-credential/#abstract","text":"Financial services regulation is based on registrations that are issued by a publicly appointed authority for a given jurisdiction. Registrations, together with licenses, allow legal entities to perform activities such as holding client money, offering financial advice, and so on. Typically a regulator maintains a central public registry like the FCA register . This ADR describes the structure of an issuer license based on the W3C Verifiable Credentials Data Model 1.0 specification. This license makes reference to the classes of crypto assets described in MiCA, but the license could easily be adopted as proof of authority to issue various types of crypto or virtual assets. In all cases, this credential will be signed by an authority and acts as proof that the holder can offer the financial services defined in the License Credential.","title":"Abstract"},{"location":"Explanation/ADR/adr-006-license-credential/#context","text":"Current regulation is typically based around a single jurisdiction. Each jurisdiction can have one or more authorities who regulate one or more types of financial service. These authorities typically issue license or permits to qualified legal persons. Licenses permit the holder to offer services subject to defined constraints. A legal person can have one or more licenses to provide different services from different authorities. In the case of the EU, regulation can extend across multiple jurisdictions through a passporting mechanism. This mechanism allows licensed legal persons in one jurisdiction to offer the same financial services in another EU-based jurisdiction. OpenVASP defines the ovip-15 and ovip-0013 credentials as part of their protocol. These credential are an equivalent of the registration credential , but this ADR 005 license credential does not define the services that a VASP can perform.","title":"Context"},{"location":"Explanation/ADR/adr-006-license-credential/#terminology","text":"See Glossary for specific terms. DISCUSSION NOTES: - Need to decide between 'legal person' and legal entity . legal person has a legal meaning, but legal entity is closer to W3C documentation where it refers to \"entities\"","title":"Terminology"},{"location":"Explanation/ADR/adr-006-license-credential/#decision","text":"Within Cosmos Cash, licenses will be based upon Verifiable Credentials, as per W3C Verifiable Credentials Data Model 1.0 specification. The Cosmos Cash license credential SHALL BE called an IssuerLicense . Each credential SHALL BE issued by a single authority. The credential SHALL BE issued to a single legal person. The license entitles the holder to mint one or more tokens up to a defined limit. The legal person will be denoted by their PUBLIC DID . DID SHALL BE the primary means for identification of VASPs and authorities. The credential schema SHALL BE stored in a Verifiable Data Registry (VDR). The credential SHALL BE stored in the holder's private wallet Licenses CANNOT expire, but CAN BE revoked under certain circumstances such as: The holder no longer exists. Some form of malpractice on the part of the issuer. Licenses can be updated, for example in the case of an update of a change issuance limit.","title":"Decision"},{"location":"Explanation/ADR/adr-006-license-credential/#credential-structure","text":"Overall structure is based on standard verifiable credentials. Level 1 Level 2 Type Mult. Notes @context 1..1 See W3C Contexts Data Model id DID 1..1 See W3C Identifiers Data Model type List[String] 1..1 See W3C Types Data Model issuer DID 1..1 issuanceDate String 1..1 Format SHALL BE RFC3339 standard credentialSubject 1..1 id DID 1..1 DID of the license holder license License 1..1 proof 1..* See W3C Proofs Data Model Notes: Contexts CAN TAKE this value as an example: [ \"https://www.w3.org/2018/credentials/v1\", \"https://www.cosmos.cash/2021/credentials/issuerlicense/v1\" ] . Issuer License Credential SHALL BE versioned based on the context header id SHALL BE the ID of credential, for example \"http://fca.gov.uk/credentials/4567\" Types SHALL TAKE this value [\"VerifiableCredential\", \"IssuerLicense\"] issuer SHALL BE the DID of credential issuer, for example \"did:sov:12345\" id SHALL BE the DID of credential subject, for example \"did:git:67890\" Unlike OpenVASP's definition, this credential will not have an agreement structure","title":"Credential Structure"},{"location":"Explanation/ADR/adr-006-license-credential/#license","text":"Level 2 Name Type Mult. Notes License Type licenseType License Type 1..1 Name of recognized license or registration Country country String(2) 1..1 Uses ISO 3166-1 Authority authority String 1..1 Licensing authority Denomination denom String 1..1 Token identifier or denomination Circulation Limit circulationLimit Integer 1..1 Amount of tokens that can be issued Notes: The license type is defined by the MICA regulation and will be used to identify different types of token assets. This will be used to identify different asset classes of tokens being issued by Issuers. A later version of this credential COULD BE extended to include explicitly a list of all permissions that a holder can perform upon presentation of this credential. In this case this would include mint, burn, freeze, unfreeze and rescue.","title":"License"},{"location":"Explanation/ADR/adr-006-license-credential/#license-type","text":"licenseType CAN TAKE multiple values based on the regulation. The examples here are based on MiCA regulation: Code Name Description MICAEMI E-Money Token E-Money Token as defined under MiCA MICAART Asset Referenced Token Asset Referenced Token as defined under MiCA","title":"License Type"},{"location":"Explanation/ADR/adr-006-license-credential/#example-credential","text":"Example credential in json-ld format is as follows: { \"@context\": [ \"https://www.w3.org/2018/credentials/v1\", \"https://www.cosmos.cash/2021/credentials/license/v1\" ], \"id\": \"http://fca.gov.uk/credentials/1234\", \"type\": [ \"VerifiableCredential\", \"LicenseCredential\" ], \"issuer\": \"did:sov:12345\", \"issuanceDate\": \"2021-08-01T15:23:24Z\", \"credentialSubject\": { \"id\": \"did:cosmos:cash:1000bb528777\", \"license\": { \"licenseType\": \"MICAEMI\", // MiCA issuer license - can fine tune this to asset backed tokens, E-Money tokens etc \"country\": \"CH\", \"authority\": \"Another Financial Services Body (AFSB)\", \"denom\": \"sEUR\", \"circulationLimit\": 100 } }, \"proof\": { \"type\": \"SIGNATURE_TYPE\", \"created\": \"2021-08-01T15:23:24Z\", \"proofPurpose\": \"assertionMethod\", \"verificationMethod\": \"https://example.edu/issuers/keys/1\", \"jws\": \"jws123..\" // truncated for readability } }","title":"Example Credential"},{"location":"Explanation/ADR/adr-006-license-credential/#consequences","text":"","title":"Consequences"},{"location":"Explanation/ADR/adr-006-license-credential/#backward-compatibility","text":"This is the first definition of the credential. Backward compatibility is not a concern.","title":"Backward Compatibility"},{"location":"Explanation/ADR/adr-006-license-credential/#positive","text":"This ADR offers the following benefits: Regulatory compliance through open standards Implements a Role Based Access to services on Cosmos Cash. Uses Self-Sovereign Identity (SSI) standards so this means: Interoperability - for example, the credential can be stored in a variety of different identity wallets Flexibility - for example, this credential can be re-used in other scenarios where token issuance is required Adoption of SSI for provision of financial services offers benefits in terms of licensing and management on public platforms.","title":"Positive"},{"location":"Explanation/ADR/adr-006-license-credential/#negative","text":"No negative consequences","title":"Negative"},{"location":"Explanation/ADR/adr-006-license-credential/#neutral","text":"There are a number of macro-level concerns, but these do not affect the adoption of this model for role-based access control (RBAC). These macro concerns include: Self-Sovereign Identity technologies are still relatively new. eiDAS legislation is still in development.","title":"Neutral"},{"location":"Explanation/ADR/adr-006-license-credential/#further-discussions","text":"While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR.","title":"Further Discussions"},{"location":"Explanation/ADR/adr-006-license-credential/#references","text":"{reference link}","title":"References"},{"location":"Explanation/ADR/adr-007-root-of-trust/","text":"ADR 007: Root of trust Changelog 2021-10-05: Initial draft Status PROPOSED Abstract Blockchain technology provides a distributed and tamper-proof data layer where all the agents of the protocol interact using asymmetric encryption where it is guaranteed that a piece of information has been signed by the controller of a private key, but it doesn't provide any other information beside the consistency of the data. This document illustrates a technique to define a root of trust for a blockchain system, that is to define a set of address that are trusted on a protocol level. This document describes also how the root of trust is used as a based to implement a public verifiable credential scheme within the Cosmos Cash project. Context In the context of Cosmos Cash there are three roles on chain: Regulator EMT/ART (crypto asset issuer) Account holder The roles form a chain of trust that is shown in the following diagram: The chain of trust reliability is determined by the root of trust. Decision To provide a reliable determination of the root of trust the chain initialization follows the procedure described in the following diagram: The details of the off-chain ceremony where the root of trust addresses are collected are outside the scope of this ADR. Note: an improvement to this process is the introduction of root of trust governance model. After the root of trust is defined, we define a set of verification credentials, compliant with the W3C verifiable credential specification, that implements the chain of trust. The credentials and their issuance constraints are represented in the following diagram: Issuing credentials Since the verifiable credential mechanism is independent of the blockchain transaction verification process, a separate verification process MUST be provided for issuing credentials. The verification process is described in the following diagram: The consequence of the verification process is that in line of principle the actor issuing credentials doesn't have to be the same actor that sign, pays and broadcasts the transaction containing the verifiable credentials. Deleting (Revoking) credentials The credential revocation verification process is described in the following diagram: Consequences Backward Compatibility This new module is backward compatible. Positive The root of trust and the chain of trust models are compatible with the self-sovereign identity (SSI) verifiable credential process, and therefore compatible with 3rd party applicaitons Negative The root of trust model is somewhat centralized Neutral N/A Further Discussions N/A Test Cases [optional] N/A References N/A","title":"ADR 007: Root of trust"},{"location":"Explanation/ADR/adr-007-root-of-trust/#adr-007-root-of-trust","text":"","title":"ADR 007: Root of trust"},{"location":"Explanation/ADR/adr-007-root-of-trust/#changelog","text":"2021-10-05: Initial draft","title":"Changelog"},{"location":"Explanation/ADR/adr-007-root-of-trust/#status","text":"PROPOSED","title":"Status"},{"location":"Explanation/ADR/adr-007-root-of-trust/#abstract","text":"Blockchain technology provides a distributed and tamper-proof data layer where all the agents of the protocol interact using asymmetric encryption where it is guaranteed that a piece of information has been signed by the controller of a private key, but it doesn't provide any other information beside the consistency of the data. This document illustrates a technique to define a root of trust for a blockchain system, that is to define a set of address that are trusted on a protocol level. This document describes also how the root of trust is used as a based to implement a public verifiable credential scheme within the Cosmos Cash project.","title":"Abstract"},{"location":"Explanation/ADR/adr-007-root-of-trust/#context","text":"In the context of Cosmos Cash there are three roles on chain: Regulator EMT/ART (crypto asset issuer) Account holder The roles form a chain of trust that is shown in the following diagram: The chain of trust reliability is determined by the root of trust.","title":"Context"},{"location":"Explanation/ADR/adr-007-root-of-trust/#decision","text":"To provide a reliable determination of the root of trust the chain initialization follows the procedure described in the following diagram: The details of the off-chain ceremony where the root of trust addresses are collected are outside the scope of this ADR. Note: an improvement to this process is the introduction of root of trust governance model. After the root of trust is defined, we define a set of verification credentials, compliant with the W3C verifiable credential specification, that implements the chain of trust. The credentials and their issuance constraints are represented in the following diagram:","title":"Decision"},{"location":"Explanation/ADR/adr-007-root-of-trust/#issuing-credentials","text":"Since the verifiable credential mechanism is independent of the blockchain transaction verification process, a separate verification process MUST be provided for issuing credentials. The verification process is described in the following diagram: The consequence of the verification process is that in line of principle the actor issuing credentials doesn't have to be the same actor that sign, pays and broadcasts the transaction containing the verifiable credentials.","title":"Issuing credentials"},{"location":"Explanation/ADR/adr-007-root-of-trust/#deleting-revoking-credentials","text":"The credential revocation verification process is described in the following diagram:","title":"Deleting (Revoking) credentials"},{"location":"Explanation/ADR/adr-007-root-of-trust/#consequences","text":"","title":"Consequences"},{"location":"Explanation/ADR/adr-007-root-of-trust/#backward-compatibility","text":"This new module is backward compatible.","title":"Backward Compatibility"},{"location":"Explanation/ADR/adr-007-root-of-trust/#positive","text":"The root of trust and the chain of trust models are compatible with the self-sovereign identity (SSI) verifiable credential process, and therefore compatible with 3rd party applicaitons","title":"Positive"},{"location":"Explanation/ADR/adr-007-root-of-trust/#negative","text":"The root of trust model is somewhat centralized","title":"Negative"},{"location":"Explanation/ADR/adr-007-root-of-trust/#neutral","text":"N/A","title":"Neutral"},{"location":"Explanation/ADR/adr-007-root-of-trust/#further-discussions","text":"N/A","title":"Further Discussions"},{"location":"Explanation/ADR/adr-007-root-of-trust/#test-cases-optional","text":"N/A","title":"Test Cases [optional]"},{"location":"Explanation/ADR/adr-007-root-of-trust/#references","text":"N/A","title":"References"},{"location":"Explanation/ADR/adr-template/","text":"ADR {ADR-NUMBER}: {TITLE} Changelog {date}: {changelog} Status {DRAFT | PROPOSED} Not Implemented For details on ADR workflow, see the PROCESS page. Use DRAFT if the ADR is in a draft stage (draft PR) or PROPOSED if it's in review. Abstract \"If you can't explain it simply, you don't understand it well enough.\" Provide a simplified and layman-accessible explanation of the ADR. A short (~200 word) description of the issue being addressed. Context This section describes the forces at play, including technological, political, social, and project local. These forces are probably in tension describe them as such. The language in this section is value-neutral and just describes facts. The context should clearly explain the problem and motivation that the proposal aims to resolve. {context body} Decision This section describes our response to these forces. It is stated in full sentences, with active voice. \"We will ...\" {decision body} Consequences This section describes the resulting context after applying the decision. List all consequences here, taking care not to list only the \"positive\" consequences. A particular decision may have positive, negative, and neutral consequences, but all of the consesquences affect the team and project in the future. Backwards Compatibility All ADRs that introduce backwards incompatibilities must include a section describing these incompatibilities and their severity. The ADR must explain how the author proposes to deal with these incompatibilities. ADR submissions without a sufficient backwards compatibility treatise may be rejected outright. Positive {positive consequences} Negative {negative consequences} Neutral {neutral consequences} Further Discussions While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR. Test Cases [optional] Test cases for an implementation are mandatory for ADRs that are affecting consensus changes. Other ADRs can choose to include links to test cases if applicable. References {reference link}","title":"ADR Template"},{"location":"Explanation/ADR/adr-template/#adr-adr-number-title","text":"","title":"ADR {ADR-NUMBER}: {TITLE}"},{"location":"Explanation/ADR/adr-template/#changelog","text":"{date}: {changelog}","title":"Changelog"},{"location":"Explanation/ADR/adr-template/#status","text":"{DRAFT | PROPOSED} Not Implemented For details on ADR workflow, see the PROCESS page. Use DRAFT if the ADR is in a draft stage (draft PR) or PROPOSED if it's in review.","title":"Status"},{"location":"Explanation/ADR/adr-template/#abstract","text":"\"If you can't explain it simply, you don't understand it well enough.\" Provide a simplified and layman-accessible explanation of the ADR. A short (~200 word) description of the issue being addressed.","title":"Abstract"},{"location":"Explanation/ADR/adr-template/#context","text":"This section describes the forces at play, including technological, political, social, and project local. These forces are probably in tension describe them as such. The language in this section is value-neutral and just describes facts. The context should clearly explain the problem and motivation that the proposal aims to resolve. {context body}","title":"Context"},{"location":"Explanation/ADR/adr-template/#decision","text":"This section describes our response to these forces. It is stated in full sentences, with active voice. \"We will ...\" {decision body}","title":"Decision"},{"location":"Explanation/ADR/adr-template/#consequences","text":"This section describes the resulting context after applying the decision. List all consequences here, taking care not to list only the \"positive\" consequences. A particular decision may have positive, negative, and neutral consequences, but all of the consesquences affect the team and project in the future.","title":"Consequences"},{"location":"Explanation/ADR/adr-template/#backwards-compatibility","text":"All ADRs that introduce backwards incompatibilities must include a section describing these incompatibilities and their severity. The ADR must explain how the author proposes to deal with these incompatibilities. ADR submissions without a sufficient backwards compatibility treatise may be rejected outright.","title":"Backwards Compatibility"},{"location":"Explanation/ADR/adr-template/#positive","text":"{positive consequences}","title":"Positive"},{"location":"Explanation/ADR/adr-template/#negative","text":"{negative consequences}","title":"Negative"},{"location":"Explanation/ADR/adr-template/#neutral","text":"{neutral consequences}","title":"Neutral"},{"location":"Explanation/ADR/adr-template/#further-discussions","text":"While an ADR is in the DRAFT or PROPOSED stage, this section contains a summary of issues to be solved in future iterations. The issues summarized here can reference comments from a pull request discussion. Later, this section can optionally list ideas or improvements the author or reviewers found during the analysis of this ADR.","title":"Further Discussions"},{"location":"Explanation/ADR/adr-template/#test-cases-optional","text":"Test cases for an implementation are mandatory for ADRs that are affecting consensus changes. Other ADRs can choose to include links to test cases if applicable.","title":"Test Cases [optional]"},{"location":"Explanation/ADR/adr-template/#references","text":"{reference link}","title":"References"},{"location":"Explanation/articles/","text":"Articles README This folder includes all articles, papers, and so on that have been created for Cosmos Cash. Each folder represents all of the materials and assets for a single article, including bibliographies, images, and so on. The papers themselves are written in Markdown. The Markdown files can then be published in various formats using Pandoc . For publishing to PDF format, we use this Eisvogel LaTeX template to ensure a consistent look and feel. Technical Setup Set up your environment to manage and publish articles. Prerequisites GNU make utility Pandoc Google Inter font is the Tendermint font. Usage Create a folder with a self-explanatory name for the article Add your content to the folder as needed. Add the following front matter to the top of the Markdown document and customize as needed: --- title: \"My title\" subtitle: \"My sub title\" author: [Joe Smith] date: \"Publish date\" mainfont: Inter # Default Tendermint font fontsize: 10pt subject: \"Cosmos Cash\" keywords: [] lang: \"en\" book: true titlepage: true titlepage-background: \"\" classoption: [oneside] page-background: \"../backgrounds/BackgroundTendermint.pdf\" footer-left: \"footer\" header-left: \"header\" footer-right: \"footer\" header-right: \"header\" --- To create a new report, run the make buildmd from the top-level directory NOTE: This build process is under development and won't work for the moment!! To clean outputs, run make clean .","title":"About Articles"},{"location":"Explanation/articles/#articles-readme","text":"This folder includes all articles, papers, and so on that have been created for Cosmos Cash. Each folder represents all of the materials and assets for a single article, including bibliographies, images, and so on. The papers themselves are written in Markdown. The Markdown files can then be published in various formats using Pandoc . For publishing to PDF format, we use this Eisvogel LaTeX template to ensure a consistent look and feel.","title":"Articles README"},{"location":"Explanation/articles/#technical-setup","text":"Set up your environment to manage and publish articles.","title":"Technical Setup"},{"location":"Explanation/articles/#prerequisites","text":"GNU make utility Pandoc Google Inter font is the Tendermint font.","title":"Prerequisites"},{"location":"Explanation/articles/#usage","text":"Create a folder with a self-explanatory name for the article Add your content to the folder as needed. Add the following front matter to the top of the Markdown document and customize as needed: --- title: \"My title\" subtitle: \"My sub title\" author: [Joe Smith] date: \"Publish date\" mainfont: Inter # Default Tendermint font fontsize: 10pt subject: \"Cosmos Cash\" keywords: [] lang: \"en\" book: true titlepage: true titlepage-background: \"\" classoption: [oneside] page-background: \"../backgrounds/BackgroundTendermint.pdf\" footer-left: \"footer\" header-left: \"header\" footer-right: \"footer\" header-right: \"header\" --- To create a new report, run the make buildmd from the top-level directory NOTE: This build process is under development and won't work for the moment!! To clean outputs, run make clean .","title":"Usage"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/","text":"Executive Summary This article describes the legal requirements to create a Cosmos-SDK powered regulatory compliant e-money token. This token would have the same guarantees as the traditional banking sector thus bringing true liquidity to the crypto world. In this paper, the regulatory environment within Europe will be laid out. It will outline how the regulations have been drawn up and how the regulations define DLT based assets and the requirements based on these classifications. It will also briefly review the roles and permits required to perform activities relating to crypto-assets. It is observed that: Financial services that are licensed under existing EU regulation have advantages under new crypto-asset legislation; Key deliverable from a technology perspective for issuers of e-money tokens on Decentralised Ledger Technologies - assuming issuer is authorised - is a whitepaper that details the supporting technology and associated risks; Anti-Money Laundering (AML) regulations are the main point of concern with regard to decentralised ledger technology and represents key regulatory risk; With respect to AML, some attention should be paid to the FATF \"travel rule\", which is not contained in current EU directive, but is part of FATF recommendations; The definition of validators within regulatory frameworks is unclear and forms another regulatory risk to be mitigated for an e-money token issuer; The EU regulatory requirements relating to the implementation of Central Bank Digital Coins (CBDC) is likely to lead to delays, but a regulated protocol with a consortium of issuers could be a way forward. Acknowledgements Authors of this article would like to thank Amagis Capital for their backing report and many recommendations, particularly Antonio Giannino Francesca Valenti Andrea Vianelli Martin Worner at Confio.tech for his design input and reviews Interchain Foundation for their backing and suggestions This paper will make significant reference to Amagis' report produced in conjunction with this report. For the sake of brevity, reference details are noted here [@Amagis:CosmosCashReport] Disclaimer This paper represents the opinions and views of the authors. It should not be any way construed as legal advice. Background The value of assets secured on Distributed Ledger Technology (DLT) is increasing at ever upward rates. However, pervasiveness in the general economy is still low. This is for a number of reasons that include: Understanding the new technology Financial literacy in the general public Trust and public perception Readers of this document will doubtless believe that DLT is indeed a tool of public good that can change finance for the better for millions of people. However to make that transition, appropriate regulation is important, especially as the technology matures. To date, jurisdictions are adopting three contrasting approaches toward crypto-assets and crypto-related services, namely: Proactive approach , adopting regulations addressed to crypto-assets and related services; Neutral approach , seeking to promote case-by-case assessments on the relevant circumstances and eventually attempting to reconduct such assets and activities to existing legislation and regulations (mostly within the payment and investment services spheres); Restrictive approach , seeking to introduce outright bans to crypto-assets and related activities. This document will review the approach within the European Union. Scope European Union This document will only consider European Regulation. The reasons for this are two-fold: market size and regulatory framework. The union (as defined as the 27 member states) represents 450 million people (third in size behind China and India) and is the second biggest trading bloc in the world. Further, the Eurozone (area using the Euro currency) is the second largest economy in the world in nominal terms, after the United States; is the third economy largest in purchasing power parity (PPP) terms, after China and the United States; has a GDP estimated at 18.8 trillion USD (nominal) in 2018; represents approximately 22% of the global economy. In terms of economy and demographics, the EU is globally extremely important, but with respect to DLT-based assets, as of September 2020, the EU has also taken the lead in attempting to create the first harmonised and cross-border framework applicable to crypto-assets and related activities. In addition to legislation, the EU Commission has also been promoting a digital finance package, which includes a new strategy on digital finance for the EU financial sector. The aim is to ensure that the EU embraces the digital revolution and drives it with innovative European firms in the lead, making the benefits of digital finance available to European consumers and businesses. EU Regulatory Framework Financial legislation is guided and implemented through a network of international and national level bodies. The scope of each body defined as as per the table below [@Judge:CryptoLandscape]: A number of supranational and intergovernmental bodies such as Bank of International Settlements (BIS), and the Financial Action Task Force (FATF), with respect to their role and responsibilities, advise on best practice, policy and standards. For BIS this is central bank and monetary policy; for FATF this is money laundering and terrorism financing. Within the European Union (EU) the commission turn policy and guidelines - like FATF recommendations - into draft legislation which is then approved by the European Parliament and the Council of Minsters. The commission drafts legislation in two forms: regulation and directives. As per the Europa.org website, they are defined as follows: A \"regulation\" is a binding legislative act. It must be applied in its entirety across the EU. A \"directive\" is a legislative act that sets out a goal that all EU countries must achieve. However, it is up to the individual countries to devise their own laws on how to reach these goals. Through these mechanisms financial regulation is implemented in the EU. MiCA The background above outlined the EU package to support DLT technologies. This package includes a proposal for a pilot regime on DLT market infrastructures, a proposal for digital operational resilience and a proposal to clarify or amend certain related EU financial services rules. This proposal for a \"Regulation of The European Parliament And of The Council on Markets in Crypto-assets, and amending Directive (EU) 2019/1937\" is also known as \u201cMiCA\u201d [@EU:MiCA]. MiCA follows from several supervisory opinions, guidance, industry-wide consultations and international reports. It is drafted with several core goals in mind: To increase legal certainty around crypto-assets and related services; To support innovation and promote the development of crypto-assets and the wider use of distributed ledger technology (DLT); To instill appropriate levels of consumer and investor protection and market integrity in an area that presents many of the same risks as traditional financial instruments; To ensure financial stability. MiCA introduces the first EU-wide licensing regime for crypto-asset issuers and service providers. It follows the approach taken with traditional investment services regulation through the implementation of MiFID II (Directive 2014/65/EU) [@EU:MiFID] and MiFIR [@EU:MiFIR]. Further, it builds upon - and complements - other existing regulation, of which the most relevant are: Electronic money within the scope of EMD II (Directive 2009/110/EC) [@EU:EMD2]; Deposits within the scope of the EU Directive on Deposit Guarantee Schemes (Directive 2014/49/EU) [@EU:DepositGuarantee]; Securitisations within the scope of the Securitisation Regulation (Regulation (EU) 2017/2402) [EU:Securitisation]. In addition to these articles, there are other directives that apply cross-asset/service. The most important for crypto-assets is the 5th Anti-Money Laundering Directive (Directive 2018/843) known as AMLD5 [@EU:AMLD5] Given MiCA has been drafted on the basis of leveraging existing legislation, by design it favours those entities that are already licensed under existing financial services regulation. By way of an example, if a firm is already licensed to issue an asset (under MiFiD or e-money) then the barriers a DLT token can be issued very easily through the completion of steps defined under MiCA Products Definition of crypto/virtual-assets In short, the definition of crypto/virtual assets depends on the regulation under consideration. For MiCA it means \u201c a digital representation of value or rights which may be transferred and stored electronically, using distributed ledger technology or similar technology \u201d. The key point is the DLT or \"alike\". However, under the FATF guidance [@FATF:G20Guidance], a virtual asset is \"a digital representation of value that can be digitally traded, or transferred, and can be used for payment or investment purposes. Virtual assets do not include digital representations of fiat currencies, securities and other financial assets that are already covered elsewhere ...\" All the definitions of MiCA (as per next section) come under this remit, with the exclusion of security tokens where they are digital representations of the existing securities/assets. FATF also refer to a range of underlying technologies, not just DLT. This paper is particularly focused on e-money tokens, so it is worth considering the AMLD5 legal definition of a virtual currency: \u201ca digital representation of value that is not issued or guaranteed by a central bank or a public authority, is not necessarily attached to a legally established currency, and does not possess a legal status of currency or money, but is accepted by natural or legal persons, as a means of exchange, and which can be transferred, stored and traded electronically\u201d Which, unsurprisingly, is close to the definition of stablecoins (and by extension e-money tokens). Types of crypto-asset covered by MiCA regulation MiCA addresses crypto-assets. In particular it focuses on a number of sub-types that represent either a claim on an economic asset, method of payment or for another utility (permissions etc.): Economic assets Security Tokens : these represent the DLT based equivalent of traditional securities i.e. they represent ownership rights and/or entitlements (e.g. dividends, coupon payments etc) The key observation is that these can include traditional securities or other assets that have undergone the process of tokenization (i.e. that have been registered on a blockchain in the form of a token). Utility Utility Tokens are a type of crypto-asset which is intended to provide digital access to a DLT-based good or service. The important features of this class of token is that: It is only accepted by the issuer; In general, it has a non-financial purposes. Methods of payment CBDC : these may be defined digital assets issued by a public authority (i.e. central banks, in the form of central bank liability), often referred to as sovereign tokens (namely a central bank) for the purpose of ensuring smooth and frictionless payment and settlement solutions, in either retail or wholesale transactions. Payment tokens / Cryptocurrencies : these instruments are those crypto-assets that are designed as an alternative to government issued fiat money i.e. they are intended to perform the roles of medium of exchange, store of value and unit of account. These are often referred to as virtual currencies or coins. Classic examples are Bitcoin and Litecoin, Stablecoins (or asset-referenced tokens) : these tokens aim at maintaining a stable value by referencing one or more of the following asset types: currencies that are legal tender; commodities; other crypto-assets By stabilising their value, those asset-referenced tokens often aim at being used by their holders as a means of payment to buy goods and services and as a store of value. E-Money Tokens E-money tokens (EMT) are a sub-category of stablecoins, but the key characteristic is that value stability is achieved by referencing only one fiat currency rather than a basket of assets. Effectively, they are a proxy for a fiat currency that is legal tender. They are not a CBDC because they are not issued by a public body. The function of such crypto-assets is very similar to the function of electronic money, as defined in the EMD2 Directive [@EU:EMD2]. Significant tokens Notably, under the MiCA, the European Banking Authority (EBA) has been given the power to classify asset-referenced tokens as \"significant asset-referenced tokens\" - and by extension - \"significant e-money-token\" Significance is established by satisfying at least three of the following factors: Size of the EMT, either by The size of the customer base, Value of issued tokens, The number and value of transactions, The number of Member States where the EMT is used, use for cross- border payments and remittances; Size of the issuer, through Market capitalisation, and/or Asset reserves of the issuer, cross-border activities; The shareholders of the issuer of the EMT or of any of the third-party entities referred to in Article 30(5), point (h); The significance of the number of Member States where the third-party entities referred to in Article 30(5), point (h), are established; The degree of interconnectivity of the EMT with the financial system - the measure of this are unclear. The significant classification leads to enhanced regulation of such tokens particularly: Asset related - custodial requirements, quality and issuer capital requirements Risk management - policy, liquidity management and wind-down procedures Oversight - Set-up of an EBA chaired and managed supervisory college, which is paid by issuers based on size of issuance. Please review section Appendix \\ref{sec:appsigtokens} for specifics. Note: Eventually, issuers themselves may apply for having their EMT classified as significant. Crypto-Assets exempt from MiCA {#sec:exemptions} There are a number of types (or combinations of types) of crypto-assets where MiCA authorisation does not apply: Case 1: Size of the token offering , in terms of either value and/or audience The crypto-assets are offered for free; The offering of crypto-assets is addressed to fewer than 150 natural or legal persons per member state acting on their own account; The total consideration of such an offering in the Union does not exceed \u20ac1,000,000, or the corresponding equivalent in another currency or in crypto-assets, over a period of 12 months; The average outstanding amount of asset-referenced tokens/e-money tokens does not exceed \u20ac5,000,000, or the corresponding equivalent in another currency, over a period of 12 months, calculated at the end of each calendar day. Case 2: The knowledge and experience of audience , i.e. the offering of crypto-assets (e.g. asset-referenced tokens/e-money tokens) is solely addressed to qualified investors and the crypto-assets can only be held by such qualified investors. Case 3: asset attributes , specifically, the crypto-asset is unique and not fungible with other crypto-assets; Case 4: The crypto-assets that are created through mining as a reward for the maintenance of or validation of transactions on a or similar technology; Services Crypto-Asset Service Providers {#sec:casps} MiCA - aside from issuance - sets out eight types of crypto-asset services. These services map almost directly to the equivalent roles in MiFID). These are namely: The custody and administration of crypto-assets on behalf of third parties : this refers to the safekeeping or controlling, on behalf of third parties, crypto-assets or the means of access to such crypto-assets, where applicable in the form of private cryptographic keys; The operation of a trading platform for crypto-assets : this means managing one or more trading platforms for crypto-assets, within which multiple third-party buying and selling interests for crypto-assets can interact in a manner that results in a contract, either by exchanging one crypto-asset for another or a crypto-asset for fiat currency that is legal tender; The exchange of crypto-assets for fiat currency that is legal tender : this means concluding purchase or sale contracts concerning crypto-assets with third parties against fiat currency that is legal tender by using proprietary capital; The exchange of crypto-assets for other crypto-assets : this means concluding purchase or sale contracts concerning crypto-assets with third parties against other crypto-assets by using proprietary capital; The execution of orders for crypto-assets on behalf of third parties: this means concluding agreements to buy or to sell one or more crypto-assets or to subscribe for one or more crypto-assets on behalf of third parties; Placing of crypto-assets : means the marketing of newly-issued crypto-assets or of crypto-assets that are already issued but that are not admitted to trade on a trading platform for crypto-assets, to specified purchasers and which does not involve an offer to the public or an offer to existing holders of the issuer\u2019s crypto-assets; The reception and transmission of orders for crypto-assets on behalf of third parties : this means the reception from a person of an order to buy or to sell one or more crypto-assets or to subscribe for one or more crypto-assets and the transmission of that order to a third party for execution; Providing advice on crypto-assets : this means offering, giving or agreeing to give personalised or specific recommendations to a third party, either at the third party\u2019s request or on the initiative of the crypto-asset service provider offering the advice, concerning the acquisition or the sale of one or more crypto-assets, or the use of crypto-asset services. Entities that are licensed to offer these services are called CASP's (Crypto-Asset Service Providers). An entity wanting to offer multiple services must apply for each license as needed. Note that these licenses can expire if not used. Miners/Validators - do they need to be authorised? In the EU Commission Consultation [@EUCommission:Crypto:Consulation], the Commission enquired about the suitability to include the following activity within the regulatory perimeter: \u201c Processing services, also known as \u2018mining\u2019 or \u2018validating\u2019 services in a DLT environment (e.g. \u2018miners\u2019 or validating \u2018nodes\u2019 constantly work on verifying and confirming transactions)\u201d . Looking at the definition of crypto-service set out in MiCA, no reference is made to mining and/or validators\u2019 activities beyond those defined services above. Amagis, in their analysis, suggest this ought to be the result of an assessment on the nature of the activities of miners following the feedback received after the consultation. As will be seen in section \\ref{sec:AMLGov}, the application of AML recommendations is somewhat different and this presents a point of uncertainty. Relation of MiCA services to MiFID II It is important to note that neither credit institutions (i.e. banks), or MiFID investment firms are subject to the authorisation requirements when providing crypto-asset services (provided that the relevant crypto-asset service is related to the relevant MiFID investment service or activity for which they are authorised). As an example, holding a license for the provision of advisory services under MiFID can also advise on crypto-asset investments without further regulation required. However, it is the view of this paper that this relation is not reciprocal, i.e. entities licensed under MiCA are not licensed under MiFID, thus, a firm licensed to advise on crypto-assets can not offer advisory on other securities. For MiFID licensed firms, the only additional requirements under MiCA to issue an asset referenced token is the need to fulfil white paper requirements as outlined in Appendix \\ref{sec:whitepaper} Issuers In addition to the roles outlined above, MiCA draws a tripartite distinction among categories of issuers basing on the type of crypto-asset issued: Issuers of crypto-assets that are not asset-referenced tokens or e-money tokens (such as utility tokens): These do not need to be licensed in order to offer their crypto-assets to the public or seek admission to a Crypto-exchange and, provided that they comply with the requirements of MiCA, they are permitted to do so throughout the EU. Issuers of stablecoins (asset-referenced tokens): Issuers of stablecoins are required to be authorised by their home state regulator, which shall assess their compliance with a list of prudential, conduct of business (including requirements on custody of reserve assets), and governance requirements. Issuers shall be required to draft a white paper, having the minimum content set out under MiCA relating to the offer of stablecoins that must be approved by the issuer\u2019s home state regulator prior to the offer. Issuers of e-money tokens: Issuers of e-money tokens are required to be authorised by their home state regulator as a credit institution (i.e. a bank) or an e-money issuer (under E-Money Directive). Consequently, they will be subject to the requirements of the EMD. In addition, e-money issuers also need to issue a white-paper to the home state regulator, but unlike the stablecoin token it does NOT need to be approved. Passports The EU comprises 27 member states. The regulatory burden of registering in each member state would be too onerous, despite purporting to be a single market. Therefore the concept of passporting was introduced. Passporting allows entities authorised to conduct certain business in one jurisdiction to only need satisfy registration requirements in another EU jurisdiction in order to conduct cross-border business. MiCA introduces the same EU-wide passport concept that is available to market participants who become licensed under the MiCA regime in their home member state, again replicating the existing features of traditional investment services legislation. Passporting represents a major breakthrough in the industry as it effectively ensures the cross-border provision of crypto-related services across the EU, creating a level playing field among EU member states. Anti-Money Laundering Definition As defined by the Financial Action Task Force (FATF): Money laundering is the processing of these criminal proceeds to disguise their illegal origin. With reference to the regulatory framework section earlier, FATF is an intergovernmental organisation tasked with setting policy and guidelines [@FATF:G20Guidance] to prevent both Money Laundering and Terrorism Financing. These standards are then interpreted by each jurisdiction and turned into legislation. The combination of lack of regulation, anonymity and global reach has made DLT based tokens useful tools in money laundering. Over time FATF have defined and subsequently clarified the definitions of virtual assets, their providers and the application of guidelines to these assets. AMLD5 is a significant issue for DLT based technologies to address in order to get regulatory approval. EU AML implementation Within the EU, FATF guidelines are implemented through the 5th Anti-Money Laundering Directive (Directive 2018/843) [@EU:AMLD5]. Broadly this is a multi-level risk based approach. Each country may assess their vulnerability to money laundering and then take appropriate steps. Each organisation will decide on the risk they are prepared to accept and identify the risk they are subject to, which include product range, customer types etc. AML processes in financial service providers follow a model of \"Know Your Client/Business\" (KYC/KYB) and then based on the results of this an on-going process of either: Client Due Diligence (CDD); or Enhanced Due Diligence (EDD) Which may be more fine-grained as needed. KYC / KYB This first step involves establishing the identity of a client and address. This is then assessed against public information, AML/CFT exemption lists and possibly an internal model. Based on this more checks may be required that can include: Who the economic beneficiary is i.e. if the client is a private business, then who owns the business; Business profile and types of transaction The source of funds i.e. how the business earns its income There may be additional checks resulting checks, particularly if the client is a \"political exposed person\" then these persons - and family - would also qualify for a higher risk rating CDD / EDD Once these checks are done and risk rating established, there are on-going checks that last for the entire business relationship. It includes: Regular KYC reviews and re-rating of risk. On-going transactions checks. In cases where the transaction is unusual, large, complex or of unclear purpose in relation to the client business and against similar classes of business, or the transaction involves a high-risk third countries then it should be flagged and investigated. Unexplained transactions are identified and raised as a \"Suspicious Activity Report\" with the relevant authority within the jurisdiction. The checks and controls themselves are based on a risk model and risks change with time - for example: new guidance, products, threats etc - so the models themselves need to be reassessed at regular intervals. The AMLD5 requires member states to create central databases comprised of crypto users\u2019 identities and wallet addresses and authorise national FIUs to access the information stored in them. This means that AML subject firms are legally required to register their businesses with local authorities in the EU and must retain the documents regarding the conducted CDD and recorded transactions in order to hand over identifiable user information to FIUs if requested, such as real names and addresses. The Penalties By way of illustrating the seriousness of AMLD5, severe sanctions and penalties may be applied to obliged entities that do not apply appropriate measures in line with the requirements. The maximum financial penalty for a breach is equal to at least twice the amount of the benefit derived from the breach where that benefit can be determined, or at least EUR 1,000,000. AML and VASPs In section \\ref{sec:casps} it was explained how MiCA defined classes of service providers called CASPs that needed authorisation based on the service offered. FATF[@FATF:G20Guidance] recommendations have a similar concept called VASPs (Virtual Asset Service Providers), who are defined as the following: \u201cAny natural/legal person who is not covered elsewhere under the Recommendations, and as a business conducts one or more of the following activities or operations for or on behalf of another natural or legal person: i. exchange between virtual assets and fiat currencies; ii. exchange between one or more forms of virtual assets; iii. transfer of virtual assets; iv. safekeeping and/or administration of virtual assets or instruments enabling control over virtual assets; and v. participation in and provision of financial services related to an issuer\u2019s offer and/or sale of a virtual asset.\u201d This definition is relevant because it imposes AML/CFT requirements. The table below maps roles in a centralised stablecoin network to AML/CFT obligations. From the above it is clear that where there is a \"gateway\" into the network there is a AML/CFT responsibility, which implies Virtual currency issuers - \"issuance, redemption and stabilisation of coins\" Virtual currencies exchange providers (the \u201c VCEPs \u201d), or \"Providers engaged in exchange services between virtual currencies and fiat currencies\" ; Custodian wallet providers (the \u201c CWPs \u201d), i.e. entities that provide services to safeguard private cryptographic keys on behalf of their customers, to hold, store and transfer virtual currencies. What is not so clear is the definition of \"Governance\" and \"Transfer mechanism(s)\". These will be discussed in section \\ref{sec:AMLGov}. It should be highlighted that point 2 above is scoped to exchange services for fiat currency and not crypto-crypto exchanges. This is due to a point of difference between AMLD5 implementation and the FATF recommendation, specifically the \"crypto travel rule\" . This rule requires VASPs to collect and exchange beneficiary and originator information with VASP counterparties during any transmittal exceeding USD 1,000. The required personally identifiable information includes names, account numbers, physical addresses and unique identification numbers. This point of difference is worth noting. AMLD5 is a directive and therefore, it has slightly different implementation across jurisdictions. Some jurisdictions will go beyond AMLD5 and implement the travel rule. AML, governance and developers {#sec:AMLGov} The points concerning AML and stablecoins in FATF recommendations should be brought to attention. According to FATF [@FATF:G20Guidance], \"The central developers and governance bodies of so-called stablecoins are in a unique position to undertake ML/TF risk mitigation\" Thus, the logic behind this is that: \"... they determine how the functions of the so-called stablecoin arrangement (e.g. the stabilisation mechanism, transfer of coins and user interface) will operate. They make key design and functionality decisions and they determine the extent to which functions are centralised or decentralised and whether AML/CFT preventive measures are built into a so-called stablecoin. They can also control the access points to the arrangement (e.g. who can participate as an exchange or transfer service or whether a person can only access the system through a VASP) and impose AML/CFT standards setting out expectations or operating requirements for key entities in the arrangement, including exchanges and custodial wallet providers. They are also best positioned to undertake centralised AML/CFT functions, such as transaction monitoring across the so-called stablecoin arrangement\u201d FATF then suggest that developers and governance bodies are subject to AML/CFT because \u201cDue to the types of functions necessary for the launch and operations of so-called stablecoins, there will generally be a central administrator or governance body. This is particularly the case for so-called stablecoins with potential for mass-adoption ... For such so-called stablecoins, the FATF considers that these developers and governance bodies are, in general, a financial institution ... or a VASP ... under the revised FATF Standards. This is particularly the case if the governance body carries out other functions in the so-called stablecoin arrangement (such as managing the stabilisation function). The exact designation will depend on what functions the body specifically undertakes and each jurisdiction\u2019s national law \u201d. The keys to this are the caveats mentioned, namely: what functions the body specifically undertakes and each jurisdiction\u2019s national law How this affects Cosmos Cash will be reviewed in later sections. AML and validators Under the AML/CFT perspective, the regulatory requirements of validators is somewhat different. FATF, in their guidance state the following: \u201cdepending on the functions they perform, the validator nodes that validate the underlying distributed ledger technology may be VASPs or financial institutions. These entities may be part of the so-called stablecoin governance body or separate entities\u201d. As per the FATF argument regarding governance, the \"functions they [validators] perform\" is the key to clarifying this point. Off-chain requirements In addition to the KYC and CDD / EDD, there are further organisational requirements that are off-chain, but noted for completeness: Compliance officer at managerial level Management practices Employee screening and training on the AML Directives. Possible on-chain considerations Further to the off-chain considerations, there are additional control and procedures that include the internal risk model, ongoing transaction monitoring plan, reporting, record-keeping and internal control. A particular requirement of a crypto/virtual asset is noted in AMLD5, consideration n. 9: \u201cTo combat the risks related to the anonymity, national Financial Intelligence Units (FIUs) should be able to obtain information allowing them to associate virtual currency addresses to the identity of the owner of virtual currency\u201d Ideally robust AML initiatives should be implemented within the protocol rather than relying on CASP's implementation would add another level of defence, making the entire network safer. Credit institution versus E-Money Institution It is worth highlighting the types of institution that can issue e-money tokens. As noted there are two types of institution that can issue such tokens: Credit Institutions and E-Money Institutions. Credit institutions are in fact banks and therefore hold a banking license. In a more generic sense, these can also be considered as \"fractional\" banks, which is the predominant banking model in the EU (and much of the developed world). These institutions can do the following: Take deposits AND lend to clients; Pay/receive interest on deposits/loans; Make deposits and borrow from the central bank; Are backed by deposit insurance scheme. Because credit institutions benefit from central bank and deposit insurance they are subject to greater capital requirements, enhanced regulation and greater scrutiny as well as enhanced risk management. In contrast, E-Money Institutions have a much more limited scope. This is matched by an equivalent regulatory regime. These institutions can do the following: Take deposits, but can not lend; Can't pay interest on those deposits; Are subject to lesser regulation compared to banks; Are also subject to looser capital requirements; Have no access to central bank funds; Can not be part of deposit insurance scheme (because deposits are not lent to other clients). In contrast to Credit Institutions, EMI's can be considered as a type of \"narrow\" bank. Application of regulations to CBDC At this point is worth reviewing the situation regarding regulation of CBDC. According to MiCA, CBDCs are exempted from the regulation if crypto-assets are issued by central banks acting in their monetary authority capacity or by other public authorities. However, as pointed out in the literature[@EBI:CryptoMarkets] \u201cThe MiCA exemption, however, does not extend to intermediaries acting in the issuance of CBDCs or providing services to CBDCs. In turn, only if a central bank adopts a CBDC model under which retail currency holders have direct contact with the central bank are the CBDCs exempted. (\u2026). Models where well- qualified and resourced intermediaries function as links between central banks and retail currency holders are much more likely and far less burdensome on the central banks. This explains why such two-tier CBDC structures have been adopted, for instance, by China in its Digital Yuan project (\u2026). As presently proposed, MiCA will obstruct the sound development of a Digital Euro or other European CBDC strategy. We thus recommend that, subject to further rules stipulated by the respective central bank, private entities acting on behalf of a central bank or in cooperation with a central bank in the context of a CBDC system be exempted from MiCA\u201d To summarise, CBDC are exempt from regulation if the token is issued by a central bank directly to retail customers. However this is contrary to the current operating model of the interbank-market and presents significant risk as it represents a fundamental change in operating model. Conversely, third parties acting on behalf of a central bank in the implementation of a CBDC would be subject to regulatory oversight under the significant token requirements, which seems punitive. As [@EBI:CryptoMarkets] and [@IMF:RiseDigitalMoney] both note, the two-tier CBDC/e-money model is likely to be the best operating model generally (consider the Digital Yuan project). Based on the impasse outlined above, within the EU this presently does not look likely. Cosmos Cash Definition Cosmos Cash is intended to offer features typical of electronic money, adopting the blockchain technology as underlying infrastructure, and thus leading to a digital asset to be applied within the payment industry. Using the conceptual framework outlined by Adrian & Griffoli [@IMF:RiseDigitalMoney], Cosmos Cash would be acting as a claim based asset with a fixed value redemption, using a private backstop and ultimately built on Blockchain technology. More specifically, Cosmos Cash would be built as a digital token that references to a fiat currency (or a digital representation of a fiat currency) based on assets held by the issuer using a Tendermint-based network. Cosmos Cash comprises a number of different stakeholders, identified as follows: Central Bank - issues fiat currencies, which may in the future be digital currencies, that back the token; Issuers - one or more approved parties that have the authority to mint, burn and hold reserves of tokens. They use fiat reserves (and digital representations) to issue and redeem tokens presented by customers. They would also offer functionality and services through customer wallets; Validators are entities that validate and settle transactions on the Tendermint network; Holders/customers who can send, receive and redeem tokens from the network. These can be legal entities and private individuals. They would need to successfully complete a KYC process before joining the network. Regulatory Classification - clue: it is an e-money token Under MiCA regulations - and based on Amagis' consideration - Cosmos Cash would be classed as a crypto-asset based on the following argument: It is a digital representation of value It can be transferred and stored electronically It is based on a Distributed Ledger Technology Furthermore, it is an E-money token on the basis that It qualifies as a crypto-asset (see above) It is intended as a means of exchange, specifically it is an electronic surrogates, for coins and banknotes and is used for making payments It maintains a stable value by referring to the value of a fiat currency Given that Cosmos Cash is an E-Money token, it is now possible to consider the applicable regulation. Authorisation First question: Does MiCA apply? According to Article 43(1), last paragraph, an e-money token which references a Union currency shall be deemed to be offered to the public in the Union, which means that authorisation is required. It should be noted that if the issuance (\\ref{sec:exemptions}) is small the regulation is much lower. Cosmos Cash Regulation Given Cosmos Cash references a Union currency then the following will apply: {width=50%} Issuers In order to issue e-money tokens, the issuer must be a credit institution or E-Money Institution. It also needs to comply with the E-Money Directive II (2009/110/EC) - specifically Titles II & III [@EU:EMD2]. The E-Money directive defines various requirements: Funds received by issuers for e-money tokens will be invested in secure, low-risk assets in accordance with Article 7(2) of Directive 2009/110/EC; and The assets are denominated in the same currency as the one referenced by the e- money token. Obligations for issuers of e-money tokens include: Not paying interest on e-money token; Holders of e-money tokens are provided with a claim on the issuer; Tokens are issued at par value on the receipt of funds, 1 EUR means 1 token; They are redeemable upon demand by holders at par value. This can be done into cash or via credit transfer; Any fees for redemption must be proportionate to the actual cost incurred by the issuer; Processing times for redemption can not be longer than 30 days; Any conditions of redemption are clearly stated, including any fees and processing times. White-paper In addition to obligations under EMD, issuers of e-money tokens must also draft a white paper relating to the offer of crypto-assets and submit it to the issuer\u2019s home state regulator at least 20 working days before the white paper\u2019s publication. The white-paper in content outlines most of the points outlined above plus the technology supporting the token. Full details can be found in Appendix \\ref{sec:whitepaper}. There are three points of interest to note regarding the white-paper: As noted previously, such a white paper does not need to be approved by the home state regulator. It is unclear what the status such a token would be in the situation where the white-paper is not explicitly approved. It is a significant point of difference that issuers of e-money tokens based on DLT have to issue a white-paper. E-money on other technologies do not. Holder can claim damages from the issuer if they have evidence that information in the white-paper is not \"complete, fair, clear or misleading\" Significance The token may be classed as significant within 30 days by the EBA. If so then the additional requirements would be enforced - Appendix \\ref{sec:appsigtokens} Marketing When marketing such a token there are a number of requirements: The marketing communications shall be clearly identifiable as such; The information shall be fair, clear and not misleading, it should be clear that holders have the right of redemption at par value at any time; The communications shall be consistent with the information in the crypto-asset white paper; The communications shall reference the crypto-asset white paper Communications shall indicate the address of the website of the issuer of the e-money tokens. AML As shown in section \\ref{sec:AMLGov} above, the status of governance bodies, developers, validators and miners with respect to AML requirements depends on two factors: Functions the body perform; and Law in the national jurisdiction These frame Amagis' thinking on this such that \"... in terms of MiCA, the activity of developer and/or validator and/or miner does not fall into the regulatory perimeter, nor such activities are included in AMLD5 as subject persons \u2013 in fact, according to such statutory instruments and looking at the Cosmos Cash ecosystem, we would consider subject persons only EMIs, PSPs and wallet or exchange providers, rather than validators, developers and miners.\" Amagis go further, stating \"About validators, we once again strongly disagree with the statement set out under the FATF Report whereby \u201cDepending on the functions they perform, the validator nodes that validate the underlying distributed ledger technology may be VASPs or financial institutions. These entities may be part of the so-called stablecoin governance body or separate entities\u201d\" . As Amagis note, these points will be clarified over time, both in MiCA and FATF recommendations and they should be reviewed, Finally, as suggested by Amagis, Cosmos Cash should implement features based on FATF stablecoin focused guidance that could include, amongst others: Ensuring that Cosmos Cash may be transferred exclusively through regulated firms qualifying as financial institutions or VASP in terms of FATF Standards (i.e. being firms subject to AML/CFT obligations); Removing address anonymity; Restrict peer-to-peer transaction via unhosted wallets; Restrict adoption of tumblers and mixers with respect to Cosmos Cash and/or providers within the Cosmos Cash ecosystem; Issue a template AML/CFT policy for stakeholders within the Cosmos Cash ecosystem; Offering webinars for compliance and AML personnel so as to understand the features of Cosmos Cash. Conclusions Given the analysis above, the key points are: Financial services that are licensed under existing EU regulation have advantages under new crypto-asset legislation. Key deliverable for Issuers of e-money tokens on Decentralised Ledger Technologies - assuming issuer is authorised - is the whitepaper detailing the technology supporting the token Anti-Money Laundering (AML) regulations are the main point of concern with regard to decentralised ledger technology and represents a key regulatory risk With respect to AML, some attention should be paid to the FATF \"travel rule\", which is not currently an EU directive, but is part of the FATF recommendations The definition of validators within regulatory frameworks is unclear and forms an additional regulatory risk to be mitigated for an e-money token issuer. The EU regulatory requirements relating to the implementation of Central Bank Digital Coins is likely to lead to delays, but a regulated protocol with a consortium of issuers could be a way forward. From this it is clear that AML is a prime area of concern, but also who would use such a protocol, given the hurdles to entry. AML/CFT AML/CFT is an area of significant risk and opportunity for Cosmos Cash. The anonymity of existing payments coins need to be eliminated with features such as: Reduce and eliminate off-chain transactions; Establish link between identity between wallet holders; Eliminate mechanisms for hiding identity; Maintain privacy for clients in-line with GDPR requirements; Freeze tokens and accounts in event of suspicious events. There is point of a regulatory risk for validators on the chain underlying a Cosmos cash protocol, such that they are classed as a Financial Institution/VASP. This would need to mitigated/eliminated as the costs of setting up legal mechanisms and AML compliance may be punitive. There is not only a risk, but an opportunity. According to latest reports [@LexisNexis:2019Costs], Financial Crime Compliance costs (this includes, but not limited to AML) in EMEA was USD 137 Bn in 2019. On average 74% of that cost is staffing [@LexisNexis:2017Costs]. An on-chain protocol with AML/CFT shared between issuers and CASPs could offer significant benefits to financial regulators and law enforcement in identifying and researching payment patterns. This presents opportunities to leverage Cosmos based technologies in decentralised identity and zero knowledge proofs. It also offer opportunities to bring in parties with expertise in transaction analysis and data mining capabilities. Secondary Market As liquidity and transferability are the indisputable advantages of the DLT: this would require Cosmos Cash to cater for transferability features which would not affect the frictionless and seamless nature of DLT-based transfers. It would need however to cater for safeguards ensuring that transactions among customers take place in a safe, transparent and compliant framework. From the analysis above, it is clear that there will be a license-based approach for each financial service, whether that be wallets, exchanges, advisory etc. Ideally such services should be governed without a centralised authority. One proposal for this is suggested by Martin Worner [@Confio:PublicPermissioned][@Confio:Self-sovereign-KYC] at confio.tech through self-sovereign governance framework. This framework on the blockchain is designed to allow the creation of a community of regulated institutions which can be thought of as \u201cGarden walls\u201d . The institutions conduct self-sovereign, verification that the chain addresses match the institutions, and that the institutions are permitted to operate. There is an optional step of requiring the institutions to add funds to a \u201cstaking account\u201d which would allow for the slashing of funds in the event of defined breaches of rules, however, the off-chain safeguards may be a more robust mechanism. Once the community of institutions is established, they can then begin the process of creating instruments to trade, which are restricted to the registered institutions to ensure compliance.In this respect, an open point of MiCA deals with exchanges and trading venues supporting E-Money Tokens: one question to ask is if they will require a specific license as payment service providers or EMI to support such transactions! It is the view of Amagis and this paper that this is the most likely in view of the approach adopted in MiCA. Potential users Some of the issues raised by trade bodies within the EU is that MiCA unduly favours entities that are already regulated through MiFID, EMD or other legislation. In the authors' view there is strong evidence for this opinion. This leads to the question of who are the likely users for Cosmos Cash. In this respect, Cosmos Cash protocols may be promoted among Already licensed and established players seeking to access to the crypto market through a fully regulated and disruptive solution such as Cosmos Cash; and Incumbent firms which may be willing to get licensed in order to support Cosmos Cash issuances. Many existing issuers do not have technological expertise in distributed ledger technologies, but are looking for business opportunities to access digital finance with a range of products. As will be seen below, the secondary market and chain interconnectivity also offers existing entities exciting opportunities for growth. The likely scenario will be the development of partnerships between licensed and established financial firms with technology organisations. It is possible that issuers may combine into a consortium for the purposes of issuance. For this to happen, clear and pre-defined governance rules would be needed to ensure and maintain the same compliance standards for all members players, particularly those which will be officially the front vis-\u00e0-vis customers and authorities. A second scenario of incumbent firms looking for a license, as suggested by Amagis suggest would be that Cosmos Cash could build an open-source tool kit that supports such users in the process for becoming eligible issuers. It should be noted that these firms should rely on third parties such as Amagis Capital for non-chain activities such as structuring licensing. Ecosystem Integration Although the protocol is important, as Amagis point out, coordination with other stakeholders will be equally important. Stakeholders can include Existing e-money and credit institutions and payment service providers Local regulators Think tanks Contributors Users A plan to include such stakeholders would strengthen the vision behind Cosmos Cash. Design Initial Thoughts There are currently two prevalent stable token implementations developed using the Cosmos SDK, Terra-Core and e-Money Ledger . These both represent a holistic approach to building a stable token. Both applications define a full suite of modules and compose them to be used as a single application. The goal of Cosmos Cash is to be a protocol that can be deployed on any Cosmos SDK powered application. This forces a deep focus on the core protocol and allows adherence to regulation in a more flexible way. Design Principles The characteristics that would allow a novel approach to defining a protocol are as follows: Using a decentralised first methodology Ensuring the protocol follows the latest regulation Using a permission-less chain in a regulated way Allowing e-money to be represented as a token deployed on a distributed ledger application Actors Through the analysis over the course of this paper, the identified actors needed to build the protocol include at least the following: The Identity module is the core module and allows tracking of AML and KYC data in a trust less and secure way that also allows privacy The Issuer module handles creating and tracking issuers, this allows issuer to revoke tokens, and freeze tokens if necessary The Regulator module handles creating and monitoring of regulators, in turn, regulators can create and manage issuers The Token module consists of the basic functionality needed to send, receive and withdraw tokens from the application This represents a preliminary architecture diagram to illustrate the segmentation of the protocol from the holistic application. \"Known knowns\" and \"Known unknowns\" While leveraging the Cosmos SDK, token functionality such as creating new tokens, deleting tokens, and freezing tokens come \"out-of-the-box\". This has been proven through the development of an initial \"sketch\" protocol that has informed initial thinking and focused attention to the more technically challenging parts of the protocol. While adhering to the decentralised first methodology, the AML and KYC aspects of the protocol become more difficult to reason about - these aspects need further investigation and discussion. The initial investigations point towards two main components: Self Sovereign Identities and AML profiles. Utilising both of these ideas, protocol developers can build regulatory compliant protocols with sovereign data and without the need for trusted oracles. These ideas combined with providing liquidity through interoperability will allow the novel Cosmos Cash protocol to give the same guarantees as the traditional banking sector while opening up a gateway to the decentralised ecosystem for less technical users thus enforcing mass adoption of Cosmos SDK as the de-facto standard for building self-sovereign blockchains. Self Sovereign Identities Decentralised identifiers[@Sporny:20:DI] and verifiable credentials[@Sporny:19:VCD] can be combined to construct self-sovereign identities on a sovereign blockchain, but how can privacy be maintain and comply with AML regulations? This can be done through leveraging up and coming advancements in the Cosmos eco-system such as Coconut [@ICF:coconut][@Nym:Coconut][@1802.07344] for selective disclosure of personally identifiable information. This could facilitates regulatory oversight and privacy in a decentralised public application. Anti-Money Laundering Profiles Another aspect that has been identified for regulatory compliance is the risk based approach to AML. The initial idea developed with Confio consists of mapping to an AML profile. Each profile represents a different risk profile and corresponds to increased checks. So, for example, a politically exposed person or company in a high risk industry would have a higher classification than a low risk user. This leads to the second point, which is the proposal to remove send transations. This is handled by an AML function that reviews the transaction against the users' AML profile. Non-acknowledgements are referred to the regulator (or other actor) for intervention. Providing liquidity through interoperability Finally, the protocol can be opened to inter-chain transfers. If each sovereign blockchain is a VASP, the FAFT Travel Rule [@CryptoTravelRule] would likely apply to IBC transfers. To address this issue, certain protocols exist in the Ethereum space such as OpenVASP [@OpenVASP]. This area needs more investigation. \"Countries should ensure that beneficiary VASPs obtain and hold required originator information and required and accurate beneficiary information on virtual asset transfers, and make it available on request to appropriate authorities.\" [@CryptoTravelRule] To support integration with other chains, a relayer will have to be implemented. A protocol native IBC token transfer application still needs to be considered, but will ultimately be built with reference to the FAFT travel rule. Appendix Appendix A - Asset Referenced Token white-paper requirements {#sec:whitepaper} General information about the issuer Issuer\u2019s name Registered address Date of the registration Legal entity identifier Where applicable, the group of undertakings to which the issuer belongs Identity, address and functions of persons belonging to the management body of the issuer The statement as referred to in Article 46(4) Potential conflicts of interest Details of the issuer\u2019s financial track record for the last three years or where the issuer has not been established for the last three years, the issuer\u2019s financial track record since the date of its registration. Except for e-money issuers who are exempted from authorisation in accordance with Article 43(2), details about the authorisation as an issuer of e-money tokens and name of the competent authority which granted authorisation. Information about the project Details of all natural or legal persons (including addresses and/or domicile of the company) involved in design and development, such as advisors, development team and crypto-asset service providers. Information about the offer to the public of e-money tokens or their admission to trading Indication on whether the whitepaper concerns an offer to the public of e-money tokens to the general public and/or their admission to trading on a trading platform for crypto-assets. Where applicable, the total number of e-money tokens to be offered to the public and/or admitted to trading on a trading platform for crypto-assets. Where applicable, name of the trading platform for crypto-assets where the admission to trading of e-money tokens is sought. The law applicable to the offer to the public of e-money tokens, as well as the competent courts. Rights and obligations attached to e-money tokens A detailed description of the rights and obligations (if any) that the holder of the e-money token is entitled to, including the right of redemption at par value as well as the procedure and conditions for the exercise of these rights. Any related fees applied by the issuer of e-money tokens when the redemption right at par value is exercised by the holder of e-money tokens. Information on the underlying technology Information on the technology used, including distributed ledger technology, protocols and technical standards used, allowing for the holding, storing and transfer of such e-money tokens. Description of the underlying protocol\u2019s interoperability with other protocols. The consensus algorithm, where applicable. Incentive mechanisms to secure transactions and any fees applicable. Where the crypto-assets are issued, transferred and stored on a distributed ledger that is operated by the issuer or a third-party acting on its behalf, a detailed description of the functioning of such distributed ledger. Information on the audit outcome of the technology used (if any). Risks Description of risks associated with the issuer of e-money tokens. Description of risks associated with the e-money tokens. Description of risks associated with the technology used as well as mitigating measures (if any). Appendix B - Requirements for Significant tokens {#sec:appsigtokens} Rules for custody of assets (MiCA Article 33) Quality of assets held in reserves (MiCA Article 34) Management policies to promote sound risk management, particularly liquidity risk (MiCA Article 41-1) Diversify custody of tokens across multiple CASP's (MiCA Article 41-2) Strengthen liquidity risk management, with a focus on stress testing (MiCA Article 41-3); Elevated issuer capital requirements from 2% to 3% (MiCA Article 41-4) Procedures for an orderly wind-down (MiCA Article 42) Enhanced EBA supervision, through a supervisory college, which is paid by issuers References","title":"Cosmos Cash"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#executive-summary","text":"This article describes the legal requirements to create a Cosmos-SDK powered regulatory compliant e-money token. This token would have the same guarantees as the traditional banking sector thus bringing true liquidity to the crypto world. In this paper, the regulatory environment within Europe will be laid out. It will outline how the regulations have been drawn up and how the regulations define DLT based assets and the requirements based on these classifications. It will also briefly review the roles and permits required to perform activities relating to crypto-assets. It is observed that: Financial services that are licensed under existing EU regulation have advantages under new crypto-asset legislation; Key deliverable from a technology perspective for issuers of e-money tokens on Decentralised Ledger Technologies - assuming issuer is authorised - is a whitepaper that details the supporting technology and associated risks; Anti-Money Laundering (AML) regulations are the main point of concern with regard to decentralised ledger technology and represents key regulatory risk; With respect to AML, some attention should be paid to the FATF \"travel rule\", which is not contained in current EU directive, but is part of FATF recommendations; The definition of validators within regulatory frameworks is unclear and forms another regulatory risk to be mitigated for an e-money token issuer; The EU regulatory requirements relating to the implementation of Central Bank Digital Coins (CBDC) is likely to lead to delays, but a regulated protocol with a consortium of issuers could be a way forward.","title":"Executive Summary"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#acknowledgements","text":"Authors of this article would like to thank Amagis Capital for their backing report and many recommendations, particularly Antonio Giannino Francesca Valenti Andrea Vianelli Martin Worner at Confio.tech for his design input and reviews Interchain Foundation for their backing and suggestions This paper will make significant reference to Amagis' report produced in conjunction with this report. For the sake of brevity, reference details are noted here [@Amagis:CosmosCashReport]","title":"Acknowledgements"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#disclaimer","text":"This paper represents the opinions and views of the authors. It should not be any way construed as legal advice.","title":"Disclaimer"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#background","text":"The value of assets secured on Distributed Ledger Technology (DLT) is increasing at ever upward rates. However, pervasiveness in the general economy is still low. This is for a number of reasons that include: Understanding the new technology Financial literacy in the general public Trust and public perception Readers of this document will doubtless believe that DLT is indeed a tool of public good that can change finance for the better for millions of people. However to make that transition, appropriate regulation is important, especially as the technology matures. To date, jurisdictions are adopting three contrasting approaches toward crypto-assets and crypto-related services, namely: Proactive approach , adopting regulations addressed to crypto-assets and related services; Neutral approach , seeking to promote case-by-case assessments on the relevant circumstances and eventually attempting to reconduct such assets and activities to existing legislation and regulations (mostly within the payment and investment services spheres); Restrictive approach , seeking to introduce outright bans to crypto-assets and related activities. This document will review the approach within the European Union.","title":"Background"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#scope","text":"","title":"Scope"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#european-union","text":"This document will only consider European Regulation. The reasons for this are two-fold: market size and regulatory framework. The union (as defined as the 27 member states) represents 450 million people (third in size behind China and India) and is the second biggest trading bloc in the world. Further, the Eurozone (area using the Euro currency) is the second largest economy in the world in nominal terms, after the United States; is the third economy largest in purchasing power parity (PPP) terms, after China and the United States; has a GDP estimated at 18.8 trillion USD (nominal) in 2018; represents approximately 22% of the global economy. In terms of economy and demographics, the EU is globally extremely important, but with respect to DLT-based assets, as of September 2020, the EU has also taken the lead in attempting to create the first harmonised and cross-border framework applicable to crypto-assets and related activities. In addition to legislation, the EU Commission has also been promoting a digital finance package, which includes a new strategy on digital finance for the EU financial sector. The aim is to ensure that the EU embraces the digital revolution and drives it with innovative European firms in the lead, making the benefits of digital finance available to European consumers and businesses.","title":"European Union"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#eu-regulatory-framework","text":"Financial legislation is guided and implemented through a network of international and national level bodies. The scope of each body defined as as per the table below [@Judge:CryptoLandscape]: A number of supranational and intergovernmental bodies such as Bank of International Settlements (BIS), and the Financial Action Task Force (FATF), with respect to their role and responsibilities, advise on best practice, policy and standards. For BIS this is central bank and monetary policy; for FATF this is money laundering and terrorism financing. Within the European Union (EU) the commission turn policy and guidelines - like FATF recommendations - into draft legislation which is then approved by the European Parliament and the Council of Minsters. The commission drafts legislation in two forms: regulation and directives. As per the Europa.org website, they are defined as follows: A \"regulation\" is a binding legislative act. It must be applied in its entirety across the EU. A \"directive\" is a legislative act that sets out a goal that all EU countries must achieve. However, it is up to the individual countries to devise their own laws on how to reach these goals. Through these mechanisms financial regulation is implemented in the EU.","title":"EU Regulatory Framework"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#mica","text":"The background above outlined the EU package to support DLT technologies. This package includes a proposal for a pilot regime on DLT market infrastructures, a proposal for digital operational resilience and a proposal to clarify or amend certain related EU financial services rules. This proposal for a \"Regulation of The European Parliament And of The Council on Markets in Crypto-assets, and amending Directive (EU) 2019/1937\" is also known as \u201cMiCA\u201d [@EU:MiCA]. MiCA follows from several supervisory opinions, guidance, industry-wide consultations and international reports. It is drafted with several core goals in mind: To increase legal certainty around crypto-assets and related services; To support innovation and promote the development of crypto-assets and the wider use of distributed ledger technology (DLT); To instill appropriate levels of consumer and investor protection and market integrity in an area that presents many of the same risks as traditional financial instruments; To ensure financial stability. MiCA introduces the first EU-wide licensing regime for crypto-asset issuers and service providers. It follows the approach taken with traditional investment services regulation through the implementation of MiFID II (Directive 2014/65/EU) [@EU:MiFID] and MiFIR [@EU:MiFIR]. Further, it builds upon - and complements - other existing regulation, of which the most relevant are: Electronic money within the scope of EMD II (Directive 2009/110/EC) [@EU:EMD2]; Deposits within the scope of the EU Directive on Deposit Guarantee Schemes (Directive 2014/49/EU) [@EU:DepositGuarantee]; Securitisations within the scope of the Securitisation Regulation (Regulation (EU) 2017/2402) [EU:Securitisation]. In addition to these articles, there are other directives that apply cross-asset/service. The most important for crypto-assets is the 5th Anti-Money Laundering Directive (Directive 2018/843) known as AMLD5 [@EU:AMLD5] Given MiCA has been drafted on the basis of leveraging existing legislation, by design it favours those entities that are already licensed under existing financial services regulation. By way of an example, if a firm is already licensed to issue an asset (under MiFiD or e-money) then the barriers a DLT token can be issued very easily through the completion of steps defined under MiCA","title":"MiCA"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#products","text":"","title":"Products"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#definition-of-cryptovirtual-assets","text":"In short, the definition of crypto/virtual assets depends on the regulation under consideration. For MiCA it means \u201c a digital representation of value or rights which may be transferred and stored electronically, using distributed ledger technology or similar technology \u201d. The key point is the DLT or \"alike\". However, under the FATF guidance [@FATF:G20Guidance], a virtual asset is \"a digital representation of value that can be digitally traded, or transferred, and can be used for payment or investment purposes. Virtual assets do not include digital representations of fiat currencies, securities and other financial assets that are already covered elsewhere ...\" All the definitions of MiCA (as per next section) come under this remit, with the exclusion of security tokens where they are digital representations of the existing securities/assets. FATF also refer to a range of underlying technologies, not just DLT. This paper is particularly focused on e-money tokens, so it is worth considering the AMLD5 legal definition of a virtual currency: \u201ca digital representation of value that is not issued or guaranteed by a central bank or a public authority, is not necessarily attached to a legally established currency, and does not possess a legal status of currency or money, but is accepted by natural or legal persons, as a means of exchange, and which can be transferred, stored and traded electronically\u201d Which, unsurprisingly, is close to the definition of stablecoins (and by extension e-money tokens).","title":"Definition of crypto/virtual-assets"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#types-of-crypto-asset-covered-by-mica-regulation","text":"MiCA addresses crypto-assets. In particular it focuses on a number of sub-types that represent either a claim on an economic asset, method of payment or for another utility (permissions etc.): Economic assets Security Tokens : these represent the DLT based equivalent of traditional securities i.e. they represent ownership rights and/or entitlements (e.g. dividends, coupon payments etc) The key observation is that these can include traditional securities or other assets that have undergone the process of tokenization (i.e. that have been registered on a blockchain in the form of a token). Utility Utility Tokens are a type of crypto-asset which is intended to provide digital access to a DLT-based good or service. The important features of this class of token is that: It is only accepted by the issuer; In general, it has a non-financial purposes. Methods of payment CBDC : these may be defined digital assets issued by a public authority (i.e. central banks, in the form of central bank liability), often referred to as sovereign tokens (namely a central bank) for the purpose of ensuring smooth and frictionless payment and settlement solutions, in either retail or wholesale transactions. Payment tokens / Cryptocurrencies : these instruments are those crypto-assets that are designed as an alternative to government issued fiat money i.e. they are intended to perform the roles of medium of exchange, store of value and unit of account. These are often referred to as virtual currencies or coins. Classic examples are Bitcoin and Litecoin, Stablecoins (or asset-referenced tokens) : these tokens aim at maintaining a stable value by referencing one or more of the following asset types: currencies that are legal tender; commodities; other crypto-assets By stabilising their value, those asset-referenced tokens often aim at being used by their holders as a means of payment to buy goods and services and as a store of value. E-Money Tokens E-money tokens (EMT) are a sub-category of stablecoins, but the key characteristic is that value stability is achieved by referencing only one fiat currency rather than a basket of assets. Effectively, they are a proxy for a fiat currency that is legal tender. They are not a CBDC because they are not issued by a public body. The function of such crypto-assets is very similar to the function of electronic money, as defined in the EMD2 Directive [@EU:EMD2].","title":"Types of crypto-asset covered by MiCA regulation"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#significant-tokens","text":"Notably, under the MiCA, the European Banking Authority (EBA) has been given the power to classify asset-referenced tokens as \"significant asset-referenced tokens\" - and by extension - \"significant e-money-token\" Significance is established by satisfying at least three of the following factors: Size of the EMT, either by The size of the customer base, Value of issued tokens, The number and value of transactions, The number of Member States where the EMT is used, use for cross- border payments and remittances; Size of the issuer, through Market capitalisation, and/or Asset reserves of the issuer, cross-border activities; The shareholders of the issuer of the EMT or of any of the third-party entities referred to in Article 30(5), point (h); The significance of the number of Member States where the third-party entities referred to in Article 30(5), point (h), are established; The degree of interconnectivity of the EMT with the financial system - the measure of this are unclear. The significant classification leads to enhanced regulation of such tokens particularly: Asset related - custodial requirements, quality and issuer capital requirements Risk management - policy, liquidity management and wind-down procedures Oversight - Set-up of an EBA chaired and managed supervisory college, which is paid by issuers based on size of issuance. Please review section Appendix \\ref{sec:appsigtokens} for specifics. Note: Eventually, issuers themselves may apply for having their EMT classified as significant.","title":"Significant tokens"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#crypto-assets-exempt-from-mica-secexemptions","text":"There are a number of types (or combinations of types) of crypto-assets where MiCA authorisation does not apply: Case 1: Size of the token offering , in terms of either value and/or audience The crypto-assets are offered for free; The offering of crypto-assets is addressed to fewer than 150 natural or legal persons per member state acting on their own account; The total consideration of such an offering in the Union does not exceed \u20ac1,000,000, or the corresponding equivalent in another currency or in crypto-assets, over a period of 12 months; The average outstanding amount of asset-referenced tokens/e-money tokens does not exceed \u20ac5,000,000, or the corresponding equivalent in another currency, over a period of 12 months, calculated at the end of each calendar day. Case 2: The knowledge and experience of audience , i.e. the offering of crypto-assets (e.g. asset-referenced tokens/e-money tokens) is solely addressed to qualified investors and the crypto-assets can only be held by such qualified investors. Case 3: asset attributes , specifically, the crypto-asset is unique and not fungible with other crypto-assets; Case 4: The crypto-assets that are created through mining as a reward for the maintenance of or validation of transactions on a or similar technology;","title":"Crypto-Assets exempt from MiCA {#sec:exemptions}"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#services","text":"","title":"Services"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#crypto-asset-service-providers-seccasps","text":"MiCA - aside from issuance - sets out eight types of crypto-asset services. These services map almost directly to the equivalent roles in MiFID). These are namely: The custody and administration of crypto-assets on behalf of third parties : this refers to the safekeeping or controlling, on behalf of third parties, crypto-assets or the means of access to such crypto-assets, where applicable in the form of private cryptographic keys; The operation of a trading platform for crypto-assets : this means managing one or more trading platforms for crypto-assets, within which multiple third-party buying and selling interests for crypto-assets can interact in a manner that results in a contract, either by exchanging one crypto-asset for another or a crypto-asset for fiat currency that is legal tender; The exchange of crypto-assets for fiat currency that is legal tender : this means concluding purchase or sale contracts concerning crypto-assets with third parties against fiat currency that is legal tender by using proprietary capital; The exchange of crypto-assets for other crypto-assets : this means concluding purchase or sale contracts concerning crypto-assets with third parties against other crypto-assets by using proprietary capital; The execution of orders for crypto-assets on behalf of third parties: this means concluding agreements to buy or to sell one or more crypto-assets or to subscribe for one or more crypto-assets on behalf of third parties; Placing of crypto-assets : means the marketing of newly-issued crypto-assets or of crypto-assets that are already issued but that are not admitted to trade on a trading platform for crypto-assets, to specified purchasers and which does not involve an offer to the public or an offer to existing holders of the issuer\u2019s crypto-assets; The reception and transmission of orders for crypto-assets on behalf of third parties : this means the reception from a person of an order to buy or to sell one or more crypto-assets or to subscribe for one or more crypto-assets and the transmission of that order to a third party for execution; Providing advice on crypto-assets : this means offering, giving or agreeing to give personalised or specific recommendations to a third party, either at the third party\u2019s request or on the initiative of the crypto-asset service provider offering the advice, concerning the acquisition or the sale of one or more crypto-assets, or the use of crypto-asset services. Entities that are licensed to offer these services are called CASP's (Crypto-Asset Service Providers). An entity wanting to offer multiple services must apply for each license as needed. Note that these licenses can expire if not used.","title":"Crypto-Asset Service Providers {#sec:casps}"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#minersvalidators-do-they-need-to-be-authorised","text":"In the EU Commission Consultation [@EUCommission:Crypto:Consulation], the Commission enquired about the suitability to include the following activity within the regulatory perimeter: \u201c Processing services, also known as \u2018mining\u2019 or \u2018validating\u2019 services in a DLT environment (e.g. \u2018miners\u2019 or validating \u2018nodes\u2019 constantly work on verifying and confirming transactions)\u201d . Looking at the definition of crypto-service set out in MiCA, no reference is made to mining and/or validators\u2019 activities beyond those defined services above. Amagis, in their analysis, suggest this ought to be the result of an assessment on the nature of the activities of miners following the feedback received after the consultation. As will be seen in section \\ref{sec:AMLGov}, the application of AML recommendations is somewhat different and this presents a point of uncertainty.","title":"Miners/Validators - do they need to be authorised?"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#relation-of-mica-services-to-mifid-ii","text":"It is important to note that neither credit institutions (i.e. banks), or MiFID investment firms are subject to the authorisation requirements when providing crypto-asset services (provided that the relevant crypto-asset service is related to the relevant MiFID investment service or activity for which they are authorised). As an example, holding a license for the provision of advisory services under MiFID can also advise on crypto-asset investments without further regulation required. However, it is the view of this paper that this relation is not reciprocal, i.e. entities licensed under MiCA are not licensed under MiFID, thus, a firm licensed to advise on crypto-assets can not offer advisory on other securities. For MiFID licensed firms, the only additional requirements under MiCA to issue an asset referenced token is the need to fulfil white paper requirements as outlined in Appendix \\ref{sec:whitepaper}","title":"Relation of MiCA services to MiFID II"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#issuers","text":"In addition to the roles outlined above, MiCA draws a tripartite distinction among categories of issuers basing on the type of crypto-asset issued: Issuers of crypto-assets that are not asset-referenced tokens or e-money tokens (such as utility tokens): These do not need to be licensed in order to offer their crypto-assets to the public or seek admission to a Crypto-exchange and, provided that they comply with the requirements of MiCA, they are permitted to do so throughout the EU. Issuers of stablecoins (asset-referenced tokens): Issuers of stablecoins are required to be authorised by their home state regulator, which shall assess their compliance with a list of prudential, conduct of business (including requirements on custody of reserve assets), and governance requirements. Issuers shall be required to draft a white paper, having the minimum content set out under MiCA relating to the offer of stablecoins that must be approved by the issuer\u2019s home state regulator prior to the offer. Issuers of e-money tokens: Issuers of e-money tokens are required to be authorised by their home state regulator as a credit institution (i.e. a bank) or an e-money issuer (under E-Money Directive). Consequently, they will be subject to the requirements of the EMD. In addition, e-money issuers also need to issue a white-paper to the home state regulator, but unlike the stablecoin token it does NOT need to be approved.","title":"Issuers"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#passports","text":"The EU comprises 27 member states. The regulatory burden of registering in each member state would be too onerous, despite purporting to be a single market. Therefore the concept of passporting was introduced. Passporting allows entities authorised to conduct certain business in one jurisdiction to only need satisfy registration requirements in another EU jurisdiction in order to conduct cross-border business. MiCA introduces the same EU-wide passport concept that is available to market participants who become licensed under the MiCA regime in their home member state, again replicating the existing features of traditional investment services legislation. Passporting represents a major breakthrough in the industry as it effectively ensures the cross-border provision of crypto-related services across the EU, creating a level playing field among EU member states.","title":"Passports"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#anti-money-laundering","text":"","title":"Anti-Money Laundering"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#definition","text":"As defined by the Financial Action Task Force (FATF): Money laundering is the processing of these criminal proceeds to disguise their illegal origin. With reference to the regulatory framework section earlier, FATF is an intergovernmental organisation tasked with setting policy and guidelines [@FATF:G20Guidance] to prevent both Money Laundering and Terrorism Financing. These standards are then interpreted by each jurisdiction and turned into legislation. The combination of lack of regulation, anonymity and global reach has made DLT based tokens useful tools in money laundering. Over time FATF have defined and subsequently clarified the definitions of virtual assets, their providers and the application of guidelines to these assets. AMLD5 is a significant issue for DLT based technologies to address in order to get regulatory approval.","title":"Definition"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#eu-aml-implementation","text":"Within the EU, FATF guidelines are implemented through the 5th Anti-Money Laundering Directive (Directive 2018/843) [@EU:AMLD5]. Broadly this is a multi-level risk based approach. Each country may assess their vulnerability to money laundering and then take appropriate steps. Each organisation will decide on the risk they are prepared to accept and identify the risk they are subject to, which include product range, customer types etc. AML processes in financial service providers follow a model of \"Know Your Client/Business\" (KYC/KYB) and then based on the results of this an on-going process of either: Client Due Diligence (CDD); or Enhanced Due Diligence (EDD) Which may be more fine-grained as needed.","title":"EU AML implementation"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#kyc-kyb","text":"This first step involves establishing the identity of a client and address. This is then assessed against public information, AML/CFT exemption lists and possibly an internal model. Based on this more checks may be required that can include: Who the economic beneficiary is i.e. if the client is a private business, then who owns the business; Business profile and types of transaction The source of funds i.e. how the business earns its income There may be additional checks resulting checks, particularly if the client is a \"political exposed person\" then these persons - and family - would also qualify for a higher risk rating","title":"KYC / KYB"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#cdd-edd","text":"Once these checks are done and risk rating established, there are on-going checks that last for the entire business relationship. It includes: Regular KYC reviews and re-rating of risk. On-going transactions checks. In cases where the transaction is unusual, large, complex or of unclear purpose in relation to the client business and against similar classes of business, or the transaction involves a high-risk third countries then it should be flagged and investigated. Unexplained transactions are identified and raised as a \"Suspicious Activity Report\" with the relevant authority within the jurisdiction. The checks and controls themselves are based on a risk model and risks change with time - for example: new guidance, products, threats etc - so the models themselves need to be reassessed at regular intervals. The AMLD5 requires member states to create central databases comprised of crypto users\u2019 identities and wallet addresses and authorise national FIUs to access the information stored in them. This means that AML subject firms are legally required to register their businesses with local authorities in the EU and must retain the documents regarding the conducted CDD and recorded transactions in order to hand over identifiable user information to FIUs if requested, such as real names and addresses.","title":"CDD / EDD"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#the-penalties","text":"By way of illustrating the seriousness of AMLD5, severe sanctions and penalties may be applied to obliged entities that do not apply appropriate measures in line with the requirements. The maximum financial penalty for a breach is equal to at least twice the amount of the benefit derived from the breach where that benefit can be determined, or at least EUR 1,000,000.","title":"The Penalties"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#aml-and-vasps","text":"In section \\ref{sec:casps} it was explained how MiCA defined classes of service providers called CASPs that needed authorisation based on the service offered. FATF[@FATF:G20Guidance] recommendations have a similar concept called VASPs (Virtual Asset Service Providers), who are defined as the following: \u201cAny natural/legal person who is not covered elsewhere under the Recommendations, and as a business conducts one or more of the following activities or operations for or on behalf of another natural or legal person: i. exchange between virtual assets and fiat currencies; ii. exchange between one or more forms of virtual assets; iii. transfer of virtual assets; iv. safekeeping and/or administration of virtual assets or instruments enabling control over virtual assets; and v. participation in and provision of financial services related to an issuer\u2019s offer and/or sale of a virtual asset.\u201d This definition is relevant because it imposes AML/CFT requirements. The table below maps roles in a centralised stablecoin network to AML/CFT obligations. From the above it is clear that where there is a \"gateway\" into the network there is a AML/CFT responsibility, which implies Virtual currency issuers - \"issuance, redemption and stabilisation of coins\" Virtual currencies exchange providers (the \u201c VCEPs \u201d), or \"Providers engaged in exchange services between virtual currencies and fiat currencies\" ; Custodian wallet providers (the \u201c CWPs \u201d), i.e. entities that provide services to safeguard private cryptographic keys on behalf of their customers, to hold, store and transfer virtual currencies. What is not so clear is the definition of \"Governance\" and \"Transfer mechanism(s)\". These will be discussed in section \\ref{sec:AMLGov}. It should be highlighted that point 2 above is scoped to exchange services for fiat currency and not crypto-crypto exchanges. This is due to a point of difference between AMLD5 implementation and the FATF recommendation, specifically the \"crypto travel rule\" . This rule requires VASPs to collect and exchange beneficiary and originator information with VASP counterparties during any transmittal exceeding USD 1,000. The required personally identifiable information includes names, account numbers, physical addresses and unique identification numbers. This point of difference is worth noting. AMLD5 is a directive and therefore, it has slightly different implementation across jurisdictions. Some jurisdictions will go beyond AMLD5 and implement the travel rule.","title":"AML and VASPs"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#aml-governance-and-developers-secamlgov","text":"The points concerning AML and stablecoins in FATF recommendations should be brought to attention. According to FATF [@FATF:G20Guidance], \"The central developers and governance bodies of so-called stablecoins are in a unique position to undertake ML/TF risk mitigation\" Thus, the logic behind this is that: \"... they determine how the functions of the so-called stablecoin arrangement (e.g. the stabilisation mechanism, transfer of coins and user interface) will operate. They make key design and functionality decisions and they determine the extent to which functions are centralised or decentralised and whether AML/CFT preventive measures are built into a so-called stablecoin. They can also control the access points to the arrangement (e.g. who can participate as an exchange or transfer service or whether a person can only access the system through a VASP) and impose AML/CFT standards setting out expectations or operating requirements for key entities in the arrangement, including exchanges and custodial wallet providers. They are also best positioned to undertake centralised AML/CFT functions, such as transaction monitoring across the so-called stablecoin arrangement\u201d FATF then suggest that developers and governance bodies are subject to AML/CFT because \u201cDue to the types of functions necessary for the launch and operations of so-called stablecoins, there will generally be a central administrator or governance body. This is particularly the case for so-called stablecoins with potential for mass-adoption ... For such so-called stablecoins, the FATF considers that these developers and governance bodies are, in general, a financial institution ... or a VASP ... under the revised FATF Standards. This is particularly the case if the governance body carries out other functions in the so-called stablecoin arrangement (such as managing the stabilisation function). The exact designation will depend on what functions the body specifically undertakes and each jurisdiction\u2019s national law \u201d. The keys to this are the caveats mentioned, namely: what functions the body specifically undertakes and each jurisdiction\u2019s national law How this affects Cosmos Cash will be reviewed in later sections.","title":"AML, governance and developers {#sec:AMLGov}"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#aml-and-validators","text":"Under the AML/CFT perspective, the regulatory requirements of validators is somewhat different. FATF, in their guidance state the following: \u201cdepending on the functions they perform, the validator nodes that validate the underlying distributed ledger technology may be VASPs or financial institutions. These entities may be part of the so-called stablecoin governance body or separate entities\u201d. As per the FATF argument regarding governance, the \"functions they [validators] perform\" is the key to clarifying this point.","title":"AML and validators"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#off-chain-requirements","text":"In addition to the KYC and CDD / EDD, there are further organisational requirements that are off-chain, but noted for completeness: Compliance officer at managerial level Management practices Employee screening and training on the AML Directives.","title":"Off-chain requirements"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#possible-on-chain-considerations","text":"Further to the off-chain considerations, there are additional control and procedures that include the internal risk model, ongoing transaction monitoring plan, reporting, record-keeping and internal control. A particular requirement of a crypto/virtual asset is noted in AMLD5, consideration n. 9: \u201cTo combat the risks related to the anonymity, national Financial Intelligence Units (FIUs) should be able to obtain information allowing them to associate virtual currency addresses to the identity of the owner of virtual currency\u201d Ideally robust AML initiatives should be implemented within the protocol rather than relying on CASP's implementation would add another level of defence, making the entire network safer.","title":"Possible on-chain considerations"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#credit-institution-versus-e-money-institution","text":"It is worth highlighting the types of institution that can issue e-money tokens. As noted there are two types of institution that can issue such tokens: Credit Institutions and E-Money Institutions. Credit institutions are in fact banks and therefore hold a banking license. In a more generic sense, these can also be considered as \"fractional\" banks, which is the predominant banking model in the EU (and much of the developed world). These institutions can do the following: Take deposits AND lend to clients; Pay/receive interest on deposits/loans; Make deposits and borrow from the central bank; Are backed by deposit insurance scheme. Because credit institutions benefit from central bank and deposit insurance they are subject to greater capital requirements, enhanced regulation and greater scrutiny as well as enhanced risk management. In contrast, E-Money Institutions have a much more limited scope. This is matched by an equivalent regulatory regime. These institutions can do the following: Take deposits, but can not lend; Can't pay interest on those deposits; Are subject to lesser regulation compared to banks; Are also subject to looser capital requirements; Have no access to central bank funds; Can not be part of deposit insurance scheme (because deposits are not lent to other clients). In contrast to Credit Institutions, EMI's can be considered as a type of \"narrow\" bank.","title":"Credit institution versus E-Money Institution"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#application-of-regulations-to-cbdc","text":"At this point is worth reviewing the situation regarding regulation of CBDC. According to MiCA, CBDCs are exempted from the regulation if crypto-assets are issued by central banks acting in their monetary authority capacity or by other public authorities. However, as pointed out in the literature[@EBI:CryptoMarkets] \u201cThe MiCA exemption, however, does not extend to intermediaries acting in the issuance of CBDCs or providing services to CBDCs. In turn, only if a central bank adopts a CBDC model under which retail currency holders have direct contact with the central bank are the CBDCs exempted. (\u2026). Models where well- qualified and resourced intermediaries function as links between central banks and retail currency holders are much more likely and far less burdensome on the central banks. This explains why such two-tier CBDC structures have been adopted, for instance, by China in its Digital Yuan project (\u2026). As presently proposed, MiCA will obstruct the sound development of a Digital Euro or other European CBDC strategy. We thus recommend that, subject to further rules stipulated by the respective central bank, private entities acting on behalf of a central bank or in cooperation with a central bank in the context of a CBDC system be exempted from MiCA\u201d To summarise, CBDC are exempt from regulation if the token is issued by a central bank directly to retail customers. However this is contrary to the current operating model of the interbank-market and presents significant risk as it represents a fundamental change in operating model. Conversely, third parties acting on behalf of a central bank in the implementation of a CBDC would be subject to regulatory oversight under the significant token requirements, which seems punitive. As [@EBI:CryptoMarkets] and [@IMF:RiseDigitalMoney] both note, the two-tier CBDC/e-money model is likely to be the best operating model generally (consider the Digital Yuan project). Based on the impasse outlined above, within the EU this presently does not look likely.","title":"Application of regulations to CBDC"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#cosmos-cash","text":"","title":"Cosmos Cash"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#definition_1","text":"Cosmos Cash is intended to offer features typical of electronic money, adopting the blockchain technology as underlying infrastructure, and thus leading to a digital asset to be applied within the payment industry. Using the conceptual framework outlined by Adrian & Griffoli [@IMF:RiseDigitalMoney], Cosmos Cash would be acting as a claim based asset with a fixed value redemption, using a private backstop and ultimately built on Blockchain technology. More specifically, Cosmos Cash would be built as a digital token that references to a fiat currency (or a digital representation of a fiat currency) based on assets held by the issuer using a Tendermint-based network. Cosmos Cash comprises a number of different stakeholders, identified as follows: Central Bank - issues fiat currencies, which may in the future be digital currencies, that back the token; Issuers - one or more approved parties that have the authority to mint, burn and hold reserves of tokens. They use fiat reserves (and digital representations) to issue and redeem tokens presented by customers. They would also offer functionality and services through customer wallets; Validators are entities that validate and settle transactions on the Tendermint network; Holders/customers who can send, receive and redeem tokens from the network. These can be legal entities and private individuals. They would need to successfully complete a KYC process before joining the network.","title":"Definition"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#regulatory-classification-clue-it-is-an-e-money-token","text":"Under MiCA regulations - and based on Amagis' consideration - Cosmos Cash would be classed as a crypto-asset based on the following argument: It is a digital representation of value It can be transferred and stored electronically It is based on a Distributed Ledger Technology Furthermore, it is an E-money token on the basis that It qualifies as a crypto-asset (see above) It is intended as a means of exchange, specifically it is an electronic surrogates, for coins and banknotes and is used for making payments It maintains a stable value by referring to the value of a fiat currency Given that Cosmos Cash is an E-Money token, it is now possible to consider the applicable regulation.","title":"Regulatory Classification - clue: it is an e-money token"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#authorisation","text":"First question: Does MiCA apply? According to Article 43(1), last paragraph, an e-money token which references a Union currency shall be deemed to be offered to the public in the Union, which means that authorisation is required. It should be noted that if the issuance (\\ref{sec:exemptions}) is small the regulation is much lower.","title":"Authorisation"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#cosmos-cash-regulation","text":"Given Cosmos Cash references a Union currency then the following will apply: {width=50%}","title":"Cosmos Cash Regulation"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#issuers_1","text":"In order to issue e-money tokens, the issuer must be a credit institution or E-Money Institution. It also needs to comply with the E-Money Directive II (2009/110/EC) - specifically Titles II & III [@EU:EMD2]. The E-Money directive defines various requirements: Funds received by issuers for e-money tokens will be invested in secure, low-risk assets in accordance with Article 7(2) of Directive 2009/110/EC; and The assets are denominated in the same currency as the one referenced by the e- money token. Obligations for issuers of e-money tokens include: Not paying interest on e-money token; Holders of e-money tokens are provided with a claim on the issuer; Tokens are issued at par value on the receipt of funds, 1 EUR means 1 token; They are redeemable upon demand by holders at par value. This can be done into cash or via credit transfer; Any fees for redemption must be proportionate to the actual cost incurred by the issuer; Processing times for redemption can not be longer than 30 days; Any conditions of redemption are clearly stated, including any fees and processing times. White-paper In addition to obligations under EMD, issuers of e-money tokens must also draft a white paper relating to the offer of crypto-assets and submit it to the issuer\u2019s home state regulator at least 20 working days before the white paper\u2019s publication. The white-paper in content outlines most of the points outlined above plus the technology supporting the token. Full details can be found in Appendix \\ref{sec:whitepaper}. There are three points of interest to note regarding the white-paper: As noted previously, such a white paper does not need to be approved by the home state regulator. It is unclear what the status such a token would be in the situation where the white-paper is not explicitly approved. It is a significant point of difference that issuers of e-money tokens based on DLT have to issue a white-paper. E-money on other technologies do not. Holder can claim damages from the issuer if they have evidence that information in the white-paper is not \"complete, fair, clear or misleading\" Significance The token may be classed as significant within 30 days by the EBA. If so then the additional requirements would be enforced - Appendix \\ref{sec:appsigtokens} Marketing When marketing such a token there are a number of requirements: The marketing communications shall be clearly identifiable as such; The information shall be fair, clear and not misleading, it should be clear that holders have the right of redemption at par value at any time; The communications shall be consistent with the information in the crypto-asset white paper; The communications shall reference the crypto-asset white paper Communications shall indicate the address of the website of the issuer of the e-money tokens.","title":"Issuers"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#aml","text":"As shown in section \\ref{sec:AMLGov} above, the status of governance bodies, developers, validators and miners with respect to AML requirements depends on two factors: Functions the body perform; and Law in the national jurisdiction These frame Amagis' thinking on this such that \"... in terms of MiCA, the activity of developer and/or validator and/or miner does not fall into the regulatory perimeter, nor such activities are included in AMLD5 as subject persons \u2013 in fact, according to such statutory instruments and looking at the Cosmos Cash ecosystem, we would consider subject persons only EMIs, PSPs and wallet or exchange providers, rather than validators, developers and miners.\" Amagis go further, stating \"About validators, we once again strongly disagree with the statement set out under the FATF Report whereby \u201cDepending on the functions they perform, the validator nodes that validate the underlying distributed ledger technology may be VASPs or financial institutions. These entities may be part of the so-called stablecoin governance body or separate entities\u201d\" . As Amagis note, these points will be clarified over time, both in MiCA and FATF recommendations and they should be reviewed, Finally, as suggested by Amagis, Cosmos Cash should implement features based on FATF stablecoin focused guidance that could include, amongst others: Ensuring that Cosmos Cash may be transferred exclusively through regulated firms qualifying as financial institutions or VASP in terms of FATF Standards (i.e. being firms subject to AML/CFT obligations); Removing address anonymity; Restrict peer-to-peer transaction via unhosted wallets; Restrict adoption of tumblers and mixers with respect to Cosmos Cash and/or providers within the Cosmos Cash ecosystem; Issue a template AML/CFT policy for stakeholders within the Cosmos Cash ecosystem; Offering webinars for compliance and AML personnel so as to understand the features of Cosmos Cash.","title":"AML"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#conclusions","text":"Given the analysis above, the key points are: Financial services that are licensed under existing EU regulation have advantages under new crypto-asset legislation. Key deliverable for Issuers of e-money tokens on Decentralised Ledger Technologies - assuming issuer is authorised - is the whitepaper detailing the technology supporting the token Anti-Money Laundering (AML) regulations are the main point of concern with regard to decentralised ledger technology and represents a key regulatory risk With respect to AML, some attention should be paid to the FATF \"travel rule\", which is not currently an EU directive, but is part of the FATF recommendations The definition of validators within regulatory frameworks is unclear and forms an additional regulatory risk to be mitigated for an e-money token issuer. The EU regulatory requirements relating to the implementation of Central Bank Digital Coins is likely to lead to delays, but a regulated protocol with a consortium of issuers could be a way forward. From this it is clear that AML is a prime area of concern, but also who would use such a protocol, given the hurdles to entry.","title":"Conclusions"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#amlcft","text":"AML/CFT is an area of significant risk and opportunity for Cosmos Cash. The anonymity of existing payments coins need to be eliminated with features such as: Reduce and eliminate off-chain transactions; Establish link between identity between wallet holders; Eliminate mechanisms for hiding identity; Maintain privacy for clients in-line with GDPR requirements; Freeze tokens and accounts in event of suspicious events. There is point of a regulatory risk for validators on the chain underlying a Cosmos cash protocol, such that they are classed as a Financial Institution/VASP. This would need to mitigated/eliminated as the costs of setting up legal mechanisms and AML compliance may be punitive. There is not only a risk, but an opportunity. According to latest reports [@LexisNexis:2019Costs], Financial Crime Compliance costs (this includes, but not limited to AML) in EMEA was USD 137 Bn in 2019. On average 74% of that cost is staffing [@LexisNexis:2017Costs]. An on-chain protocol with AML/CFT shared between issuers and CASPs could offer significant benefits to financial regulators and law enforcement in identifying and researching payment patterns. This presents opportunities to leverage Cosmos based technologies in decentralised identity and zero knowledge proofs. It also offer opportunities to bring in parties with expertise in transaction analysis and data mining capabilities.","title":"AML/CFT"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#secondary-market","text":"As liquidity and transferability are the indisputable advantages of the DLT: this would require Cosmos Cash to cater for transferability features which would not affect the frictionless and seamless nature of DLT-based transfers. It would need however to cater for safeguards ensuring that transactions among customers take place in a safe, transparent and compliant framework. From the analysis above, it is clear that there will be a license-based approach for each financial service, whether that be wallets, exchanges, advisory etc. Ideally such services should be governed without a centralised authority. One proposal for this is suggested by Martin Worner [@Confio:PublicPermissioned][@Confio:Self-sovereign-KYC] at confio.tech through self-sovereign governance framework. This framework on the blockchain is designed to allow the creation of a community of regulated institutions which can be thought of as \u201cGarden walls\u201d . The institutions conduct self-sovereign, verification that the chain addresses match the institutions, and that the institutions are permitted to operate. There is an optional step of requiring the institutions to add funds to a \u201cstaking account\u201d which would allow for the slashing of funds in the event of defined breaches of rules, however, the off-chain safeguards may be a more robust mechanism. Once the community of institutions is established, they can then begin the process of creating instruments to trade, which are restricted to the registered institutions to ensure compliance.In this respect, an open point of MiCA deals with exchanges and trading venues supporting E-Money Tokens: one question to ask is if they will require a specific license as payment service providers or EMI to support such transactions! It is the view of Amagis and this paper that this is the most likely in view of the approach adopted in MiCA.","title":"Secondary Market"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#potential-users","text":"Some of the issues raised by trade bodies within the EU is that MiCA unduly favours entities that are already regulated through MiFID, EMD or other legislation. In the authors' view there is strong evidence for this opinion. This leads to the question of who are the likely users for Cosmos Cash. In this respect, Cosmos Cash protocols may be promoted among Already licensed and established players seeking to access to the crypto market through a fully regulated and disruptive solution such as Cosmos Cash; and Incumbent firms which may be willing to get licensed in order to support Cosmos Cash issuances. Many existing issuers do not have technological expertise in distributed ledger technologies, but are looking for business opportunities to access digital finance with a range of products. As will be seen below, the secondary market and chain interconnectivity also offers existing entities exciting opportunities for growth. The likely scenario will be the development of partnerships between licensed and established financial firms with technology organisations. It is possible that issuers may combine into a consortium for the purposes of issuance. For this to happen, clear and pre-defined governance rules would be needed to ensure and maintain the same compliance standards for all members players, particularly those which will be officially the front vis-\u00e0-vis customers and authorities. A second scenario of incumbent firms looking for a license, as suggested by Amagis suggest would be that Cosmos Cash could build an open-source tool kit that supports such users in the process for becoming eligible issuers. It should be noted that these firms should rely on third parties such as Amagis Capital for non-chain activities such as structuring licensing.","title":"Potential users"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#ecosystem-integration","text":"Although the protocol is important, as Amagis point out, coordination with other stakeholders will be equally important. Stakeholders can include Existing e-money and credit institutions and payment service providers Local regulators Think tanks Contributors Users A plan to include such stakeholders would strengthen the vision behind Cosmos Cash.","title":"Ecosystem Integration"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#design-initial-thoughts","text":"There are currently two prevalent stable token implementations developed using the Cosmos SDK, Terra-Core and e-Money Ledger . These both represent a holistic approach to building a stable token. Both applications define a full suite of modules and compose them to be used as a single application. The goal of Cosmos Cash is to be a protocol that can be deployed on any Cosmos SDK powered application. This forces a deep focus on the core protocol and allows adherence to regulation in a more flexible way.","title":"Design Initial Thoughts"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#design-principles","text":"The characteristics that would allow a novel approach to defining a protocol are as follows: Using a decentralised first methodology Ensuring the protocol follows the latest regulation Using a permission-less chain in a regulated way Allowing e-money to be represented as a token deployed on a distributed ledger application","title":"Design Principles"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#actors","text":"Through the analysis over the course of this paper, the identified actors needed to build the protocol include at least the following: The Identity module is the core module and allows tracking of AML and KYC data in a trust less and secure way that also allows privacy The Issuer module handles creating and tracking issuers, this allows issuer to revoke tokens, and freeze tokens if necessary The Regulator module handles creating and monitoring of regulators, in turn, regulators can create and manage issuers The Token module consists of the basic functionality needed to send, receive and withdraw tokens from the application This represents a preliminary architecture diagram to illustrate the segmentation of the protocol from the holistic application.","title":"Actors"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#known-knowns-and-known-unknowns","text":"While leveraging the Cosmos SDK, token functionality such as creating new tokens, deleting tokens, and freezing tokens come \"out-of-the-box\". This has been proven through the development of an initial \"sketch\" protocol that has informed initial thinking and focused attention to the more technically challenging parts of the protocol. While adhering to the decentralised first methodology, the AML and KYC aspects of the protocol become more difficult to reason about - these aspects need further investigation and discussion. The initial investigations point towards two main components: Self Sovereign Identities and AML profiles. Utilising both of these ideas, protocol developers can build regulatory compliant protocols with sovereign data and without the need for trusted oracles. These ideas combined with providing liquidity through interoperability will allow the novel Cosmos Cash protocol to give the same guarantees as the traditional banking sector while opening up a gateway to the decentralised ecosystem for less technical users thus enforcing mass adoption of Cosmos SDK as the de-facto standard for building self-sovereign blockchains.","title":"\"Known knowns\" and \"Known unknowns\""},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#self-sovereign-identities","text":"Decentralised identifiers[@Sporny:20:DI] and verifiable credentials[@Sporny:19:VCD] can be combined to construct self-sovereign identities on a sovereign blockchain, but how can privacy be maintain and comply with AML regulations? This can be done through leveraging up and coming advancements in the Cosmos eco-system such as Coconut [@ICF:coconut][@Nym:Coconut][@1802.07344] for selective disclosure of personally identifiable information. This could facilitates regulatory oversight and privacy in a decentralised public application.","title":"Self Sovereign Identities"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#anti-money-laundering-profiles","text":"Another aspect that has been identified for regulatory compliance is the risk based approach to AML. The initial idea developed with Confio consists of mapping to an AML profile. Each profile represents a different risk profile and corresponds to increased checks. So, for example, a politically exposed person or company in a high risk industry would have a higher classification than a low risk user. This leads to the second point, which is the proposal to remove send transations. This is handled by an AML function that reviews the transaction against the users' AML profile. Non-acknowledgements are referred to the regulator (or other actor) for intervention.","title":"Anti-Money Laundering Profiles"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#providing-liquidity-through-interoperability","text":"Finally, the protocol can be opened to inter-chain transfers. If each sovereign blockchain is a VASP, the FAFT Travel Rule [@CryptoTravelRule] would likely apply to IBC transfers. To address this issue, certain protocols exist in the Ethereum space such as OpenVASP [@OpenVASP]. This area needs more investigation. \"Countries should ensure that beneficiary VASPs obtain and hold required originator information and required and accurate beneficiary information on virtual asset transfers, and make it available on request to appropriate authorities.\" [@CryptoTravelRule] To support integration with other chains, a relayer will have to be implemented. A protocol native IBC token transfer application still needs to be considered, but will ultimately be built with reference to the FAFT travel rule.","title":"Providing liquidity through interoperability"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#appendix","text":"","title":"Appendix"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#appendix-a-asset-referenced-token-white-paper-requirements-secwhitepaper","text":"General information about the issuer Issuer\u2019s name Registered address Date of the registration Legal entity identifier Where applicable, the group of undertakings to which the issuer belongs Identity, address and functions of persons belonging to the management body of the issuer The statement as referred to in Article 46(4) Potential conflicts of interest Details of the issuer\u2019s financial track record for the last three years or where the issuer has not been established for the last three years, the issuer\u2019s financial track record since the date of its registration. Except for e-money issuers who are exempted from authorisation in accordance with Article 43(2), details about the authorisation as an issuer of e-money tokens and name of the competent authority which granted authorisation. Information about the project Details of all natural or legal persons (including addresses and/or domicile of the company) involved in design and development, such as advisors, development team and crypto-asset service providers. Information about the offer to the public of e-money tokens or their admission to trading Indication on whether the whitepaper concerns an offer to the public of e-money tokens to the general public and/or their admission to trading on a trading platform for crypto-assets. Where applicable, the total number of e-money tokens to be offered to the public and/or admitted to trading on a trading platform for crypto-assets. Where applicable, name of the trading platform for crypto-assets where the admission to trading of e-money tokens is sought. The law applicable to the offer to the public of e-money tokens, as well as the competent courts. Rights and obligations attached to e-money tokens A detailed description of the rights and obligations (if any) that the holder of the e-money token is entitled to, including the right of redemption at par value as well as the procedure and conditions for the exercise of these rights. Any related fees applied by the issuer of e-money tokens when the redemption right at par value is exercised by the holder of e-money tokens. Information on the underlying technology Information on the technology used, including distributed ledger technology, protocols and technical standards used, allowing for the holding, storing and transfer of such e-money tokens. Description of the underlying protocol\u2019s interoperability with other protocols. The consensus algorithm, where applicable. Incentive mechanisms to secure transactions and any fees applicable. Where the crypto-assets are issued, transferred and stored on a distributed ledger that is operated by the issuer or a third-party acting on its behalf, a detailed description of the functioning of such distributed ledger. Information on the audit outcome of the technology used (if any). Risks Description of risks associated with the issuer of e-money tokens. Description of risks associated with the e-money tokens. Description of risks associated with the technology used as well as mitigating measures (if any).","title":"Appendix A - Asset Referenced Token white-paper requirements {#sec:whitepaper}"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#appendix-b-requirements-for-significant-tokens-secappsigtokens","text":"Rules for custody of assets (MiCA Article 33) Quality of assets held in reserves (MiCA Article 34) Management policies to promote sound risk management, particularly liquidity risk (MiCA Article 41-1) Diversify custody of tokens across multiple CASP's (MiCA Article 41-2) Strengthen liquidity risk management, with a focus on stress testing (MiCA Article 41-3); Elevated issuer capital requirements from 2% to 3% (MiCA Article 41-4) Procedures for an orderly wind-down (MiCA Article 42) Enhanced EBA supervision, through a supervisory college, which is paid by issuers","title":"Appendix B - Requirements for Significant tokens {#sec:appsigtokens}"},{"location":"Explanation/articles/regulation-paper/rpts/CosmosCashRegs/#references","text":"","title":"References"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/","text":"USDC vs USDT vs Cosmos Cash Issuer USDC vs USDT vs Cosmos Cash Issuer Summary Methodology TL;DR; USDT ERC20 Smart Contracts Source Analysis Roles Functions USDC ERC-20 smart contracts Source Analysis Roles Functions Cosmos Cash Issuer Module Source Functions Gap Analysis Summary USDC and USDT are both Ethereum, ERC-20 smart contract-based stablecoins pegged one-to-one to the US Dollar (USD). However, each USD-backed stablecoin has different implementations. This article will Perform a high-level functional gap analysis of each smart contract Compare to the current Cosmos Cash proof-of-concept implementation Conclude best practices that will inform the Issuer ADR for Cosmos Cash. Why USDT and USDC? These are currently the leading stablecoin tokens with total market capitalisation of over 90Bn USD (source: coinmarketcap.com) Methodology Each function is labelled based on the following criteria: BESPOKE: custom functionality ERC20 : part of the ERC20 standard PAUSABLE : part of the solidity pausable contract standard OWNABLE : part of the solidity ownable contract standard PROXY : these functions are part of Solidity\u2019s delegate proxy upgradability pattern MINTABLE : part of the solidity mintable contract standard BURNABLE : part of the solidity burnable contract standard RBAC : part of the solidity roles contract standard TL;DR; Label USDT USDC Cosmos Cash Issuer Mintable issue(amount) mint(_to, _amount) mintToken(amount, owner) Burnable redeem(amount) burn(_amount) burnToken(amount, owner) Pausable pause pause TO DO Pausable unpause unpause TO DO blacklist addBlacklist blacklist(_account) TO DO blacklist removeBlacklist(_clearedUser) unBlacklist(_account) TO DO blacklist destroyBlackFunds(_blackListedUser) n/a TO DO blacklist n/a rescueERC20(tokenContract, to, amount) TO DO ERC20 transfer(_from, _value) transfer(_from, _value) ERC20 transferFrom(_from, _to, _value) transferFrom(_from, _to, _value) ERC20 approve(_spender, _value) approve(_spender, _value) Ownable transferOwnership(newOwner) transferOwnership(newOwner) Bespoke setParams(newBasisPoints, newMaxFee) n/a Bespoke n/a transferWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s) Bespoke n/a configureMinter(minter, minterAllowedAmount) Bespoke n/a receiveWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s) Bespoke n/a cancelAuthorization(authorizer, nonce, v, r, s) RBAC increaseAllowance(spender, increment) RBAC decreaseAllowance(spender, decrement) RBAC n/a removeMinter(minter) RBAC n/a updateBlacklister(_newBlacklister) RBAC n/a updateMasterMinter(_newMasterMinter) RBAC n/a updatePauser(_newPauser) RBAC n/a updateRescuer(newRescuer) Proxy n/a initialize(tokenName, tokenSymbol, tokenCurrency, tokenDecimals, newMasterMinter, newPauser, newBlacklister, newOwner) createIssuer(token, fee, owner) Proxy n/a initializeV2(string) Proxy n/a initializeV2_1(newName) Proxy deprecate(_upgradedAddress) n/a USDT ERC20 Smart Contracts Source This analysis used this definition of the USDT ERC-20 smart contract . This is found at 0xdac17f958d2ee523a2206206994597c13d831ec7 Analysis The USDT smart contracts have five main areas of note: Tokens freezing PAUASABLE Tokens minting, burning MINTABLE, BURNABLE Role-Based Access Control User denylisting Upgrading function (albeit limited) Roles This contract has admin privileges for TWO roles, each comprising of one address: OWNER - owner owns the contract and can call admin functions BLACKLISTER - can add and remove users from a blacklist Functions issue(amount) - BESPOKE/MINTABLE: mints a certain amount of tokens. redeem(amount) - BESPOKE/BURNABLE: redeems or burns an amount tokens. pause - PAUSABLE: pauses the token transfers. This function can only be called by the contract owner, the issuer of USDT tokens. unpause - PAUSABLE: unpauses token transfers only callable by the token. addBlacklist(_evilUser) - BESPOKE: this function freezes a user's assets by adding an address to a denylist. removeBlacklist(_clearedUser) - BESPOKE: removes a user from a denylist serves, effectively unfreezing a user account. destroyBlackFunds(_blackListedUser) - BESPOKE: burns tokens of a blacklisted address. transfer(_from, _value) - ERC20: transfer tokens from one user to another. transferFrom(_from, _to, _value) - ERC20: Transfers tokens from one address to another, usually called in conjunction with the approve function. approve(_spender, _value) - ERC20: this function approves an address or contracts to use funds on behalf of another user. transferOwnership(newOwner) - OWNABLE: transfers the owner of the contracts to another address. setParams(newBasisPoints, newMaxFee) - This is BESPOKE: functionality that sets specific params on the contract, probable something to do with earning on each transaction; currently, both are zero. deprecate(_upgradedAddress) - BESPOKE: this function is used as part of an upgradability pattern and sets a previous contract as deprecated. The use of this pattern is specific to the upgrading of Ethereum contracts. The reasons for this e are explained in this Coinbase design blog post USDC ERC-20 smart contracts Source This analysis used this definition of the USDC ERC-20 smart contract . This is found at 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 Analysis The USDC contract is more complex than USDT, but like USDT, the functions are based upon five function types: Tokens freezing. Tokens minting/burning. RBAC. User denylisting. Upgrades, using a Delegate Proxy pattern. Roles Unlike USDT, USDC has more granular permissions. There are FIVE roles, each comprising one address: OWNER - owner owns the contract and can call admin functions. BLACKLISTER - can add and remove users from a blacklist. MASTERMINTER - can add and remove minters and update minter allowances. RESCUER - can rescue funds from a user, currently a NULL address. PAUSER - can call the pause and unpause functions on the contract. Functions mint(_to, _amount) - MINTABLE: mint tokens to a given user. burn(_amount) - BURNABLE: burns a certain number of tokens. pause - PAUSABLE: pauses the token transfers in the contract, only callable by the owner. unpause - PAUSABLE: unpauses token transfers only callable. blacklist(_account) - BESPOKE: this function freezes a user's assets by adding the address to a denylist. unBlacklist(_account) - BESPOKE: removes a user from a denylist serves as freezing an accounts. rescueERC20(tokenContract, to, amount) - BESPOKE: function to rescue funds. transfer(_from, _value) - ERC20: transfer tokens from one user to another. transferFrom(_from, _to, _value) - ERC20: Transfers tokens from one address to another, usually called in conjunction with the approve function. approve(_spender, _value) - ERC20: this function approves an address or contract to use funds on behalf of another user. transferOwnership(newOwner) - OWNABLE: transfers the owner of the contracts to another address. transferWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s) - BESPOKE : This allows a user to send tokens with a signature from another user. cancelAuthorization(authoriser, nonce, v, r, s) - BESPOKE: This stops a user from sending tokens with a signature from a user. configureMinter(minter, minterAllowedAmount) - BESPOKE: allows a minter to mint a certain amount of tokens. increaseAllowance(spender, increment) - BESPOKE: This increases the amount a user can spend per transaction for another user. decreaseAllowance(spender, decrement) - BESPOKE: This decreases the amount a user can spend per transaction for another user. recieveWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s) - BESPOKE : This allows a user to send tokens with a signature from a user. removeMinter(minter) - RBAC: removes an address from the minter role callable by MASTERMINTER . updateBlacklister(_newBlacklister) - RBAC: update the admin role BLACKLIST . updateMasterMinter(_newMasterMinter) - RBAC: update the admin role MASTERMINTER . updatePauser(_newPauser) - RBAC: update the admin role PAUSER . updateRescuer(newRescuer) - RBAC: update the admin role RESCUER . initialize(tokenName, tokenSymbol, tokenCurrency, tokenDecimals, newMasterMinter, newPauser, newBlacklister, newOwner) - PROXY: This functionality is used as part of the delegate proxy pattern. It initialises the smart contract and allows delegate proxy functionality. The use of this pattern is specific to the upgrading of Ethereum contracts. The reasons for this e are explained in this Coinbase design blog post . initializeV2(string) - PROXY: This functionality is used as part of the delegate proxy pattern; it initialises the contract and allows delegate proxy functionality. initializeV2_1(newName) - PROXY: This functionality is used as part of the delegate proxy pattern; it initialises the contract and allows delegate proxy functionality. Cosmos Cash Issuer Module Source This analysis is based on the Cosmos Cash proof of concept issuer implementation . Functions createIssuer(token, fee, owner) - This creates an issuer and a token. This initialises the token, and the issuer is the token owner. This is where we could define the token\u2019s PAUSER, BLACKLISTER, MASTERMINTER or other ROLES. mintToken(amount, owner) - mints new tokens to the owner\u2019s address. burnToken(amount, owner) - removes tokens from the owner\u2019s address. Gap Analysis The gap between the issuer module and the USDC and USDT smart contracts is not significant. For the Issuer module to be compatible with EVM based smart contracts, the following features must be implemented. BESPOKE: Blockedlist The blocklist functionality is adding and removing a user from a blocked list addToBlockedList removeFromBlocklist burnBlockedlistTokens PAUSABLE: Freeze/Pause token Freeze token functionality is a kill switch that stops all trading with an issuer token freezeToken/pauseToken unfreezeToken/unpauseToken RBAC: A Role-Based Access Control credential system is required to interact with the contract or module. There are different implementation options available: Defining admin roles in the genesis block. This could be implemented using Decentralized IDentity and public verifiable credentials such that: The verifiable credential can be issued by a regulator actor or DID to an issuer DID. The verifiable credential can allow minting and burning of tokens plus other functions The Issuer DID can have multiple DID controllers who can represent different functions in the issuers, such as Operations and Compliance. ERC20: Some ERC20 token functions are not in the SDK bank module - transferFrom(to, from, amount) - approve(address)","title":"USDC vs USDT vs Cosmos Cash Issuer"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#usdc-vs-usdt-vs-cosmos-cash-issuer","text":"USDC vs USDT vs Cosmos Cash Issuer Summary Methodology TL;DR; USDT ERC20 Smart Contracts Source Analysis Roles Functions USDC ERC-20 smart contracts Source Analysis Roles Functions Cosmos Cash Issuer Module Source Functions Gap Analysis","title":"USDC vs USDT vs Cosmos Cash Issuer"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#summary","text":"USDC and USDT are both Ethereum, ERC-20 smart contract-based stablecoins pegged one-to-one to the US Dollar (USD). However, each USD-backed stablecoin has different implementations. This article will Perform a high-level functional gap analysis of each smart contract Compare to the current Cosmos Cash proof-of-concept implementation Conclude best practices that will inform the Issuer ADR for Cosmos Cash. Why USDT and USDC? These are currently the leading stablecoin tokens with total market capitalisation of over 90Bn USD (source: coinmarketcap.com)","title":"Summary"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#methodology","text":"Each function is labelled based on the following criteria: BESPOKE: custom functionality ERC20 : part of the ERC20 standard PAUSABLE : part of the solidity pausable contract standard OWNABLE : part of the solidity ownable contract standard PROXY : these functions are part of Solidity\u2019s delegate proxy upgradability pattern MINTABLE : part of the solidity mintable contract standard BURNABLE : part of the solidity burnable contract standard RBAC : part of the solidity roles contract standard","title":"Methodology"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#tldr","text":"Label USDT USDC Cosmos Cash Issuer Mintable issue(amount) mint(_to, _amount) mintToken(amount, owner) Burnable redeem(amount) burn(_amount) burnToken(amount, owner) Pausable pause pause TO DO Pausable unpause unpause TO DO blacklist addBlacklist blacklist(_account) TO DO blacklist removeBlacklist(_clearedUser) unBlacklist(_account) TO DO blacklist destroyBlackFunds(_blackListedUser) n/a TO DO blacklist n/a rescueERC20(tokenContract, to, amount) TO DO ERC20 transfer(_from, _value) transfer(_from, _value) ERC20 transferFrom(_from, _to, _value) transferFrom(_from, _to, _value) ERC20 approve(_spender, _value) approve(_spender, _value) Ownable transferOwnership(newOwner) transferOwnership(newOwner) Bespoke setParams(newBasisPoints, newMaxFee) n/a Bespoke n/a transferWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s) Bespoke n/a configureMinter(minter, minterAllowedAmount) Bespoke n/a receiveWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s) Bespoke n/a cancelAuthorization(authorizer, nonce, v, r, s) RBAC increaseAllowance(spender, increment) RBAC decreaseAllowance(spender, decrement) RBAC n/a removeMinter(minter) RBAC n/a updateBlacklister(_newBlacklister) RBAC n/a updateMasterMinter(_newMasterMinter) RBAC n/a updatePauser(_newPauser) RBAC n/a updateRescuer(newRescuer) Proxy n/a initialize(tokenName, tokenSymbol, tokenCurrency, tokenDecimals, newMasterMinter, newPauser, newBlacklister, newOwner) createIssuer(token, fee, owner) Proxy n/a initializeV2(string) Proxy n/a initializeV2_1(newName) Proxy deprecate(_upgradedAddress) n/a","title":"TL;DR;"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#usdt-erc20-smart-contracts","text":"","title":"USDT ERC20 Smart Contracts"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#source","text":"This analysis used this definition of the USDT ERC-20 smart contract . This is found at 0xdac17f958d2ee523a2206206994597c13d831ec7","title":"Source"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#analysis","text":"The USDT smart contracts have five main areas of note: Tokens freezing PAUASABLE Tokens minting, burning MINTABLE, BURNABLE Role-Based Access Control User denylisting Upgrading function (albeit limited)","title":"Analysis"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#roles","text":"This contract has admin privileges for TWO roles, each comprising of one address: OWNER - owner owns the contract and can call admin functions BLACKLISTER - can add and remove users from a blacklist","title":"Roles"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#functions","text":"issue(amount) - BESPOKE/MINTABLE: mints a certain amount of tokens. redeem(amount) - BESPOKE/BURNABLE: redeems or burns an amount tokens. pause - PAUSABLE: pauses the token transfers. This function can only be called by the contract owner, the issuer of USDT tokens. unpause - PAUSABLE: unpauses token transfers only callable by the token. addBlacklist(_evilUser) - BESPOKE: this function freezes a user's assets by adding an address to a denylist. removeBlacklist(_clearedUser) - BESPOKE: removes a user from a denylist serves, effectively unfreezing a user account. destroyBlackFunds(_blackListedUser) - BESPOKE: burns tokens of a blacklisted address. transfer(_from, _value) - ERC20: transfer tokens from one user to another. transferFrom(_from, _to, _value) - ERC20: Transfers tokens from one address to another, usually called in conjunction with the approve function. approve(_spender, _value) - ERC20: this function approves an address or contracts to use funds on behalf of another user. transferOwnership(newOwner) - OWNABLE: transfers the owner of the contracts to another address. setParams(newBasisPoints, newMaxFee) - This is BESPOKE: functionality that sets specific params on the contract, probable something to do with earning on each transaction; currently, both are zero. deprecate(_upgradedAddress) - BESPOKE: this function is used as part of an upgradability pattern and sets a previous contract as deprecated. The use of this pattern is specific to the upgrading of Ethereum contracts. The reasons for this e are explained in this Coinbase design blog post","title":"Functions"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#usdc-erc-20-smart-contracts","text":"","title":"USDC ERC-20 smart contracts"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#source_1","text":"This analysis used this definition of the USDC ERC-20 smart contract . This is found at 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","title":"Source"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#analysis_1","text":"The USDC contract is more complex than USDT, but like USDT, the functions are based upon five function types: Tokens freezing. Tokens minting/burning. RBAC. User denylisting. Upgrades, using a Delegate Proxy pattern.","title":"Analysis"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#roles_1","text":"Unlike USDT, USDC has more granular permissions. There are FIVE roles, each comprising one address: OWNER - owner owns the contract and can call admin functions. BLACKLISTER - can add and remove users from a blacklist. MASTERMINTER - can add and remove minters and update minter allowances. RESCUER - can rescue funds from a user, currently a NULL address. PAUSER - can call the pause and unpause functions on the contract.","title":"Roles"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#functions_1","text":"mint(_to, _amount) - MINTABLE: mint tokens to a given user. burn(_amount) - BURNABLE: burns a certain number of tokens. pause - PAUSABLE: pauses the token transfers in the contract, only callable by the owner. unpause - PAUSABLE: unpauses token transfers only callable. blacklist(_account) - BESPOKE: this function freezes a user's assets by adding the address to a denylist. unBlacklist(_account) - BESPOKE: removes a user from a denylist serves as freezing an accounts. rescueERC20(tokenContract, to, amount) - BESPOKE: function to rescue funds. transfer(_from, _value) - ERC20: transfer tokens from one user to another. transferFrom(_from, _to, _value) - ERC20: Transfers tokens from one address to another, usually called in conjunction with the approve function. approve(_spender, _value) - ERC20: this function approves an address or contract to use funds on behalf of another user. transferOwnership(newOwner) - OWNABLE: transfers the owner of the contracts to another address. transferWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s) - BESPOKE : This allows a user to send tokens with a signature from another user. cancelAuthorization(authoriser, nonce, v, r, s) - BESPOKE: This stops a user from sending tokens with a signature from a user. configureMinter(minter, minterAllowedAmount) - BESPOKE: allows a minter to mint a certain amount of tokens. increaseAllowance(spender, increment) - BESPOKE: This increases the amount a user can spend per transaction for another user. decreaseAllowance(spender, decrement) - BESPOKE: This decreases the amount a user can spend per transaction for another user. recieveWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s) - BESPOKE : This allows a user to send tokens with a signature from a user. removeMinter(minter) - RBAC: removes an address from the minter role callable by MASTERMINTER . updateBlacklister(_newBlacklister) - RBAC: update the admin role BLACKLIST . updateMasterMinter(_newMasterMinter) - RBAC: update the admin role MASTERMINTER . updatePauser(_newPauser) - RBAC: update the admin role PAUSER . updateRescuer(newRescuer) - RBAC: update the admin role RESCUER . initialize(tokenName, tokenSymbol, tokenCurrency, tokenDecimals, newMasterMinter, newPauser, newBlacklister, newOwner) - PROXY: This functionality is used as part of the delegate proxy pattern. It initialises the smart contract and allows delegate proxy functionality. The use of this pattern is specific to the upgrading of Ethereum contracts. The reasons for this e are explained in this Coinbase design blog post . initializeV2(string) - PROXY: This functionality is used as part of the delegate proxy pattern; it initialises the contract and allows delegate proxy functionality. initializeV2_1(newName) - PROXY: This functionality is used as part of the delegate proxy pattern; it initialises the contract and allows delegate proxy functionality.","title":"Functions"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#cosmos-cash-issuer-module","text":"","title":"Cosmos Cash Issuer Module"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#source_2","text":"This analysis is based on the Cosmos Cash proof of concept issuer implementation .","title":"Source"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#functions_2","text":"createIssuer(token, fee, owner) - This creates an issuer and a token. This initialises the token, and the issuer is the token owner. This is where we could define the token\u2019s PAUSER, BLACKLISTER, MASTERMINTER or other ROLES. mintToken(amount, owner) - mints new tokens to the owner\u2019s address. burnToken(amount, owner) - removes tokens from the owner\u2019s address.","title":"Functions"},{"location":"Explanation/topics/Compare%20USDC%20vs%20USDT%20vs%20CASH-ISSUER/#gap-analysis","text":"The gap between the issuer module and the USDC and USDT smart contracts is not significant. For the Issuer module to be compatible with EVM based smart contracts, the following features must be implemented. BESPOKE: Blockedlist The blocklist functionality is adding and removing a user from a blocked list addToBlockedList removeFromBlocklist burnBlockedlistTokens PAUSABLE: Freeze/Pause token Freeze token functionality is a kill switch that stops all trading with an issuer token freezeToken/pauseToken unfreezeToken/unpauseToken RBAC: A Role-Based Access Control credential system is required to interact with the contract or module. There are different implementation options available: Defining admin roles in the genesis block. This could be implemented using Decentralized IDentity and public verifiable credentials such that: The verifiable credential can be issued by a regulator actor or DID to an issuer DID. The verifiable credential can allow minting and burning of tokens plus other functions The Issuer DID can have multiple DID controllers who can represent different functions in the issuers, such as Operations and Compliance. ERC20: Some ERC20 token functions are not in the SDK bank module - transferFrom(to, from, amount) - approve(address)","title":"Gap Analysis"},{"location":"How-To/","text":"How-to guides The How-To folder contains how-to guides for different aspects of the Cosmos Cash project. Additional resources are in the seed scripts folder.","title":"How-to guides"},{"location":"How-To/#how-to-guides","text":"The How-To folder contains how-to guides for different aspects of the Cosmos Cash project. Additional resources are in the seed scripts folder.","title":"How-to guides"},{"location":"How-To/chain_001_faucet/","text":"Get Testnet Tokens (Faucet) The Cosmos Cash native token denom is cash . A keypair is created with the following command: cosmos-cashd keys add alice To obtain obtain cash tokens for the alice account from the testnet faucet, use the following command: curl -X POST \\ -d \"{\\\"address\\\": \\\"$(cosmos-cashd keys show alice -a)\\\"}\" \\ https://faucet.cosmos-cash.app.beta.starport.cloud","title":"Get Testnet Tokens (Faucet)"},{"location":"How-To/chain_001_faucet/#get-testnet-tokens-faucet","text":"The Cosmos Cash native token denom is cash . A keypair is created with the following command: cosmos-cashd keys add alice To obtain obtain cash tokens for the alice account from the testnet faucet, use the following command: curl -X POST \\ -d \"{\\\"address\\\": \\\"$(cosmos-cashd keys show alice -a)\\\"}\" \\ https://faucet.cosmos-cash.app.beta.starport.cloud","title":"Get Testnet Tokens (Faucet)"},{"location":"How-To/general_001_swagger/","text":"Swagger This how-to section is dedicated to the Swagger documentation that is bundled with the project. Note: The Swagger API is supported only as a useful method to query the node data. The Swagger API cannot be used to submit transactions to the node. Generate the Swagger UI The Swagger UI is generated from the protobuf files in the proto folder in the root of the project To generate or refresh the swagger UI, run the following command from the project's root folder: ./scripts/protoc-swagger-gen.sh Bundle the generate swagger UI as go package: cd ./docs/Reference/swagger statik -f -src=./swagger-ui Enable Swagger UI Swagger UI is disabled by default. Use the app.toml file to enable Swagger support. The default location of the app.toml file is the current user home directory: ~/.cosmos-cash/config/app.toml In the API Configuration section, make sure the variables are set to true as shown in the following example: ############################################################################### ### API Configuration ### ############################################################################### [api] # Enable defines if the API server should be enabled. enable = true # <- this must be set to true # Swagger defines if swagger documentation should automatically be registered. swagger = true # <- this must be set to true Finally restart the node. The swagger UI should be available at the address http://localhost:1317/swagger/","title":"Swagger"},{"location":"How-To/general_001_swagger/#swagger","text":"This how-to section is dedicated to the Swagger documentation that is bundled with the project. Note: The Swagger API is supported only as a useful method to query the node data. The Swagger API cannot be used to submit transactions to the node.","title":"Swagger"},{"location":"How-To/general_001_swagger/#generate-the-swagger-ui","text":"The Swagger UI is generated from the protobuf files in the proto folder in the root of the project To generate or refresh the swagger UI, run the following command from the project's root folder: ./scripts/protoc-swagger-gen.sh Bundle the generate swagger UI as go package: cd ./docs/Reference/swagger statik -f -src=./swagger-ui","title":"Generate the Swagger UI"},{"location":"How-To/general_001_swagger/#enable-swagger-ui","text":"Swagger UI is disabled by default. Use the app.toml file to enable Swagger support. The default location of the app.toml file is the current user home directory: ~/.cosmos-cash/config/app.toml In the API Configuration section, make sure the variables are set to true as shown in the following example: ############################################################################### ### API Configuration ### ############################################################################### [api] # Enable defines if the API server should be enabled. enable = true # <- this must be set to true # Swagger defines if swagger documentation should automatically be registered. swagger = true # <- this must be set to true Finally restart the node. The swagger UI should be available at the address http://localhost:1317/swagger/","title":"Enable Swagger UI"},{"location":"Networks/testnet/","text":"Testnet A Cosmos Cash testnet is available for testing purposes. Use these Cosmos Cash testnet coordinates and satellite project URLs: Testnet Coordinates Chain ID cosmsoscash-testnet Token Denom cash Genesis File cosmos-cash.app.beta.starport.cloud/genesis RPC URL https://rpc.cosmos-cash.app.beta.starport.cloud:443 Faucet The faucet endpoint is used to get tokens to pay for transaction gas. Faucet URL https://faucet.cosmos-cash.app.beta.starport.cloud DID Resolver URLs for ( DID ) resolution in the Cosmos Cash network. DID resolver driver https://resolver-driver.cosmos-cash.app.beta.starport.cloud/identifier/ DID resolver frontend https://uniresolver.cosmos-cash.app.beta.starport.cloud SSI Agent Router URLs to connect to an SSI Agent that uses also Cosmos Cash as a verifiable data registry (VDR). Router Inbound Endpoint https://in.agent.cosmos-cash.app.beta.starport.cloud/identifier/ Router WSS https://ws.agent.cosmos-cash.app.beta.starport.cloud","title":"Testnet"},{"location":"Networks/testnet/#testnet","text":"A Cosmos Cash testnet is available for testing purposes. Use these Cosmos Cash testnet coordinates and satellite project URLs:","title":"Testnet"},{"location":"Networks/testnet/#testnet-coordinates","text":"Chain ID cosmsoscash-testnet Token Denom cash Genesis File cosmos-cash.app.beta.starport.cloud/genesis RPC URL https://rpc.cosmos-cash.app.beta.starport.cloud:443","title":"Testnet Coordinates"},{"location":"Networks/testnet/#faucet","text":"The faucet endpoint is used to get tokens to pay for transaction gas. Faucet URL https://faucet.cosmos-cash.app.beta.starport.cloud","title":"Faucet"},{"location":"Networks/testnet/#did-resolver","text":"URLs for ( DID ) resolution in the Cosmos Cash network. DID resolver driver https://resolver-driver.cosmos-cash.app.beta.starport.cloud/identifier/ DID resolver frontend https://uniresolver.cosmos-cash.app.beta.starport.cloud","title":"DID Resolver"},{"location":"Networks/testnet/#ssi-agent-router","text":"URLs to connect to an SSI Agent that uses also Cosmos Cash as a verifiable data registry (VDR). Router Inbound Endpoint https://in.agent.cosmos-cash.app.beta.starport.cloud/identifier/ Router WSS https://ws.agent.cosmos-cash.app.beta.starport.cloud","title":"SSI Agent Router"},{"location":"Reference/","text":"Reference Documentation How to use the Cosmos Cash Reference Documentation. Reference Documentation Introduction Contributing Layout Reference Introduction This section contains Reference documentation for Cosmos Cash. Reference Documentation is intended to be information-oriented . Content must allow the reader to easily navigate the content and use the content in conjunction with the code. This documentation describes the machinery, for example, classes, functions, interfaces, parameters, and so on. For further information please see the ADR relating to the documentation structure . Contributing The content must be dry, clear, and terse in style. All documentation should be written following Google Documentation Best Practice Generate as much documentation as possible from the code. Raise a PR for all documentation changes Layout Reference Documentation will come in various forms: Architecture diagrams - Diagrams must be in SVG format so that the diagrams can remain crisp and clear at any resolution or size, stored in GitHub, and version controlled. Module specifications and designs - By convention, module documentation in the Cosmos SDK is stored with the module itself. However, we propose that the easiest way for a new user to find documentation is to store the documentation at the root docs folder. To accomodate this module, the documentation will follow the existing convention, but the content will be reference from this section. Code-level documentation - The text that is part of the code and is used to auto-generate the documentation from the code. API reference - Including REST and gRPC endpoints. Glossary - a dictionary of domain-relevant terms. This glossary can be used in conjunction with the Cosmos Network Glossary . Reference Google Style Guide for Markdown Write the Docs global community Write the Docs Code of Conduct","title":"Reference Documentation"},{"location":"Reference/#reference-documentation","text":"How to use the Cosmos Cash Reference Documentation. Reference Documentation Introduction Contributing Layout Reference","title":"Reference Documentation"},{"location":"Reference/#introduction","text":"This section contains Reference documentation for Cosmos Cash. Reference Documentation is intended to be information-oriented . Content must allow the reader to easily navigate the content and use the content in conjunction with the code. This documentation describes the machinery, for example, classes, functions, interfaces, parameters, and so on. For further information please see the ADR relating to the documentation structure .","title":"Introduction"},{"location":"Reference/#contributing","text":"The content must be dry, clear, and terse in style. All documentation should be written following Google Documentation Best Practice Generate as much documentation as possible from the code. Raise a PR for all documentation changes","title":"Contributing"},{"location":"Reference/#layout","text":"Reference Documentation will come in various forms: Architecture diagrams - Diagrams must be in SVG format so that the diagrams can remain crisp and clear at any resolution or size, stored in GitHub, and version controlled. Module specifications and designs - By convention, module documentation in the Cosmos SDK is stored with the module itself. However, we propose that the easiest way for a new user to find documentation is to store the documentation at the root docs folder. To accomodate this module, the documentation will follow the existing convention, but the content will be reference from this section. Code-level documentation - The text that is part of the code and is used to auto-generate the documentation from the code. API reference - Including REST and gRPC endpoints. Glossary - a dictionary of domain-relevant terms. This glossary can be used in conjunction with the Cosmos Network Glossary .","title":"Layout"},{"location":"Reference/#reference","text":"Google Style Guide for Markdown Write the Docs global community Write the Docs Code of Conduct","title":"Reference"},{"location":"Reference/GLOSSARY/","text":"GLOSSARY A Asset-referenced tokens (ART) Several fiat currencies, one or several commodities or one or several crypto-assets, or a combination of such assets (the so called \u201creserve assets\u201d) within the MiCA context. B C Crypto-asset service provider (CASP) Any person whose occupation or business is the provision of one or more crypto-asset services to third parties on a professional basis. D Decentralized Identifier (DID) W3C defines a Decentralized Identifier (DID) as a portable URL-based identifier ... associated with an entity ... An example of a DID is did:example:123456abcdef\"* E-money tokens (EMT) A type of crypto asset for one single fiat currency L Legal Person Any person or entity that is able to perform legal activities, such as enter into contracts, own property, and so on M Market in Crypto-Assets (MiCA) Legislation that covers crypto assets in the European Union R Regulator An entity that is established by governments or other organizations to oversee the functioning and fairness of financial markets and the firms that engage in financial activity. S Self-sovereign identity (SSI) An approach to digital identity that gives individuals control of their digital identities V Verifiable credential (VC) A standard data model and representation format for cryptographically-verifiable digital credentials defined by the W3C Verifiable Credentials specification Verifiable data registry (VDR) A system that facilitates the creation, verification, updating, and/or deactivation of decentralized identifiers and DID documents. A verifiable data registry might also be used for other cryptographically-verifiable data structures such as verifiable credentials. Verifiable presentation (VP) A tamper-evident presentation encoded in such a way that authorship of the data can be trusted after a process of cryptographic verification Virtual Asset Service Provider (VASP) FATF defines a virtual asset service provider (VASP) as the following: \u201cAny natural/legal person who ... as a business conducts one or more of the following activities or operations for or on behalf of another natural or legal person: i. exchange between virtual assets and fiat currencies; ii. exchange between one or more forms of virtual assets; iii. transfer of virtual assets; iv. safekeeping and/or administration of virtual assets or instruments enabling control over virtual assets; and v. participation in and provision of financial services related to an issuer\u2019s offer and/or sale of a virtual asset.\u201d FATF guidance to the G20 Z Zero-knowledge Proof (ZKP) In cryptography, a zero-knowledge proof or zero-knowledge protocol is a method by which one party (the prover) can prove to another party (the verifier) that a given statement is true, without conveying any information apart from the fact that the statement is indeed true. The essence of zero-knowledge proofs is that it is trivial to prove that one possesses knowledge of certain information by simply revealing it; the challenge is to prove such possession without revealing the information itself or any additional information ( Zero-knowledge proof on wikipedia ). a","title":"GLOSSARY"},{"location":"Reference/GLOSSARY/#glossary","text":"","title":"GLOSSARY"},{"location":"Reference/GLOSSARY/#a","text":"","title":"A"},{"location":"Reference/GLOSSARY/#asset-referenced-tokens-art","text":"Several fiat currencies, one or several commodities or one or several crypto-assets, or a combination of such assets (the so called \u201creserve assets\u201d) within the MiCA context.","title":"Asset-referenced tokens (ART)"},{"location":"Reference/GLOSSARY/#b","text":"","title":"B"},{"location":"Reference/GLOSSARY/#c","text":"","title":"C"},{"location":"Reference/GLOSSARY/#crypto-asset-service-provider-casp","text":"Any person whose occupation or business is the provision of one or more crypto-asset services to third parties on a professional basis.","title":"Crypto-asset service provider (CASP)"},{"location":"Reference/GLOSSARY/#d","text":"","title":"D"},{"location":"Reference/GLOSSARY/#decentralized-identifier-did","text":"W3C defines a Decentralized Identifier (DID) as a portable URL-based identifier ... associated with an entity ... An example of a DID is did:example:123456abcdef\"*","title":"Decentralized Identifier (DID)"},{"location":"Reference/GLOSSARY/#e-money-tokens-emt","text":"A type of crypto asset for one single fiat currency","title":"E-money tokens (EMT)"},{"location":"Reference/GLOSSARY/#l","text":"","title":"L"},{"location":"Reference/GLOSSARY/#legal-person","text":"Any person or entity that is able to perform legal activities, such as enter into contracts, own property, and so on","title":"Legal Person"},{"location":"Reference/GLOSSARY/#m","text":"","title":"M"},{"location":"Reference/GLOSSARY/#market-in-crypto-assets-mica","text":"Legislation that covers crypto assets in the European Union","title":"Market in Crypto-Assets (MiCA)"},{"location":"Reference/GLOSSARY/#r","text":"","title":"R"},{"location":"Reference/GLOSSARY/#regulator","text":"An entity that is established by governments or other organizations to oversee the functioning and fairness of financial markets and the firms that engage in financial activity.","title":"Regulator"},{"location":"Reference/GLOSSARY/#s","text":"","title":"S"},{"location":"Reference/GLOSSARY/#self-sovereign-identity-ssi","text":"An approach to digital identity that gives individuals control of their digital identities","title":"Self-sovereign identity (SSI)"},{"location":"Reference/GLOSSARY/#v","text":"","title":"V"},{"location":"Reference/GLOSSARY/#verifiable-credential-vc","text":"A standard data model and representation format for cryptographically-verifiable digital credentials defined by the W3C Verifiable Credentials specification","title":"Verifiable credential (VC)"},{"location":"Reference/GLOSSARY/#verifiable-data-registry-vdr","text":"A system that facilitates the creation, verification, updating, and/or deactivation of decentralized identifiers and DID documents. A verifiable data registry might also be used for other cryptographically-verifiable data structures such as verifiable credentials.","title":"Verifiable data registry (VDR)"},{"location":"Reference/GLOSSARY/#verifiable-presentation-vp","text":"A tamper-evident presentation encoded in such a way that authorship of the data can be trusted after a process of cryptographic verification","title":"Verifiable presentation (VP)"},{"location":"Reference/GLOSSARY/#virtual-asset-service-provider-vasp","text":"FATF defines a virtual asset service provider (VASP) as the following: \u201cAny natural/legal person who ... as a business conducts one or more of the following activities or operations for or on behalf of another natural or legal person: i. exchange between virtual assets and fiat currencies; ii. exchange between one or more forms of virtual assets; iii. transfer of virtual assets; iv. safekeeping and/or administration of virtual assets or instruments enabling control over virtual assets; and v. participation in and provision of financial services related to an issuer\u2019s offer and/or sale of a virtual asset.\u201d FATF guidance to the G20","title":"Virtual Asset Service Provider (VASP)"},{"location":"Reference/GLOSSARY/#z","text":"","title":"Z"},{"location":"Reference/GLOSSARY/#zero-knowledge-proof-zkp","text":"In cryptography, a zero-knowledge proof or zero-knowledge protocol is a method by which one party (the prover) can prove to another party (the verifier) that a given statement is true, without conveying any information apart from the fact that the statement is indeed true. The essence of zero-knowledge proofs is that it is trivial to prove that one possesses knowledge of certain information by simply revealing it; the challenge is to prove such possession without revealing the information itself or any additional information ( Zero-knowledge proof on wikipedia ). a","title":"Zero-knowledge Proof (ZKP)"},{"location":"Reference/MODULES/","text":"Cosmos Cash Modules Cosmos Cash Modules DID Module Verifiable Credential Module Regulator Module Issuer module The Cosmos Cash project is composed of modules. The following diagram illustrates the module dependencies: DID Module The decentralized identifier (DID) module implements the Cosmos DID method and is responsible for all the operations around DIDs. Source Module docs Dependencies: None Verifiable Credential Module The verifiable credential module is responsible for operations around verifiable credentials. It provides limited interaction and it is main function is to provide access to shared credential storage and security around verifiable credential proof validation. Source Module docs Dependencies: DID Module Account Module Regulator Module The regulator module implements the root of trust logic to issue registration and license credentials. Source Module docs Dependencies: Verifiable Credential Module Issuer module The issuer module implements the logic for issuing fiat-backed stablecoins Source Module docs Dependencies: DID Module Verifiable Credential Module Bank module","title":"Cosmos Cash Modules"},{"location":"Reference/MODULES/#cosmos-cash-modules","text":"Cosmos Cash Modules DID Module Verifiable Credential Module Regulator Module Issuer module The Cosmos Cash project is composed of modules. The following diagram illustrates the module dependencies:","title":"Cosmos Cash Modules"},{"location":"Reference/MODULES/#did-module","text":"The decentralized identifier (DID) module implements the Cosmos DID method and is responsible for all the operations around DIDs. Source Module docs Dependencies: None","title":"DID Module"},{"location":"Reference/MODULES/#verifiable-credential-module","text":"The verifiable credential module is responsible for operations around verifiable credentials. It provides limited interaction and it is main function is to provide access to shared credential storage and security around verifiable credential proof validation. Source Module docs Dependencies: DID Module Account Module","title":"Verifiable Credential Module"},{"location":"Reference/MODULES/#regulator-module","text":"The regulator module implements the root of trust logic to issue registration and license credentials. Source Module docs Dependencies: Verifiable Credential Module","title":"Regulator Module"},{"location":"Reference/MODULES/#issuer-module","text":"The issuer module implements the logic for issuing fiat-backed stablecoins Source Module docs Dependencies: DID Module Verifiable Credential Module Bank module","title":"Issuer module"},{"location":"Reference/architecture/","text":"Architecture Overview Architecture documentation is based on PlantUML that comes with lots of documentation and examples. Diagrams are created through text-based documents ( .puml files) that are then rendered into an appropriate format like Pandoc Markdown is used to generate PDFs and HTML output. PlantUML was chosen as the architecture medium for a number of reasons, of which the most important are: It supports a number of different types of diagram: class, sequence, activity, ERM ... Diagrams can be stored with the codebase and documentation rather in a separate system such as Whimsical and then imported as needed into documentation. To contribute, see CONTRIBUTING .","title":"Architecture"},{"location":"Reference/architecture/#architecture","text":"","title":"Architecture"},{"location":"Reference/architecture/#overview","text":"Architecture documentation is based on PlantUML that comes with lots of documentation and examples. Diagrams are created through text-based documents ( .puml files) that are then rendered into an appropriate format like Pandoc Markdown is used to generate PDFs and HTML output. PlantUML was chosen as the architecture medium for a number of reasons, of which the most important are: It supports a number of different types of diagram: class, sequence, activity, ERM ... Diagrams can be stored with the codebase and documentation rather in a separate system such as Whimsical and then imported as needed into documentation. To contribute, see CONTRIBUTING .","title":"Overview"},{"location":"Reference/architecture/CONTRIBUTING/","text":"CONTRIBUTING Installation Cosmos Cash diagrams are based on PlantUML. PlantUML can be installed on your local system through your platforms' package manager: MacOS, through Homebrew > brew install plantuml Windows, through Chocolatey > choco install plantuml Linux-based systems, through your distributions package manager Contributing diagrams The source code for all diagrams SHOULD be stored in ./src folder AND have the .puml suffix. See the PlanUML documentation for further details. Themes Where possible all diagrams are rendered to have a similar look and feel. To achieve this look and feel, add the following theme to your diagram: @startuml myDiagram !theme tendermint from ../themes/ ... @enduml How to generate diagram images There are many ways to run PlantUML to generate images from the .puml files, but this project prefers the following: PlantUML CLI Embed PlantUML diagrams using PlantUML's proxy service in Markdown Visual Studio Code Plugin - best for development PlantUML CLI The makefile builds all src/*.puml files. To create SVG images, run make (svg|png) as needed. Run make clean to get a clean folder ready for a new build. Using PlantUML and makefile is the preferred and cleanest way to create all the architecture documentation. Proxy service This method uses PlantUML's proxy service to put generate images and embed into a Markdown page. To use the proxy service integration, use: ![cached image](http://www.plantuml.com/plantuml/proxy?src=https://raw.github.com/plantuml/plantuml-server/master/src/main/webapp/resource/test2diagrams.txt) Or if caching is required: ![uncached image](http://www.plantuml.com/plantuml/proxy?cache=no&src=https://raw.github.com/plantuml/plantuml-server/master/src/main/webapp/resource/test2diagrams.txt) Visual Studio Code If you use Visual Studio Code , a PlantUML plugin is available. From here, you can preview diagrams by using the command palette (CTRL+SHIFT+P on Windows/Linux or COMMAND+SHIFT+P on macOS). > PlantUML: Preview Current Diagram Reference Markdown native diagrams with PlantUML PlantUML Cheatsheet PlantUML Theme Documentation Stackoverflow question on embedding PlantUML in Markdown","title":"CONTRIBUTING"},{"location":"Reference/architecture/CONTRIBUTING/#contributing","text":"","title":"CONTRIBUTING"},{"location":"Reference/architecture/CONTRIBUTING/#installation","text":"Cosmos Cash diagrams are based on PlantUML. PlantUML can be installed on your local system through your platforms' package manager: MacOS, through Homebrew > brew install plantuml Windows, through Chocolatey > choco install plantuml Linux-based systems, through your distributions package manager","title":"Installation"},{"location":"Reference/architecture/CONTRIBUTING/#contributing-diagrams","text":"The source code for all diagrams SHOULD be stored in ./src folder AND have the .puml suffix. See the PlanUML documentation for further details.","title":"Contributing diagrams"},{"location":"Reference/architecture/CONTRIBUTING/#themes","text":"Where possible all diagrams are rendered to have a similar look and feel. To achieve this look and feel, add the following theme to your diagram: @startuml myDiagram !theme tendermint from ../themes/ ... @enduml","title":"Themes"},{"location":"Reference/architecture/CONTRIBUTING/#how-to-generate-diagram-images","text":"There are many ways to run PlantUML to generate images from the .puml files, but this project prefers the following: PlantUML CLI Embed PlantUML diagrams using PlantUML's proxy service in Markdown Visual Studio Code Plugin - best for development","title":"How to generate diagram images"},{"location":"Reference/architecture/CONTRIBUTING/#plantuml-cli","text":"The makefile builds all src/*.puml files. To create SVG images, run make (svg|png) as needed. Run make clean to get a clean folder ready for a new build. Using PlantUML and makefile is the preferred and cleanest way to create all the architecture documentation.","title":"PlantUML CLI"},{"location":"Reference/architecture/CONTRIBUTING/#proxy-service","text":"This method uses PlantUML's proxy service to put generate images and embed into a Markdown page. To use the proxy service integration, use: ![cached image](http://www.plantuml.com/plantuml/proxy?src=https://raw.github.com/plantuml/plantuml-server/master/src/main/webapp/resource/test2diagrams.txt) Or if caching is required: ![uncached image](http://www.plantuml.com/plantuml/proxy?cache=no&src=https://raw.github.com/plantuml/plantuml-server/master/src/main/webapp/resource/test2diagrams.txt)","title":"Proxy service"},{"location":"Reference/architecture/CONTRIBUTING/#visual-studio-code","text":"If you use Visual Studio Code , a PlantUML plugin is available. From here, you can preview diagrams by using the command palette (CTRL+SHIFT+P on Windows/Linux or COMMAND+SHIFT+P on macOS). > PlantUML: Preview Current Diagram","title":"Visual Studio Code"},{"location":"Reference/architecture/CONTRIBUTING/#reference","text":"Markdown native diagrams with PlantUML PlantUML Cheatsheet PlantUML Theme Documentation Stackoverflow question on embedding PlantUML in Markdown","title":"Reference"},{"location":"Tutorials/","text":"","title":"Index"}]}