syntax = "proto3";
package allinbits.cosmoscash.did;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "did/did.proto";
import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/allinbits/cosmos-cash/v3/x/did/types";

// this line is used by starport scaffolding # 1

// Query defines the gRPC querier service.
service Query {
  // DidDocuments queries all did documents that match the given status.
  rpc DidDocuments(QueryDidDocumentsRequest) returns (QueryDidDocumentsResponse) {
    option (google.api.http).get = "/allinbits/did/dids";
  }
  // DidDocument queries a did documents with an id.
  rpc DidDocument(QueryDidDocumentRequest) returns (QueryDidDocumentResponse) {
    option (google.api.http).get = "/allinbits/did/dids/{id}";
  }

  // DidDocumentB64 queries a did document with a base64-url encoded did
  rpc DidDocumentB64(QueryDidDocumentB64Request) returns (QueryDidDocumentB64Response) {
    option (google.api.http).get = "/allinbits/did/dids/b64/{id_base64}";
  }
}

// QueryDidDocumentsRequest is request type for Query/DidDocuments RPC method.
message QueryDidDocumentsRequest {
  // status enables to query for validators matching a given status.
  string status = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDidDocumentsResponse is response type for the Query/DidDocuments RPC method
message QueryDidDocumentsResponse {
  // validators contains all the queried validators.
  repeated DidDocument didDocuments = 1  [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDidDocumentsRequest is request type for Query/DidDocuments RPC method.
message QueryDidDocumentRequest {
  // status enables to query for validators matching a given status.
  string id = 1;
}

// QueryDidDocumentsResponse is response type for the Query/DidDocuments RPC method
message QueryDidDocumentResponse {
  // validators contains all the queried validators.
  DidDocument didDocument = 1  [(gogoproto.nullable) = false];
  DidMetadata didMetadata = 2  [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3

// QueryDidDocumentsRequest is request type for Query/DidDocuments RPC method.
message QueryDidDocumentB64Request {
  string id_base64 = 1;
}

// QueryDidDocumentsResponse is response type for the Query/DidDocuments RPC method
message QueryDidDocumentB64Response {
  DidDocument didDocument = 1  [(gogoproto.nullable) = false];
  DidMetadata didMetadata = 2  [(gogoproto.nullable) = false];
}